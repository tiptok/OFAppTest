// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: OTIpcDef.proto

package main

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type IpcType int32

const (
	// 4.1 网约车平台公司基本信息接口
	IpcType_baseInfoCompany IpcType = 4097
	// 4.2 网约车平台公司营运规模信息信息接口
	IpcType_baseInfoCompanyStat IpcType = 4098
	// 4.3 网约车平台公司支付信息接口
	IpcType_baseInfoCompanyPay IpcType = 4099
	// 4.4 网约车平台公司服务机构接口
	IpcType_baseInfoCompanyService IpcType = 4100
	// 4.5 网约车平台公司经营许可接口
	IpcType_baseInfoCompanyPermit IpcType = 4101
	// 4.6 网约车平台公司运价信息接口
	IpcType_baseInfoCompanyFare IpcType = 4102
	// 4.7 车辆基本信息接口
	IpcType_baseInfoVehicle IpcType = 4103
	// 4.8 车辆保险信息接口
	IpcType_baseInfoVehicleInsurance IpcType = 4104
	// 4.9 网约车车辆里程信息接口
	IpcType_baseInfoVehicleTotalMile IpcType = 4105
	// 4.10 驾驶员基本信息接口
	IpcType_baseInfoDriver IpcType = 4112
	// 4.11 网约车驾驶员培训信息接口
	IpcType_baseInfoDriverEducate IpcType = 4113
	// 4.12 驾驶员移动终端信息接口
	IpcType_baseInfoDriverApp IpcType = 4114
	// 4.13 驾驶员统计信息接口
	IpcType_baseInfoDriverStat IpcType = 4115
	// 4.14 乘客基本信息接口
	IpcType_baseInfoPassenger IpcType = 4116
	// 5.1 订单发起接口
	IpcType_orderCreate IpcType = 8193
	// 5.2 订单成功接口
	IpcType_orderMatch IpcType = 8194
	// 5.3 订单撤销接口
	IpcType_orderCancel IpcType = 8195
	// 6.1 车辆运营上线接口
	IpcType_operateLogin IpcType = 12289
	// 6.2 车辆运营下线接口
	IpcType_operateLogout IpcType = 12290
	// 6.3 经营出发接口
	IpcType_operateDepart IpcType = 12291
	// 6.4 经营到达接口
	IpcType_operateArrive IpcType = 12292
	// 6.5 经营支付接口
	IpcType_operatePay IpcType = 12293
	// 7.1 驾驶员定位信息接口
	IpcType_positionDriver IpcType = 16385
	// 7.2 车辆定位信息接口
	IpcType_positionVehicle IpcType = 16386
	// 8.1 乘客评价信息接口
	IpcType_ratedPassenger IpcType = 20481
	// 8.2 乘客投诉信息接口
	IpcType_ratedPassengerComplaint IpcType = 20482
	// 8.3 驾驶员处罚信息接口
	IpcType_ratedDriverPunish IpcType = 20483
	// 8.4 驾驶员信誉信息接口
	IpcType_ratedDriver IpcType = 20484
	// 9.1 私人小客车合乘信息服务平台基本信息接口
	IpcType_shareCompany IpcType = 24577
	// 9.2 私人小客车合乘驾驶员行程发布接口
	IpcType_shareRoute IpcType = 24578
	// 9.3 私人小客车合乘订单接口
	IpcType_shareOrder IpcType = 24579
	// 9.4 私人小客车合乘订单支付接口
	IpcType_sharePay IpcType = 24580
)

var IpcType_name = map[int32]string{
	4097:  "baseInfoCompany",
	4098:  "baseInfoCompanyStat",
	4099:  "baseInfoCompanyPay",
	4100:  "baseInfoCompanyService",
	4101:  "baseInfoCompanyPermit",
	4102:  "baseInfoCompanyFare",
	4103:  "baseInfoVehicle",
	4104:  "baseInfoVehicleInsurance",
	4105:  "baseInfoVehicleTotalMile",
	4112:  "baseInfoDriver",
	4113:  "baseInfoDriverEducate",
	4114:  "baseInfoDriverApp",
	4115:  "baseInfoDriverStat",
	4116:  "baseInfoPassenger",
	8193:  "orderCreate",
	8194:  "orderMatch",
	8195:  "orderCancel",
	12289: "operateLogin",
	12290: "operateLogout",
	12291: "operateDepart",
	12292: "operateArrive",
	12293: "operatePay",
	16385: "positionDriver",
	16386: "positionVehicle",
	20481: "ratedPassenger",
	20482: "ratedPassengerComplaint",
	20483: "ratedDriverPunish",
	20484: "ratedDriver",
	24577: "shareCompany",
	24578: "shareRoute",
	24579: "shareOrder",
	24580: "sharePay",
}
var IpcType_value = map[string]int32{
	"baseInfoCompany":          4097,
	"baseInfoCompanyStat":      4098,
	"baseInfoCompanyPay":       4099,
	"baseInfoCompanyService":   4100,
	"baseInfoCompanyPermit":    4101,
	"baseInfoCompanyFare":      4102,
	"baseInfoVehicle":          4103,
	"baseInfoVehicleInsurance": 4104,
	"baseInfoVehicleTotalMile": 4105,
	"baseInfoDriver":           4112,
	"baseInfoDriverEducate":    4113,
	"baseInfoDriverApp":        4114,
	"baseInfoDriverStat":       4115,
	"baseInfoPassenger":        4116,
	"orderCreate":              8193,
	"orderMatch":               8194,
	"orderCancel":              8195,
	"operateLogin":             12289,
	"operateLogout":            12290,
	"operateDepart":            12291,
	"operateArrive":            12292,
	"operatePay":               12293,
	"positionDriver":           16385,
	"positionVehicle":          16386,
	"ratedPassenger":           20481,
	"ratedPassengerComplaint":  20482,
	"ratedDriverPunish":        20483,
	"ratedDriver":              20484,
	"shareCompany":             24577,
	"shareRoute":               24578,
	"shareOrder":               24579,
	"sharePay":                 24580,
}

func (x IpcType) Enum() *IpcType {
	p := new(IpcType)
	*p = x
	return p
}
func (x IpcType) String() string {
	return proto.EnumName(IpcType_name, int32(x))
}
func (x *IpcType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IpcType_value, data, "IpcType")
	if err != nil {
		return err
	}
	*x = IpcType(value)
	return nil
}
func (IpcType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{0}
}

// 4.1 网约车平台公司基本信息接口
type BaseInfoCompany struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 公司名称
	CompanyName *string `protobuf:"bytes,2,req,name=CompanyName" json:"CompanyName,omitempty"`
	// 统一社会信用代码
	Identifier *string `protobuf:"bytes,3,req,name=Identifier" json:"Identifier,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,4,req,name=Address" json:"Address,omitempty"`
	// 经营范围
	BusinessScope *string `protobuf:"bytes,5,req,name=BusinessScope" json:"BusinessScope,omitempty"`
	// 通讯地址
	ContactAddress *string `protobuf:"bytes,6,req,name=ContactAddress" json:"ContactAddress,omitempty"`
	// 经营业户经济类型
	EconomicType *string `protobuf:"bytes,7,req,name=EconomicType" json:"EconomicType,omitempty"`
	// 注册资本
	RegCapital *string `protobuf:"bytes,8,req,name=RegCapital" json:"RegCapital,omitempty"`
	// 法人代表姓名
	LegalName *string `protobuf:"bytes,9,req,name=LegalName" json:"LegalName,omitempty"`
	// 法人代表身份证号
	LegalID *string `protobuf:"bytes,10,req,name=LegalID" json:"LegalID,omitempty"`
	// 法人代表电话
	LegalPhone *string `protobuf:"bytes,11,req,name=LegalPhone" json:"LegalPhone,omitempty"`
	// 法人代表身份证扫描件文件编号
	LegalPhoto *string `protobuf:"bytes,12,opt,name=LegalPhoto" json:"LegalPhoto,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,13,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,14,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,15,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,16,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompany) Reset()         { *m = BaseInfoCompany{} }
func (m *BaseInfoCompany) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompany) ProtoMessage()    {}
func (*BaseInfoCompany) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{0}
}
func (m *BaseInfoCompany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompany.Unmarshal(m, b)
}
func (m *BaseInfoCompany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompany.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompany.Merge(dst, src)
}
func (m *BaseInfoCompany) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompany.Size(m)
}
func (m *BaseInfoCompany) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompany.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompany proto.InternalMessageInfo

func (m *BaseInfoCompany) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompany) GetCompanyName() string {
	if m != nil && m.CompanyName != nil {
		return *m.CompanyName
	}
	return ""
}

func (m *BaseInfoCompany) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *BaseInfoCompany) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoCompany) GetBusinessScope() string {
	if m != nil && m.BusinessScope != nil {
		return *m.BusinessScope
	}
	return ""
}

func (m *BaseInfoCompany) GetContactAddress() string {
	if m != nil && m.ContactAddress != nil {
		return *m.ContactAddress
	}
	return ""
}

func (m *BaseInfoCompany) GetEconomicType() string {
	if m != nil && m.EconomicType != nil {
		return *m.EconomicType
	}
	return ""
}

func (m *BaseInfoCompany) GetRegCapital() string {
	if m != nil && m.RegCapital != nil {
		return *m.RegCapital
	}
	return ""
}

func (m *BaseInfoCompany) GetLegalName() string {
	if m != nil && m.LegalName != nil {
		return *m.LegalName
	}
	return ""
}

func (m *BaseInfoCompany) GetLegalID() string {
	if m != nil && m.LegalID != nil {
		return *m.LegalID
	}
	return ""
}

func (m *BaseInfoCompany) GetLegalPhone() string {
	if m != nil && m.LegalPhone != nil {
		return *m.LegalPhone
	}
	return ""
}

func (m *BaseInfoCompany) GetLegalPhoto() string {
	if m != nil && m.LegalPhoto != nil {
		return *m.LegalPhoto
	}
	return ""
}

func (m *BaseInfoCompany) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoCompany) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompany) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompany) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.2 网约车平台公司营运规模信息信息接口
type BaseInfoCompanyStat struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 平台注册网约车辆数
	VehicleNum *uint32 `protobuf:"varint,2,req,name=VehicleNum" json:"VehicleNum,omitempty"`
	// 平台注册驾驶员数
	DriverNum *uint32 `protobuf:"varint,3,req,name=DriverNum" json:"DriverNum,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,4,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,5,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,6,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompanyStat) Reset()         { *m = BaseInfoCompanyStat{} }
func (m *BaseInfoCompanyStat) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompanyStat) ProtoMessage()    {}
func (*BaseInfoCompanyStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{1}
}
func (m *BaseInfoCompanyStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompanyStat.Unmarshal(m, b)
}
func (m *BaseInfoCompanyStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompanyStat.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompanyStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompanyStat.Merge(dst, src)
}
func (m *BaseInfoCompanyStat) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompanyStat.Size(m)
}
func (m *BaseInfoCompanyStat) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompanyStat.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompanyStat proto.InternalMessageInfo

func (m *BaseInfoCompanyStat) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompanyStat) GetVehicleNum() uint32 {
	if m != nil && m.VehicleNum != nil {
		return *m.VehicleNum
	}
	return 0
}

func (m *BaseInfoCompanyStat) GetDriverNum() uint32 {
	if m != nil && m.DriverNum != nil {
		return *m.DriverNum
	}
	return 0
}

func (m *BaseInfoCompanyStat) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompanyStat) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompanyStat) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.3 网约车平台公司支付信息接口
type BaseInfoCompanyPay struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 银行或者非银行支付机构名称
	PayName *string `protobuf:"bytes,2,req,name=PayName" json:"PayName,omitempty"`
	// 非银行支付机构支付业务许可证编号
	PayId *string `protobuf:"bytes,3,req,name=PayId" json:"PayId,omitempty"`
	// 支付业务类型
	PayType *string `protobuf:"bytes,4,req,name=PayType" json:"PayType,omitempty"`
	// 业务覆盖范围
	PayScope *string `protobuf:"bytes,5,req,name=PayScope" json:"PayScope,omitempty"`
	// 备付金存管银行
	PrepareBank *string `protobuf:"bytes,6,req,name=PrepareBank" json:"PrepareBank,omitempty"`
	// 结算周期
	CountDate *uint32 `protobuf:"varint,7,req,name=CountDate" json:"CountDate,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,8,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,9,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,10,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,11,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompanyPay) Reset()         { *m = BaseInfoCompanyPay{} }
func (m *BaseInfoCompanyPay) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompanyPay) ProtoMessage()    {}
func (*BaseInfoCompanyPay) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{2}
}
func (m *BaseInfoCompanyPay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompanyPay.Unmarshal(m, b)
}
func (m *BaseInfoCompanyPay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompanyPay.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompanyPay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompanyPay.Merge(dst, src)
}
func (m *BaseInfoCompanyPay) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompanyPay.Size(m)
}
func (m *BaseInfoCompanyPay) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompanyPay.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompanyPay proto.InternalMessageInfo

func (m *BaseInfoCompanyPay) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetPayName() string {
	if m != nil && m.PayName != nil {
		return *m.PayName
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetPayId() string {
	if m != nil && m.PayId != nil {
		return *m.PayId
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetPayType() string {
	if m != nil && m.PayType != nil {
		return *m.PayType
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetPayScope() string {
	if m != nil && m.PayScope != nil {
		return *m.PayScope
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetPrepareBank() string {
	if m != nil && m.PrepareBank != nil {
		return *m.PrepareBank
	}
	return ""
}

func (m *BaseInfoCompanyPay) GetCountDate() uint32 {
	if m != nil && m.CountDate != nil {
		return *m.CountDate
	}
	return 0
}

func (m *BaseInfoCompanyPay) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoCompanyPay) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompanyPay) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompanyPay) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.4 网约车平台公司服务机构接口
type BaseInfoCompanyService struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 服务机构名称
	ServiceName *string `protobuf:"bytes,3,req,name=ServiceName" json:"ServiceName,omitempty"`
	// 服务机构代码
	ServiceNo *string `protobuf:"bytes,4,req,name=ServiceNo" json:"ServiceNo,omitempty"`
	// 服务机构地址
	DetailAddress *string `protobuf:"bytes,5,req,name=DetailAddress" json:"DetailAddress,omitempty"`
	// 服务机构负责人姓名
	ResponsibleName *string `protobuf:"bytes,6,req,name=ResponsibleName" json:"ResponsibleName,omitempty"`
	// 负责人联系电话
	ResponsiblePhone *string `protobuf:"bytes,7,req,name=ResponsiblePhone" json:"ResponsiblePhone,omitempty"`
	// 服务机构管理人姓名
	ManagerName *string `protobuf:"bytes,8,req,name=ManagerName" json:"ManagerName,omitempty"`
	// 管理人联系电话
	ManagerPhone *string `protobuf:"bytes,9,req,name=ManagerPhone" json:"ManagerPhone,omitempty"`
	// 服务机构紧急联系电话
	ContactPhone *string `protobuf:"bytes,10,opt,name=ContactPhone" json:"ContactPhone,omitempty"`
	// 行政文书送达邮寄地址
	MailAddress *string `protobuf:"bytes,11,req,name=MailAddress" json:"MailAddress,omitempty"`
	// 服务机构设立日期
	CreateDate *uint64 `protobuf:"varint,12,req,name=CreateDate" json:"CreateDate,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,13,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,14,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,15,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,16,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompanyService) Reset()         { *m = BaseInfoCompanyService{} }
func (m *BaseInfoCompanyService) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompanyService) ProtoMessage()    {}
func (*BaseInfoCompanyService) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{3}
}
func (m *BaseInfoCompanyService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompanyService.Unmarshal(m, b)
}
func (m *BaseInfoCompanyService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompanyService.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompanyService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompanyService.Merge(dst, src)
}
func (m *BaseInfoCompanyService) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompanyService.Size(m)
}
func (m *BaseInfoCompanyService) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompanyService.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompanyService proto.InternalMessageInfo

func (m *BaseInfoCompanyService) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompanyService) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoCompanyService) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *BaseInfoCompanyService) GetServiceNo() string {
	if m != nil && m.ServiceNo != nil {
		return *m.ServiceNo
	}
	return ""
}

func (m *BaseInfoCompanyService) GetDetailAddress() string {
	if m != nil && m.DetailAddress != nil {
		return *m.DetailAddress
	}
	return ""
}

func (m *BaseInfoCompanyService) GetResponsibleName() string {
	if m != nil && m.ResponsibleName != nil {
		return *m.ResponsibleName
	}
	return ""
}

func (m *BaseInfoCompanyService) GetResponsiblePhone() string {
	if m != nil && m.ResponsiblePhone != nil {
		return *m.ResponsiblePhone
	}
	return ""
}

func (m *BaseInfoCompanyService) GetManagerName() string {
	if m != nil && m.ManagerName != nil {
		return *m.ManagerName
	}
	return ""
}

func (m *BaseInfoCompanyService) GetManagerPhone() string {
	if m != nil && m.ManagerPhone != nil {
		return *m.ManagerPhone
	}
	return ""
}

func (m *BaseInfoCompanyService) GetContactPhone() string {
	if m != nil && m.ContactPhone != nil {
		return *m.ContactPhone
	}
	return ""
}

func (m *BaseInfoCompanyService) GetMailAddress() string {
	if m != nil && m.MailAddress != nil {
		return *m.MailAddress
	}
	return ""
}

func (m *BaseInfoCompanyService) GetCreateDate() uint64 {
	if m != nil && m.CreateDate != nil {
		return *m.CreateDate
	}
	return 0
}

func (m *BaseInfoCompanyService) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoCompanyService) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompanyService) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompanyService) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.5 网约车平台公司经营许可接口
type BaseInfoCompanyPermit struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 许可地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 网络预约出租汽车经营许可证号
	Certificate *string `protobuf:"bytes,3,req,name=Certificate" json:"Certificate,omitempty"`
	// 经营区域
	OperationArea *string `protobuf:"bytes,4,req,name=OperationArea" json:"OperationArea,omitempty"`
	// 公司名称
	OwnerName *string `protobuf:"bytes,5,req,name=OwnerName" json:"OwnerName,omitempty"`
	// 发证机构名称
	Organization *string `protobuf:"bytes,6,req,name=Organization" json:"Organization,omitempty"`
	// 有效期起
	StartDate *uint64 `protobuf:"varint,7,req,name=StartDate" json:"StartDate,omitempty"`
	// 有效期止
	StopDate *uint64 `protobuf:"varint,8,req,name=StopDate" json:"StopDate,omitempty"`
	// 初次发证日期
	CertifyDate *uint64 `protobuf:"varint,9,req,name=CertifyDate" json:"CertifyDate,omitempty"`
	// 证照状态
	State *string `protobuf:"bytes,10,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,11,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,12,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,13,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompanyPermit) Reset()         { *m = BaseInfoCompanyPermit{} }
func (m *BaseInfoCompanyPermit) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompanyPermit) ProtoMessage()    {}
func (*BaseInfoCompanyPermit) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{4}
}
func (m *BaseInfoCompanyPermit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompanyPermit.Unmarshal(m, b)
}
func (m *BaseInfoCompanyPermit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompanyPermit.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompanyPermit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompanyPermit.Merge(dst, src)
}
func (m *BaseInfoCompanyPermit) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompanyPermit.Size(m)
}
func (m *BaseInfoCompanyPermit) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompanyPermit.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompanyPermit proto.InternalMessageInfo

func (m *BaseInfoCompanyPermit) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetCertificate() string {
	if m != nil && m.Certificate != nil {
		return *m.Certificate
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetOperationArea() string {
	if m != nil && m.OperationArea != nil {
		return *m.OperationArea
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetOrganization() string {
	if m != nil && m.Organization != nil {
		return *m.Organization
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetStartDate() uint64 {
	if m != nil && m.StartDate != nil {
		return *m.StartDate
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetStopDate() uint64 {
	if m != nil && m.StopDate != nil {
		return *m.StopDate
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetCertifyDate() uint64 {
	if m != nil && m.CertifyDate != nil {
		return *m.CertifyDate
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *BaseInfoCompanyPermit) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompanyPermit) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.6 网约车平台公司运价信息接口
type BaseInfoCompanyFare struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,3,req,name=FareType" json:"FareType,omitempty"`
	// 运价类型说明
	FareTypeNote *string `protobuf:"bytes,4,opt,name=FareTypeNote" json:"FareTypeNote,omitempty"`
	// 运价有效期起
	FareValidOn *uint64 `protobuf:"varint,5,req,name=FareValidOn" json:"FareValidOn,omitempty"`
	// 运价有效期止
	FareValidOff *uint64 `protobuf:"varint,6,opt,name=FareValidOff" json:"FareValidOff,omitempty"`
	// 起步价
	StartFare *float32 `protobuf:"fixed32,7,req,name=StartFare" json:"StartFare,omitempty"`
	// 起步里程
	StartMile *float32 `protobuf:"fixed32,8,req,name=StartMile" json:"StartMile,omitempty"`
	// 计程单价（按公里）
	UnitPricePerMile *float32 `protobuf:"fixed32,9,req,name=UnitPricePerMile" json:"UnitPricePerMile,omitempty"`
	// 计时单价（按分钟）
	UnitPricePerMinute *float32 `protobuf:"fixed32,10,req,name=UnitPricePerMinute" json:"UnitPricePerMinute,omitempty"`
	// 单程加价单价
	UpPrice *float32 `protobuf:"fixed32,11,opt,name=UpPrice" json:"UpPrice,omitempty"`
	// 单程加价公里
	UpPriceStartMile *float32 `protobuf:"fixed32,12,opt,name=UpPriceStartMile" json:"UpPriceStartMile,omitempty"`
	// 运营早高峰时间起
	MorningPeakTimeOn *string `protobuf:"bytes,13,req,name=MorningPeakTimeOn" json:"MorningPeakTimeOn,omitempty"`
	// 运营早高峰时间止
	MorningPeakTimeOff *string `protobuf:"bytes,14,req,name=MorningPeakTimeOff" json:"MorningPeakTimeOff,omitempty"`
	// 运营晚高峰时间起
	EveningPeakTimeOn *string `protobuf:"bytes,15,req,name=EveningPeakTimeOn" json:"EveningPeakTimeOn,omitempty"`
	// 运营晚高峰时间止
	EveningPeakTimeOff *string `protobuf:"bytes,16,req,name=EveningPeakTimeOff" json:"EveningPeakTimeOff,omitempty"`
	// 其他运营高峰时间起
	OtherPeakTimeOn *string `protobuf:"bytes,17,opt,name=OtherPeakTimeOn" json:"OtherPeakTimeOn,omitempty"`
	// 其他运营高峰时间止
	OtherPeakTimeOff *string `protobuf:"bytes,18,opt,name=OtherPeakTimeOff" json:"OtherPeakTimeOff,omitempty"`
	// 高峰时间单程加价单价
	PeakUnitPrice *float32 `protobuf:"fixed32,19,req,name=PeakUnitPrice" json:"PeakUnitPrice,omitempty"`
	// 高峰时间单程加价公里
	PeakPriceStartMile *float32 `protobuf:"fixed32,20,req,name=PeakPriceStartMile" json:"PeakPriceStartMile,omitempty"`
	// 低速计时加价（按分钟）
	LowSpeedPricePerMinute *float32 `protobuf:"fixed32,21,opt,name=LowSpeedPricePerMinute" json:"LowSpeedPricePerMinute,omitempty"`
	// 夜间费（按公里）
	NightPricePerMile *float32 `protobuf:"fixed32,22,opt,name=NightPricePerMile" json:"NightPricePerMile,omitempty"`
	// 夜间费（按分钟）
	NightPricePerMinute *float32 `protobuf:"fixed32,23,opt,name=NightPricePerMinute" json:"NightPricePerMinute,omitempty"`
	// 其它加价金额
	OtherPrice *float32 `protobuf:"fixed32,24,opt,name=OtherPrice" json:"OtherPrice,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,25,req,name=State" json:"State,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,26,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,27,req,name=Flag" json:"Flag,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,28,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoCompanyFare) Reset()         { *m = BaseInfoCompanyFare{} }
func (m *BaseInfoCompanyFare) String() string { return proto.CompactTextString(m) }
func (*BaseInfoCompanyFare) ProtoMessage()    {}
func (*BaseInfoCompanyFare) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{5}
}
func (m *BaseInfoCompanyFare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoCompanyFare.Unmarshal(m, b)
}
func (m *BaseInfoCompanyFare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoCompanyFare.Marshal(b, m, deterministic)
}
func (dst *BaseInfoCompanyFare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoCompanyFare.Merge(dst, src)
}
func (m *BaseInfoCompanyFare) XXX_Size() int {
	return xxx_messageInfo_BaseInfoCompanyFare.Size(m)
}
func (m *BaseInfoCompanyFare) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoCompanyFare.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoCompanyFare proto.InternalMessageInfo

func (m *BaseInfoCompanyFare) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetFareTypeNote() string {
	if m != nil && m.FareTypeNote != nil {
		return *m.FareTypeNote
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetFareValidOn() uint64 {
	if m != nil && m.FareValidOn != nil {
		return *m.FareValidOn
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetFareValidOff() uint64 {
	if m != nil && m.FareValidOff != nil {
		return *m.FareValidOff
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetStartFare() float32 {
	if m != nil && m.StartFare != nil {
		return *m.StartFare
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetStartMile() float32 {
	if m != nil && m.StartMile != nil {
		return *m.StartMile
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetUnitPricePerMile() float32 {
	if m != nil && m.UnitPricePerMile != nil {
		return *m.UnitPricePerMile
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetUnitPricePerMinute() float32 {
	if m != nil && m.UnitPricePerMinute != nil {
		return *m.UnitPricePerMinute
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetUpPrice() float32 {
	if m != nil && m.UpPrice != nil {
		return *m.UpPrice
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetUpPriceStartMile() float32 {
	if m != nil && m.UpPriceStartMile != nil {
		return *m.UpPriceStartMile
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetMorningPeakTimeOn() string {
	if m != nil && m.MorningPeakTimeOn != nil {
		return *m.MorningPeakTimeOn
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetMorningPeakTimeOff() string {
	if m != nil && m.MorningPeakTimeOff != nil {
		return *m.MorningPeakTimeOff
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetEveningPeakTimeOn() string {
	if m != nil && m.EveningPeakTimeOn != nil {
		return *m.EveningPeakTimeOn
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetEveningPeakTimeOff() string {
	if m != nil && m.EveningPeakTimeOff != nil {
		return *m.EveningPeakTimeOff
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetOtherPeakTimeOn() string {
	if m != nil && m.OtherPeakTimeOn != nil {
		return *m.OtherPeakTimeOn
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetOtherPeakTimeOff() string {
	if m != nil && m.OtherPeakTimeOff != nil {
		return *m.OtherPeakTimeOff
	}
	return ""
}

func (m *BaseInfoCompanyFare) GetPeakUnitPrice() float32 {
	if m != nil && m.PeakUnitPrice != nil {
		return *m.PeakUnitPrice
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetPeakPriceStartMile() float32 {
	if m != nil && m.PeakPriceStartMile != nil {
		return *m.PeakPriceStartMile
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetLowSpeedPricePerMinute() float32 {
	if m != nil && m.LowSpeedPricePerMinute != nil {
		return *m.LowSpeedPricePerMinute
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetNightPricePerMile() float32 {
	if m != nil && m.NightPricePerMile != nil {
		return *m.NightPricePerMile
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetNightPricePerMinute() float32 {
	if m != nil && m.NightPricePerMinute != nil {
		return *m.NightPricePerMinute
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetOtherPrice() float32 {
	if m != nil && m.OtherPrice != nil {
		return *m.OtherPrice
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoCompanyFare) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.7 车辆基本信息接口
type BaseInfoVehicle struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 车辆所在城市（注册地行政区划代码）
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,3,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 车牌颜色
	PlateColor *string `protobuf:"bytes,4,req,name=PlateColor" json:"PlateColor,omitempty"`
	// 核定载客位
	Seats *uint32 `protobuf:"varint,5,req,name=Seats" json:"Seats,omitempty"`
	// 车辆厂牌
	Brand *string `protobuf:"bytes,6,req,name=Brand" json:"Brand,omitempty"`
	// 车辆型号
	Model *string `protobuf:"bytes,7,req,name=Model" json:"Model,omitempty"`
	// 车辆类型
	VehicleType *string `protobuf:"bytes,8,req,name=VehicleType" json:"VehicleType,omitempty"`
	// 车辆所有人
	OwnerName *string `protobuf:"bytes,9,req,name=OwnerName" json:"OwnerName,omitempty"`
	// 车身颜色
	VehicleColor *string `protobuf:"bytes,10,req,name=VehicleColor" json:"VehicleColor,omitempty"`
	// 发动机号
	EngineId *string `protobuf:"bytes,11,req,name=EngineId" json:"EngineId,omitempty"`
	// 车辆VIN码
	VIN *string `protobuf:"bytes,12,req,name=VIN" json:"VIN,omitempty"`
	// 车辆注册日期
	CertifyDateA *uint64 `protobuf:"varint,13,req,name=CertifyDateA" json:"CertifyDateA,omitempty"`
	// 车辆燃料类型
	FuelType *string `protobuf:"bytes,14,req,name=FuelType" json:"FuelType,omitempty"`
	// 发动机排量
	EngineDisplace *string `protobuf:"bytes,15,req,name=EngineDisplace" json:"EngineDisplace,omitempty"`
	// 车辆照片文件编号
	PhotoId *string `protobuf:"bytes,16,opt,name=PhotoId" json:"PhotoId,omitempty"`
	// 运输证字号
	Certificate *string `protobuf:"bytes,17,opt,name=Certificate" json:"Certificate,omitempty"`
	// 车辆运输证发证机构
	TransAgency *string `protobuf:"bytes,18,req,name=TransAgency" json:"TransAgency,omitempty"`
	// 车辆经营区域
	TransArea *string `protobuf:"bytes,19,req,name=TransArea" json:"TransArea,omitempty"`
	// 车辆运输证有效期起
	TransDateStart *uint64 `protobuf:"varint,20,req,name=TransDateStart" json:"TransDateStart,omitempty"`
	// 车辆运输证有效期止
	TransDateStop *uint64 `protobuf:"varint,21,req,name=TransDateStop" json:"TransDateStop,omitempty"`
	// 车辆初次登记日期
	CertifyDateB *uint64 `protobuf:"varint,22,req,name=CertifyDateB" json:"CertifyDateB,omitempty"`
	// 车辆检修状态
	FixState *string `protobuf:"bytes,23,req,name=FixState" json:"FixState,omitempty"`
	// 车辆下次年检时间
	NextFixDate *uint64 `protobuf:"varint,24,opt,name=NextFixDate" json:"NextFixDate,omitempty"`
	// 车辆年度审验状态
	CheckState *string `protobuf:"bytes,25,req,name=CheckState" json:"CheckState,omitempty"`
	// 发票打印设备序列号
	FeePrintId *string `protobuf:"bytes,26,req,name=FeePrintId" json:"FeePrintId,omitempty"`
	// 卫星定位装置品牌
	GPSBrand *string `protobuf:"bytes,27,req,name=GPSBrand" json:"GPSBrand,omitempty"`
	// 卫星定位装置型号
	GPSModel *string `protobuf:"bytes,28,req,name=GPSModel" json:"GPSModel,omitempty"`
	// 卫星定位装置IMEI号
	GPSIMEI *string `protobuf:"bytes,29,opt,name=GPSIMEI" json:"GPSIMEI,omitempty"`
	// 卫星定位设备安装日期
	GPSInstallDate *uint64 `protobuf:"varint,30,req,name=GPSInstallDate" json:"GPSInstallDate,omitempty"`
	// 报备日期
	RegisterDate *uint64 `protobuf:"varint,31,req,name=RegisterDate" json:"RegisterDate,omitempty"`
	// 服务类型
	CommercialType *uint32 `protobuf:"varint,32,req,name=CommercialType" json:"CommercialType,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,33,req,name=FareType" json:"FareType,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,34,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,35,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,36,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,37,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoVehicle) Reset()         { *m = BaseInfoVehicle{} }
func (m *BaseInfoVehicle) String() string { return proto.CompactTextString(m) }
func (*BaseInfoVehicle) ProtoMessage()    {}
func (*BaseInfoVehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{6}
}
func (m *BaseInfoVehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoVehicle.Unmarshal(m, b)
}
func (m *BaseInfoVehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoVehicle.Marshal(b, m, deterministic)
}
func (dst *BaseInfoVehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoVehicle.Merge(dst, src)
}
func (m *BaseInfoVehicle) XXX_Size() int {
	return xxx_messageInfo_BaseInfoVehicle.Size(m)
}
func (m *BaseInfoVehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoVehicle.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoVehicle proto.InternalMessageInfo

func (m *BaseInfoVehicle) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoVehicle) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoVehicle) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *BaseInfoVehicle) GetPlateColor() string {
	if m != nil && m.PlateColor != nil {
		return *m.PlateColor
	}
	return ""
}

func (m *BaseInfoVehicle) GetSeats() uint32 {
	if m != nil && m.Seats != nil {
		return *m.Seats
	}
	return 0
}

func (m *BaseInfoVehicle) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BaseInfoVehicle) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BaseInfoVehicle) GetVehicleType() string {
	if m != nil && m.VehicleType != nil {
		return *m.VehicleType
	}
	return ""
}

func (m *BaseInfoVehicle) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *BaseInfoVehicle) GetVehicleColor() string {
	if m != nil && m.VehicleColor != nil {
		return *m.VehicleColor
	}
	return ""
}

func (m *BaseInfoVehicle) GetEngineId() string {
	if m != nil && m.EngineId != nil {
		return *m.EngineId
	}
	return ""
}

func (m *BaseInfoVehicle) GetVIN() string {
	if m != nil && m.VIN != nil {
		return *m.VIN
	}
	return ""
}

func (m *BaseInfoVehicle) GetCertifyDateA() uint64 {
	if m != nil && m.CertifyDateA != nil {
		return *m.CertifyDateA
	}
	return 0
}

func (m *BaseInfoVehicle) GetFuelType() string {
	if m != nil && m.FuelType != nil {
		return *m.FuelType
	}
	return ""
}

func (m *BaseInfoVehicle) GetEngineDisplace() string {
	if m != nil && m.EngineDisplace != nil {
		return *m.EngineDisplace
	}
	return ""
}

func (m *BaseInfoVehicle) GetPhotoId() string {
	if m != nil && m.PhotoId != nil {
		return *m.PhotoId
	}
	return ""
}

func (m *BaseInfoVehicle) GetCertificate() string {
	if m != nil && m.Certificate != nil {
		return *m.Certificate
	}
	return ""
}

func (m *BaseInfoVehicle) GetTransAgency() string {
	if m != nil && m.TransAgency != nil {
		return *m.TransAgency
	}
	return ""
}

func (m *BaseInfoVehicle) GetTransArea() string {
	if m != nil && m.TransArea != nil {
		return *m.TransArea
	}
	return ""
}

func (m *BaseInfoVehicle) GetTransDateStart() uint64 {
	if m != nil && m.TransDateStart != nil {
		return *m.TransDateStart
	}
	return 0
}

func (m *BaseInfoVehicle) GetTransDateStop() uint64 {
	if m != nil && m.TransDateStop != nil {
		return *m.TransDateStop
	}
	return 0
}

func (m *BaseInfoVehicle) GetCertifyDateB() uint64 {
	if m != nil && m.CertifyDateB != nil {
		return *m.CertifyDateB
	}
	return 0
}

func (m *BaseInfoVehicle) GetFixState() string {
	if m != nil && m.FixState != nil {
		return *m.FixState
	}
	return ""
}

func (m *BaseInfoVehicle) GetNextFixDate() uint64 {
	if m != nil && m.NextFixDate != nil {
		return *m.NextFixDate
	}
	return 0
}

func (m *BaseInfoVehicle) GetCheckState() string {
	if m != nil && m.CheckState != nil {
		return *m.CheckState
	}
	return ""
}

func (m *BaseInfoVehicle) GetFeePrintId() string {
	if m != nil && m.FeePrintId != nil {
		return *m.FeePrintId
	}
	return ""
}

func (m *BaseInfoVehicle) GetGPSBrand() string {
	if m != nil && m.GPSBrand != nil {
		return *m.GPSBrand
	}
	return ""
}

func (m *BaseInfoVehicle) GetGPSModel() string {
	if m != nil && m.GPSModel != nil {
		return *m.GPSModel
	}
	return ""
}

func (m *BaseInfoVehicle) GetGPSIMEI() string {
	if m != nil && m.GPSIMEI != nil {
		return *m.GPSIMEI
	}
	return ""
}

func (m *BaseInfoVehicle) GetGPSInstallDate() uint64 {
	if m != nil && m.GPSInstallDate != nil {
		return *m.GPSInstallDate
	}
	return 0
}

func (m *BaseInfoVehicle) GetRegisterDate() uint64 {
	if m != nil && m.RegisterDate != nil {
		return *m.RegisterDate
	}
	return 0
}

func (m *BaseInfoVehicle) GetCommercialType() uint32 {
	if m != nil && m.CommercialType != nil {
		return *m.CommercialType
	}
	return 0
}

func (m *BaseInfoVehicle) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *BaseInfoVehicle) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoVehicle) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoVehicle) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoVehicle) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.8 车辆保险信息接口
type BaseInfoVehicleInsurance struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,2,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 保险公司名称
	InsurCom *string `protobuf:"bytes,3,req,name=InsurCom" json:"InsurCom,omitempty"`
	// 保险号
	InsurNum *string `protobuf:"bytes,4,req,name=InsurNum" json:"InsurNum,omitempty"`
	// 保险类型
	InsurType *string `protobuf:"bytes,5,req,name=InsurType" json:"InsurType,omitempty"`
	// 保险金额
	InsurCount *float32 `protobuf:"fixed32,6,req,name=InsurCount" json:"InsurCount,omitempty"`
	// 保险生效时间
	InsurEff *uint64 `protobuf:"varint,7,req,name=InsurEff" json:"InsurEff,omitempty"`
	// 保险到期时间
	InsurExp *uint64 `protobuf:"varint,8,req,name=InsurExp" json:"InsurExp,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,9,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,10,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,11,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoVehicleInsurance) Reset()         { *m = BaseInfoVehicleInsurance{} }
func (m *BaseInfoVehicleInsurance) String() string { return proto.CompactTextString(m) }
func (*BaseInfoVehicleInsurance) ProtoMessage()    {}
func (*BaseInfoVehicleInsurance) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{7}
}
func (m *BaseInfoVehicleInsurance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoVehicleInsurance.Unmarshal(m, b)
}
func (m *BaseInfoVehicleInsurance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoVehicleInsurance.Marshal(b, m, deterministic)
}
func (dst *BaseInfoVehicleInsurance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoVehicleInsurance.Merge(dst, src)
}
func (m *BaseInfoVehicleInsurance) XXX_Size() int {
	return xxx_messageInfo_BaseInfoVehicleInsurance.Size(m)
}
func (m *BaseInfoVehicleInsurance) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoVehicleInsurance.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoVehicleInsurance proto.InternalMessageInfo

func (m *BaseInfoVehicleInsurance) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoVehicleInsurance) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *BaseInfoVehicleInsurance) GetInsurCom() string {
	if m != nil && m.InsurCom != nil {
		return *m.InsurCom
	}
	return ""
}

func (m *BaseInfoVehicleInsurance) GetInsurNum() string {
	if m != nil && m.InsurNum != nil {
		return *m.InsurNum
	}
	return ""
}

func (m *BaseInfoVehicleInsurance) GetInsurType() string {
	if m != nil && m.InsurType != nil {
		return *m.InsurType
	}
	return ""
}

func (m *BaseInfoVehicleInsurance) GetInsurCount() float32 {
	if m != nil && m.InsurCount != nil {
		return *m.InsurCount
	}
	return 0
}

func (m *BaseInfoVehicleInsurance) GetInsurEff() uint64 {
	if m != nil && m.InsurEff != nil {
		return *m.InsurEff
	}
	return 0
}

func (m *BaseInfoVehicleInsurance) GetInsurExp() uint64 {
	if m != nil && m.InsurExp != nil {
		return *m.InsurExp
	}
	return 0
}

func (m *BaseInfoVehicleInsurance) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoVehicleInsurance) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoVehicleInsurance) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.9 网约车车辆里程信息接口
type BaseInfoVehicleTotalMile struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,3,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 行驶总里程
	TotalMile *float32 `protobuf:"fixed32,4,req,name=TotalMile" json:"TotalMile,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,5,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,6,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,7,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoVehicleTotalMile) Reset()         { *m = BaseInfoVehicleTotalMile{} }
func (m *BaseInfoVehicleTotalMile) String() string { return proto.CompactTextString(m) }
func (*BaseInfoVehicleTotalMile) ProtoMessage()    {}
func (*BaseInfoVehicleTotalMile) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{8}
}
func (m *BaseInfoVehicleTotalMile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoVehicleTotalMile.Unmarshal(m, b)
}
func (m *BaseInfoVehicleTotalMile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoVehicleTotalMile.Marshal(b, m, deterministic)
}
func (dst *BaseInfoVehicleTotalMile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoVehicleTotalMile.Merge(dst, src)
}
func (m *BaseInfoVehicleTotalMile) XXX_Size() int {
	return xxx_messageInfo_BaseInfoVehicleTotalMile.Size(m)
}
func (m *BaseInfoVehicleTotalMile) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoVehicleTotalMile.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoVehicleTotalMile proto.InternalMessageInfo

func (m *BaseInfoVehicleTotalMile) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoVehicleTotalMile) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoVehicleTotalMile) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *BaseInfoVehicleTotalMile) GetTotalMile() float32 {
	if m != nil && m.TotalMile != nil {
		return *m.TotalMile
	}
	return 0
}

func (m *BaseInfoVehicleTotalMile) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoVehicleTotalMile) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoVehicleTotalMile) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.10 驾驶员基本信息接口
type BaseInfoDriver struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 机动车驾驶员姓名
	DriverName *string `protobuf:"bytes,3,opt,name=DriverName" json:"DriverName,omitempty"`
	// 驾驶员手机号
	DriverPhone *string `protobuf:"bytes,4,req,name=DriverPhone" json:"DriverPhone,omitempty"`
	// 驾驶员性别
	DriverGender *string `protobuf:"bytes,5,req,name=DriverGender" json:"DriverGender,omitempty"`
	// 出生日期
	DriverBirthday *uint64 `protobuf:"varint,6,req,name=DriverBirthday" json:"DriverBirthday,omitempty"`
	// 国籍
	DriverNationality *string `protobuf:"bytes,7,opt,name=DriverNationality" json:"DriverNationality,omitempty"`
	// 驾驶员民族
	DriverNation *string `protobuf:"bytes,8,req,name=DriverNation" json:"DriverNation,omitempty"`
	// 驾驶员婚姻状况
	DriverMaritalStatus *string `protobuf:"bytes,9,opt,name=DriverMaritalStatus" json:"DriverMaritalStatus,omitempty"`
	// 驾驶员外语能力
	DriverLanguageLevel *string `protobuf:"bytes,10,opt,name=DriverLanguageLevel" json:"DriverLanguageLevel,omitempty"`
	// 驾驶员学历
	DriverEducation *string `protobuf:"bytes,11,opt,name=DriverEducation" json:"DriverEducation,omitempty"`
	// 户口登记机关名称
	DriverCensus *string `protobuf:"bytes,12,opt,name=DriverCensus" json:"DriverCensus,omitempty"`
	// 户口住址或长住住址
	DriverAddress *string `protobuf:"bytes,13,opt,name=DriverAddress" json:"DriverAddress,omitempty"`
	// 驾驶员通信地址
	DriverContactAddress *string `protobuf:"bytes,14,req,name=DriverContactAddress" json:"DriverContactAddress,omitempty"`
	// 驾驶员照片文件编号
	PhotoId *string `protobuf:"bytes,15,opt,name=PhotoId" json:"PhotoId,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,16,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 机动车驾驶证扫描件文件编号
	LicensePhotoId *string `protobuf:"bytes,17,opt,name=LicensePhotoId" json:"LicensePhotoId,omitempty"`
	// 准驾车型
	DriverType *string `protobuf:"bytes,18,opt,name=DriverType" json:"DriverType,omitempty"`
	// 初次领取驾驶证日期
	GetDriverLicenseDate *uint64 `protobuf:"varint,19,req,name=GetDriverLicenseDate" json:"GetDriverLicenseDate,omitempty"`
	// 驾驶证有效期限起
	DriverLicenseOn *uint64 `protobuf:"varint,20,req,name=DriverLicenseOn" json:"DriverLicenseOn,omitempty"`
	// 驾驶证有效期限止
	DriverLicenseOff *uint64 `protobuf:"varint,21,req,name=DriverLicenseOff" json:"DriverLicenseOff,omitempty"`
	// 是否巡游出租汽车驾驶员
	TaxiDriver *uint32 `protobuf:"varint,22,req,name=TaxiDriver" json:"TaxiDriver,omitempty"`
	// 网络预约出租汽车驾驶员资格证号
	CertificateNo *string `protobuf:"bytes,23,req,name=CertificateNo" json:"CertificateNo,omitempty"`
	// 网约预约出租汽车驾驶员证发证机构
	NetworkCarIssueOrganization *string `protobuf:"bytes,24,req,name=NetworkCarIssueOrganization" json:"NetworkCarIssueOrganization,omitempty"`
	// 资格证发证日期
	NetworkCarIssueDate *uint64 `protobuf:"varint,25,req,name=NetworkCarIssueDate" json:"NetworkCarIssueDate,omitempty"`
	// 初次领取资格证日期
	GetNetworkCarProofDate *uint64 `protobuf:"varint,26,req,name=GetNetworkCarProofDate" json:"GetNetworkCarProofDate,omitempty"`
	// 资格证有效起始日期
	NetworkCarProofOn *uint64 `protobuf:"varint,27,req,name=NetworkCarProofOn" json:"NetworkCarProofOn,omitempty"`
	// 资格证有效截止日期
	NetworkCarProofOff *uint64 `protobuf:"varint,28,req,name=NetworkCarProofOff" json:"NetworkCarProofOff,omitempty"`
	// 报备日期
	RegisterDate *uint64 `protobuf:"varint,29,req,name=RegisterDate" json:"RegisterDate,omitempty"`
	// 是否专职驾驶员
	FullTimeDriver *uint32 `protobuf:"varint,30,opt,name=FullTimeDriver" json:"FullTimeDriver,omitempty"`
	// 是否在驾驶员黑名单内
	InDriverBlacklist *uint32 `protobuf:"varint,31,opt,name=InDriverBlacklist" json:"InDriverBlacklist,omitempty"`
	// 服务类型
	CommercialType *uint32 `protobuf:"varint,32,req,name=CommercialType" json:"CommercialType,omitempty"`
	// 驾驶员合同（或协议）签署公司
	ContractCompany *string `protobuf:"bytes,33,req,name=ContractCompany" json:"ContractCompany,omitempty"`
	// 合同（或协议）开始时间
	ContractOn *uint64 `protobuf:"varint,34,req,name=ContractOn" json:"ContractOn,omitempty"`
	// 合同（或协议）到期时间
	ContractOff *uint64 `protobuf:"varint,35,req,name=ContractOff" json:"ContractOff,omitempty"`
	// 紧急情况联系人
	EmergencyContact *string `protobuf:"bytes,36,opt,name=EmergencyContact" json:"EmergencyContact,omitempty"`
	// 紧急情况联系人电话
	EmergencyContactPhone *string `protobuf:"bytes,37,opt,name=EmergencyContactPhone" json:"EmergencyContactPhone,omitempty"`
	// 紧急情况联系人通信地址
	EmergencyContactAddress *string `protobuf:"bytes,38,opt,name=EmergencyContactAddress" json:"EmergencyContactAddress,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,39,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,40,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,41,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,42,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoDriver) Reset()         { *m = BaseInfoDriver{} }
func (m *BaseInfoDriver) String() string { return proto.CompactTextString(m) }
func (*BaseInfoDriver) ProtoMessage()    {}
func (*BaseInfoDriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{9}
}
func (m *BaseInfoDriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoDriver.Unmarshal(m, b)
}
func (m *BaseInfoDriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoDriver.Marshal(b, m, deterministic)
}
func (dst *BaseInfoDriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoDriver.Merge(dst, src)
}
func (m *BaseInfoDriver) XXX_Size() int {
	return xxx_messageInfo_BaseInfoDriver.Size(m)
}
func (m *BaseInfoDriver) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoDriver.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoDriver proto.InternalMessageInfo

func (m *BaseInfoDriver) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoDriver) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoDriver) GetDriverName() string {
	if m != nil && m.DriverName != nil {
		return *m.DriverName
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverPhone() string {
	if m != nil && m.DriverPhone != nil {
		return *m.DriverPhone
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverGender() string {
	if m != nil && m.DriverGender != nil {
		return *m.DriverGender
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverBirthday() uint64 {
	if m != nil && m.DriverBirthday != nil {
		return *m.DriverBirthday
	}
	return 0
}

func (m *BaseInfoDriver) GetDriverNationality() string {
	if m != nil && m.DriverNationality != nil {
		return *m.DriverNationality
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverNation() string {
	if m != nil && m.DriverNation != nil {
		return *m.DriverNation
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverMaritalStatus() string {
	if m != nil && m.DriverMaritalStatus != nil {
		return *m.DriverMaritalStatus
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverLanguageLevel() string {
	if m != nil && m.DriverLanguageLevel != nil {
		return *m.DriverLanguageLevel
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverEducation() string {
	if m != nil && m.DriverEducation != nil {
		return *m.DriverEducation
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverCensus() string {
	if m != nil && m.DriverCensus != nil {
		return *m.DriverCensus
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverAddress() string {
	if m != nil && m.DriverAddress != nil {
		return *m.DriverAddress
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverContactAddress() string {
	if m != nil && m.DriverContactAddress != nil {
		return *m.DriverContactAddress
	}
	return ""
}

func (m *BaseInfoDriver) GetPhotoId() string {
	if m != nil && m.PhotoId != nil {
		return *m.PhotoId
	}
	return ""
}

func (m *BaseInfoDriver) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *BaseInfoDriver) GetLicensePhotoId() string {
	if m != nil && m.LicensePhotoId != nil {
		return *m.LicensePhotoId
	}
	return ""
}

func (m *BaseInfoDriver) GetDriverType() string {
	if m != nil && m.DriverType != nil {
		return *m.DriverType
	}
	return ""
}

func (m *BaseInfoDriver) GetGetDriverLicenseDate() uint64 {
	if m != nil && m.GetDriverLicenseDate != nil {
		return *m.GetDriverLicenseDate
	}
	return 0
}

func (m *BaseInfoDriver) GetDriverLicenseOn() uint64 {
	if m != nil && m.DriverLicenseOn != nil {
		return *m.DriverLicenseOn
	}
	return 0
}

func (m *BaseInfoDriver) GetDriverLicenseOff() uint64 {
	if m != nil && m.DriverLicenseOff != nil {
		return *m.DriverLicenseOff
	}
	return 0
}

func (m *BaseInfoDriver) GetTaxiDriver() uint32 {
	if m != nil && m.TaxiDriver != nil {
		return *m.TaxiDriver
	}
	return 0
}

func (m *BaseInfoDriver) GetCertificateNo() string {
	if m != nil && m.CertificateNo != nil {
		return *m.CertificateNo
	}
	return ""
}

func (m *BaseInfoDriver) GetNetworkCarIssueOrganization() string {
	if m != nil && m.NetworkCarIssueOrganization != nil {
		return *m.NetworkCarIssueOrganization
	}
	return ""
}

func (m *BaseInfoDriver) GetNetworkCarIssueDate() uint64 {
	if m != nil && m.NetworkCarIssueDate != nil {
		return *m.NetworkCarIssueDate
	}
	return 0
}

func (m *BaseInfoDriver) GetGetNetworkCarProofDate() uint64 {
	if m != nil && m.GetNetworkCarProofDate != nil {
		return *m.GetNetworkCarProofDate
	}
	return 0
}

func (m *BaseInfoDriver) GetNetworkCarProofOn() uint64 {
	if m != nil && m.NetworkCarProofOn != nil {
		return *m.NetworkCarProofOn
	}
	return 0
}

func (m *BaseInfoDriver) GetNetworkCarProofOff() uint64 {
	if m != nil && m.NetworkCarProofOff != nil {
		return *m.NetworkCarProofOff
	}
	return 0
}

func (m *BaseInfoDriver) GetRegisterDate() uint64 {
	if m != nil && m.RegisterDate != nil {
		return *m.RegisterDate
	}
	return 0
}

func (m *BaseInfoDriver) GetFullTimeDriver() uint32 {
	if m != nil && m.FullTimeDriver != nil {
		return *m.FullTimeDriver
	}
	return 0
}

func (m *BaseInfoDriver) GetInDriverBlacklist() uint32 {
	if m != nil && m.InDriverBlacklist != nil {
		return *m.InDriverBlacklist
	}
	return 0
}

func (m *BaseInfoDriver) GetCommercialType() uint32 {
	if m != nil && m.CommercialType != nil {
		return *m.CommercialType
	}
	return 0
}

func (m *BaseInfoDriver) GetContractCompany() string {
	if m != nil && m.ContractCompany != nil {
		return *m.ContractCompany
	}
	return ""
}

func (m *BaseInfoDriver) GetContractOn() uint64 {
	if m != nil && m.ContractOn != nil {
		return *m.ContractOn
	}
	return 0
}

func (m *BaseInfoDriver) GetContractOff() uint64 {
	if m != nil && m.ContractOff != nil {
		return *m.ContractOff
	}
	return 0
}

func (m *BaseInfoDriver) GetEmergencyContact() string {
	if m != nil && m.EmergencyContact != nil {
		return *m.EmergencyContact
	}
	return ""
}

func (m *BaseInfoDriver) GetEmergencyContactPhone() string {
	if m != nil && m.EmergencyContactPhone != nil {
		return *m.EmergencyContactPhone
	}
	return ""
}

func (m *BaseInfoDriver) GetEmergencyContactAddress() string {
	if m != nil && m.EmergencyContactAddress != nil {
		return *m.EmergencyContactAddress
	}
	return ""
}

func (m *BaseInfoDriver) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoDriver) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoDriver) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoDriver) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.11 网约车驾驶员培训信息接口
type BaseInfoDriverEducate struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,3,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 驾驶员培训课程名称
	CourseName *string `protobuf:"bytes,4,req,name=CourseName" json:"CourseName,omitempty"`
	// 培训课程日期
	CourseDate *uint64 `protobuf:"varint,5,req,name=CourseDate" json:"CourseDate,omitempty"`
	// 培训开始时间
	StartTime *string `protobuf:"bytes,6,req,name=StartTime" json:"StartTime,omitempty"`
	// 培训结束时间
	StopTime *string `protobuf:"bytes,7,req,name=StopTime" json:"StopTime,omitempty"`
	// 培训时长
	Duration *uint32 `protobuf:"varint,8,req,name=Duration" json:"Duration,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,9,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,10,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,11,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoDriverEducate) Reset()         { *m = BaseInfoDriverEducate{} }
func (m *BaseInfoDriverEducate) String() string { return proto.CompactTextString(m) }
func (*BaseInfoDriverEducate) ProtoMessage()    {}
func (*BaseInfoDriverEducate) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{10}
}
func (m *BaseInfoDriverEducate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoDriverEducate.Unmarshal(m, b)
}
func (m *BaseInfoDriverEducate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoDriverEducate.Marshal(b, m, deterministic)
}
func (dst *BaseInfoDriverEducate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoDriverEducate.Merge(dst, src)
}
func (m *BaseInfoDriverEducate) XXX_Size() int {
	return xxx_messageInfo_BaseInfoDriverEducate.Size(m)
}
func (m *BaseInfoDriverEducate) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoDriverEducate.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoDriverEducate proto.InternalMessageInfo

func (m *BaseInfoDriverEducate) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoDriverEducate) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoDriverEducate) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *BaseInfoDriverEducate) GetCourseName() string {
	if m != nil && m.CourseName != nil {
		return *m.CourseName
	}
	return ""
}

func (m *BaseInfoDriverEducate) GetCourseDate() uint64 {
	if m != nil && m.CourseDate != nil {
		return *m.CourseDate
	}
	return 0
}

func (m *BaseInfoDriverEducate) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *BaseInfoDriverEducate) GetStopTime() string {
	if m != nil && m.StopTime != nil {
		return *m.StopTime
	}
	return ""
}

func (m *BaseInfoDriverEducate) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BaseInfoDriverEducate) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoDriverEducate) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoDriverEducate) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.12 驾驶员移动终端信息接口
type BaseInfoDriverApp struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,3,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 驾驶员手机号
	DriverPhone *string `protobuf:"bytes,4,req,name=DriverPhone" json:"DriverPhone,omitempty"`
	// 手机运营商
	NetType *uint32 `protobuf:"varint,5,req,name=NetType" json:"NetType,omitempty"`
	// 使用APP版本号
	AppVersion *string `protobuf:"bytes,6,req,name=AppVersion" json:"AppVersion,omitempty"`
	// 使用地图类型
	MapType *uint32 `protobuf:"varint,7,req,name=MapType" json:"MapType,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,8,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,9,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,10,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,11,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoDriverApp) Reset()         { *m = BaseInfoDriverApp{} }
func (m *BaseInfoDriverApp) String() string { return proto.CompactTextString(m) }
func (*BaseInfoDriverApp) ProtoMessage()    {}
func (*BaseInfoDriverApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{11}
}
func (m *BaseInfoDriverApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoDriverApp.Unmarshal(m, b)
}
func (m *BaseInfoDriverApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoDriverApp.Marshal(b, m, deterministic)
}
func (dst *BaseInfoDriverApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoDriverApp.Merge(dst, src)
}
func (m *BaseInfoDriverApp) XXX_Size() int {
	return xxx_messageInfo_BaseInfoDriverApp.Size(m)
}
func (m *BaseInfoDriverApp) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoDriverApp.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoDriverApp proto.InternalMessageInfo

func (m *BaseInfoDriverApp) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoDriverApp) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoDriverApp) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *BaseInfoDriverApp) GetDriverPhone() string {
	if m != nil && m.DriverPhone != nil {
		return *m.DriverPhone
	}
	return ""
}

func (m *BaseInfoDriverApp) GetNetType() uint32 {
	if m != nil && m.NetType != nil {
		return *m.NetType
	}
	return 0
}

func (m *BaseInfoDriverApp) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *BaseInfoDriverApp) GetMapType() uint32 {
	if m != nil && m.MapType != nil {
		return *m.MapType
	}
	return 0
}

func (m *BaseInfoDriverApp) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoDriverApp) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoDriverApp) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoDriverApp) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.13 驾驶员统计信息接口
type BaseInfoDriverStat struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 机动车驾驶证编号
	LicenseId *string `protobuf:"bytes,3,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 统计周期
	Cycle *uint64 `protobuf:"varint,4,req,name=Cycle" json:"Cycle,omitempty"`
	// 完成订单次数
	OrderCount *uint32 `protobuf:"varint,5,req,name=OrderCount" json:"OrderCount,omitempty"`
	// 交通违章次数
	TrafficViolationCount *uint32 `protobuf:"varint,6,req,name=TrafficViolationCount" json:"TrafficViolationCount,omitempty"`
	// 被投诉次数
	ComplainedCount *uint32 `protobuf:"varint,7,req,name=ComplainedCount" json:"ComplainedCount,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,8,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,9,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,10,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoDriverStat) Reset()         { *m = BaseInfoDriverStat{} }
func (m *BaseInfoDriverStat) String() string { return proto.CompactTextString(m) }
func (*BaseInfoDriverStat) ProtoMessage()    {}
func (*BaseInfoDriverStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{12}
}
func (m *BaseInfoDriverStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoDriverStat.Unmarshal(m, b)
}
func (m *BaseInfoDriverStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoDriverStat.Marshal(b, m, deterministic)
}
func (dst *BaseInfoDriverStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoDriverStat.Merge(dst, src)
}
func (m *BaseInfoDriverStat) XXX_Size() int {
	return xxx_messageInfo_BaseInfoDriverStat.Size(m)
}
func (m *BaseInfoDriverStat) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoDriverStat.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoDriverStat proto.InternalMessageInfo

func (m *BaseInfoDriverStat) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoDriverStat) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *BaseInfoDriverStat) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *BaseInfoDriverStat) GetCycle() uint64 {
	if m != nil && m.Cycle != nil {
		return *m.Cycle
	}
	return 0
}

func (m *BaseInfoDriverStat) GetOrderCount() uint32 {
	if m != nil && m.OrderCount != nil {
		return *m.OrderCount
	}
	return 0
}

func (m *BaseInfoDriverStat) GetTrafficViolationCount() uint32 {
	if m != nil && m.TrafficViolationCount != nil {
		return *m.TrafficViolationCount
	}
	return 0
}

func (m *BaseInfoDriverStat) GetComplainedCount() uint32 {
	if m != nil && m.ComplainedCount != nil {
		return *m.ComplainedCount
	}
	return 0
}

func (m *BaseInfoDriverStat) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoDriverStat) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoDriverStat) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 4.14 乘客基本信息接口
type BaseInfoPassenger struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 注册日期
	RegisterDate *uint64 `protobuf:"varint,2,opt,name=RegisterDate" json:"RegisterDate,omitempty"`
	// 乘客手机号
	PassengerPhone *string `protobuf:"bytes,3,req,name=PassengerPhone" json:"PassengerPhone,omitempty"`
	// 乘客称谓
	PassengerName *string `protobuf:"bytes,4,opt,name=PassengerName" json:"PassengerName,omitempty"`
	// 乘客性别
	PassengerGender *string `protobuf:"bytes,5,opt,name=PassengerGender" json:"PassengerGender,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,6,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,7,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,8,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,9,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseInfoPassenger) Reset()         { *m = BaseInfoPassenger{} }
func (m *BaseInfoPassenger) String() string { return proto.CompactTextString(m) }
func (*BaseInfoPassenger) ProtoMessage()    {}
func (*BaseInfoPassenger) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{13}
}
func (m *BaseInfoPassenger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseInfoPassenger.Unmarshal(m, b)
}
func (m *BaseInfoPassenger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseInfoPassenger.Marshal(b, m, deterministic)
}
func (dst *BaseInfoPassenger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseInfoPassenger.Merge(dst, src)
}
func (m *BaseInfoPassenger) XXX_Size() int {
	return xxx_messageInfo_BaseInfoPassenger.Size(m)
}
func (m *BaseInfoPassenger) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseInfoPassenger.DiscardUnknown(m)
}

var xxx_messageInfo_BaseInfoPassenger proto.InternalMessageInfo

func (m *BaseInfoPassenger) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *BaseInfoPassenger) GetRegisterDate() uint64 {
	if m != nil && m.RegisterDate != nil {
		return *m.RegisterDate
	}
	return 0
}

func (m *BaseInfoPassenger) GetPassengerPhone() string {
	if m != nil && m.PassengerPhone != nil {
		return *m.PassengerPhone
	}
	return ""
}

func (m *BaseInfoPassenger) GetPassengerName() string {
	if m != nil && m.PassengerName != nil {
		return *m.PassengerName
	}
	return ""
}

func (m *BaseInfoPassenger) GetPassengerGender() string {
	if m != nil && m.PassengerGender != nil {
		return *m.PassengerGender
	}
	return ""
}

func (m *BaseInfoPassenger) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *BaseInfoPassenger) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BaseInfoPassenger) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *BaseInfoPassenger) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 5.1 订单发起接口
type OrderCreate struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 发起地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,3,req,name=OrderId" json:"OrderId,omitempty"`
	// 预计用车时间
	DepartTime *uint64 `protobuf:"varint,4,req,name=DepartTime" json:"DepartTime,omitempty"`
	// 订单发起时间
	OrderTime *uint64 `protobuf:"varint,5,req,name=OrderTime" json:"OrderTime,omitempty"`
	// 乘客备注
	PassengerNote *string `protobuf:"bytes,6,opt,name=PassengerNote" json:"PassengerNote,omitempty"`
	// 预计出发地点详细地址
	Departure *string `protobuf:"bytes,7,req,name=Departure" json:"Departure,omitempty"`
	// 预计出发地点经度
	DepLongitude *uint64 `protobuf:"varint,8,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 预计出发地点纬度
	DepLatitude *uint64 `protobuf:"varint,9,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 预计目的地
	Destination *string `protobuf:"bytes,10,req,name=Destination" json:"Destination,omitempty"`
	// 预计目的地经度
	DestLongitude *uint64 `protobuf:"varint,11,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 预计目的地纬度
	DestLatitude *uint64 `protobuf:"varint,12,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,13,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,14,req,name=FareType" json:"FareType,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,15,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCreate) Reset()         { *m = OrderCreate{} }
func (m *OrderCreate) String() string { return proto.CompactTextString(m) }
func (*OrderCreate) ProtoMessage()    {}
func (*OrderCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{14}
}
func (m *OrderCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCreate.Unmarshal(m, b)
}
func (m *OrderCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCreate.Marshal(b, m, deterministic)
}
func (dst *OrderCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCreate.Merge(dst, src)
}
func (m *OrderCreate) XXX_Size() int {
	return xxx_messageInfo_OrderCreate.Size(m)
}
func (m *OrderCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCreate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCreate proto.InternalMessageInfo

func (m *OrderCreate) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OrderCreate) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *OrderCreate) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OrderCreate) GetDepartTime() uint64 {
	if m != nil && m.DepartTime != nil {
		return *m.DepartTime
	}
	return 0
}

func (m *OrderCreate) GetOrderTime() uint64 {
	if m != nil && m.OrderTime != nil {
		return *m.OrderTime
	}
	return 0
}

func (m *OrderCreate) GetPassengerNote() string {
	if m != nil && m.PassengerNote != nil {
		return *m.PassengerNote
	}
	return ""
}

func (m *OrderCreate) GetDeparture() string {
	if m != nil && m.Departure != nil {
		return *m.Departure
	}
	return ""
}

func (m *OrderCreate) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *OrderCreate) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *OrderCreate) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *OrderCreate) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *OrderCreate) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *OrderCreate) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OrderCreate) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *OrderCreate) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 5.2 订单成功接口
type OrderMatch struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 发起地行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,3,req,name=OrderId" json:"OrderId,omitempty"`
	// 车辆经度
	Longitude *uint64 `protobuf:"varint,4,opt,name=Longitude" json:"Longitude,omitempty"`
	// 车辆纬度
	Latitude *uint64 `protobuf:"varint,5,opt,name=Latitude" json:"Latitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,6,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 机动车驾驶证编号
	LicenseId *string `protobuf:"bytes,7,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 驾驶员手机号
	DriverPhone *string `protobuf:"bytes,8,req,name=DriverPhone" json:"DriverPhone,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,9,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 派单成功时间
	DistributeTime *uint64 `protobuf:"varint,10,req,name=DistributeTime" json:"DistributeTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,11,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMatch) Reset()         { *m = OrderMatch{} }
func (m *OrderMatch) String() string { return proto.CompactTextString(m) }
func (*OrderMatch) ProtoMessage()    {}
func (*OrderMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{15}
}
func (m *OrderMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMatch.Unmarshal(m, b)
}
func (m *OrderMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMatch.Marshal(b, m, deterministic)
}
func (dst *OrderMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMatch.Merge(dst, src)
}
func (m *OrderMatch) XXX_Size() int {
	return xxx_messageInfo_OrderMatch.Size(m)
}
func (m *OrderMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMatch.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMatch proto.InternalMessageInfo

func (m *OrderMatch) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OrderMatch) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *OrderMatch) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OrderMatch) GetLongitude() uint64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *OrderMatch) GetLatitude() uint64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *OrderMatch) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OrderMatch) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *OrderMatch) GetDriverPhone() string {
	if m != nil && m.DriverPhone != nil {
		return *m.DriverPhone
	}
	return ""
}

func (m *OrderMatch) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *OrderMatch) GetDistributeTime() uint64 {
	if m != nil && m.DistributeTime != nil {
		return *m.DistributeTime
	}
	return 0
}

func (m *OrderMatch) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 5.3 订单撤销接口
type OrderCancel struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 上车地点行政区划代码
	Address *uint32 `protobuf:"varint,2,req,name=Address" json:"Address,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,3,req,name=OrderId" json:"OrderId,omitempty"`
	// 订单时间
	OrderTime *uint64 `protobuf:"varint,4,opt,name=OrderTime" json:"OrderTime,omitempty"`
	// 订单撤销时间
	CancelTime *uint64 `protobuf:"varint,5,req,name=CancelTime" json:"CancelTime,omitempty"`
	// 撤销发起方
	Operator *string `protobuf:"bytes,6,req,name=Operator" json:"Operator,omitempty"`
	// 撤销类型代码
	CancelTypeCode *string `protobuf:"bytes,7,req,name=CancelTypeCode" json:"CancelTypeCode,omitempty"`
	// 撤销或违约原因
	CancelReason *string `protobuf:"bytes,8,opt,name=CancelReason" json:"CancelReason,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,9,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancel) Reset()         { *m = OrderCancel{} }
func (m *OrderCancel) String() string { return proto.CompactTextString(m) }
func (*OrderCancel) ProtoMessage()    {}
func (*OrderCancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{16}
}
func (m *OrderCancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancel.Unmarshal(m, b)
}
func (m *OrderCancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancel.Marshal(b, m, deterministic)
}
func (dst *OrderCancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancel.Merge(dst, src)
}
func (m *OrderCancel) XXX_Size() int {
	return xxx_messageInfo_OrderCancel.Size(m)
}
func (m *OrderCancel) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancel.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancel proto.InternalMessageInfo

func (m *OrderCancel) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OrderCancel) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *OrderCancel) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OrderCancel) GetOrderTime() uint64 {
	if m != nil && m.OrderTime != nil {
		return *m.OrderTime
	}
	return 0
}

func (m *OrderCancel) GetCancelTime() uint64 {
	if m != nil && m.CancelTime != nil {
		return *m.CancelTime
	}
	return 0
}

func (m *OrderCancel) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *OrderCancel) GetCancelTypeCode() string {
	if m != nil && m.CancelTypeCode != nil {
		return *m.CancelTypeCode
	}
	return ""
}

func (m *OrderCancel) GetCancelReason() string {
	if m != nil && m.CancelReason != nil {
		return *m.CancelReason
	}
	return ""
}

func (m *OrderCancel) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 6.1 车辆经营上线接口
type OperateLogin struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,2,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,3,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 车辆经营上线时间
	LoginTime *uint64 `protobuf:"varint,4,req,name=LoginTime" json:"LoginTime,omitempty"`
	// 上线经度
	Longitude *uint64 `protobuf:"varint,5,opt,name=Longitude" json:"Longitude,omitempty"`
	// 上线纬度
	Latitude *uint64 `protobuf:"varint,6,opt,name=Latitude" json:"Latitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,7,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,8,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateLogin) Reset()         { *m = OperateLogin{} }
func (m *OperateLogin) String() string { return proto.CompactTextString(m) }
func (*OperateLogin) ProtoMessage()    {}
func (*OperateLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{17}
}
func (m *OperateLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateLogin.Unmarshal(m, b)
}
func (m *OperateLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateLogin.Marshal(b, m, deterministic)
}
func (dst *OperateLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateLogin.Merge(dst, src)
}
func (m *OperateLogin) XXX_Size() int {
	return xxx_messageInfo_OperateLogin.Size(m)
}
func (m *OperateLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateLogin.DiscardUnknown(m)
}

var xxx_messageInfo_OperateLogin proto.InternalMessageInfo

func (m *OperateLogin) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OperateLogin) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *OperateLogin) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *OperateLogin) GetLoginTime() uint64 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return 0
}

func (m *OperateLogin) GetLongitude() uint64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *OperateLogin) GetLatitude() uint64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *OperateLogin) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OperateLogin) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 6.2 车辆经营下线接口
type OperateLogout struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,2,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,3,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 车辆经营下线时间
	LogoutTime *uint64 `protobuf:"varint,4,req,name=LogoutTime" json:"LogoutTime,omitempty"`
	// 下线经度
	Longitude *uint64 `protobuf:"varint,5,opt,name=Longitude" json:"Longitude,omitempty"`
	// 下线纬度
	Latitude *uint64 `protobuf:"varint,6,opt,name=Latitude" json:"Latitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,7,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,8,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateLogout) Reset()         { *m = OperateLogout{} }
func (m *OperateLogout) String() string { return proto.CompactTextString(m) }
func (*OperateLogout) ProtoMessage()    {}
func (*OperateLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{18}
}
func (m *OperateLogout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateLogout.Unmarshal(m, b)
}
func (m *OperateLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateLogout.Marshal(b, m, deterministic)
}
func (dst *OperateLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateLogout.Merge(dst, src)
}
func (m *OperateLogout) XXX_Size() int {
	return xxx_messageInfo_OperateLogout.Size(m)
}
func (m *OperateLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateLogout.DiscardUnknown(m)
}

var xxx_messageInfo_OperateLogout proto.InternalMessageInfo

func (m *OperateLogout) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OperateLogout) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *OperateLogout) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *OperateLogout) GetLogoutTime() uint64 {
	if m != nil && m.LogoutTime != nil {
		return *m.LogoutTime
	}
	return 0
}

func (m *OperateLogout) GetLongitude() uint64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *OperateLogout) GetLatitude() uint64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *OperateLogout) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OperateLogout) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 6.3 经营出发接口
type OperateDepart struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 订单号
	OrderId *string `protobuf:"bytes,2,req,name=OrderId" json:"OrderId,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,3,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,4,req,name=FareType" json:"FareType,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,5,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 车辆出发经度
	DepLongitude *uint64 `protobuf:"varint,6,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 车辆出发纬度
	DepLatitude *uint64 `protobuf:"varint,7,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,8,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 上车时间
	DepTime *uint64 `protobuf:"varint,9,req,name=DepTime" json:"DepTime,omitempty"`
	// 空驶里程
	WaitMile *float32 `protobuf:"fixed32,10,opt,name=WaitMile" json:"WaitMile,omitempty"`
	// 等待时间
	WaitTime *uint32 `protobuf:"varint,11,opt,name=WaitTime" json:"WaitTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,12,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateDepart) Reset()         { *m = OperateDepart{} }
func (m *OperateDepart) String() string { return proto.CompactTextString(m) }
func (*OperateDepart) ProtoMessage()    {}
func (*OperateDepart) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{19}
}
func (m *OperateDepart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateDepart.Unmarshal(m, b)
}
func (m *OperateDepart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateDepart.Marshal(b, m, deterministic)
}
func (dst *OperateDepart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateDepart.Merge(dst, src)
}
func (m *OperateDepart) XXX_Size() int {
	return xxx_messageInfo_OperateDepart.Size(m)
}
func (m *OperateDepart) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateDepart.DiscardUnknown(m)
}

var xxx_messageInfo_OperateDepart proto.InternalMessageInfo

func (m *OperateDepart) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OperateDepart) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OperateDepart) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *OperateDepart) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *OperateDepart) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *OperateDepart) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *OperateDepart) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *OperateDepart) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OperateDepart) GetDepTime() uint64 {
	if m != nil && m.DepTime != nil {
		return *m.DepTime
	}
	return 0
}

func (m *OperateDepart) GetWaitMile() float32 {
	if m != nil && m.WaitMile != nil {
		return *m.WaitMile
	}
	return 0
}

func (m *OperateDepart) GetWaitTime() uint32 {
	if m != nil && m.WaitTime != nil {
		return *m.WaitTime
	}
	return 0
}

func (m *OperateDepart) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 6.4 经营到达接口
type OperateArrive struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 订单号
	OrderId *string `protobuf:"bytes,2,req,name=OrderId" json:"OrderId,omitempty"`
	// 车辆到达经度
	DestLongitude *uint64 `protobuf:"varint,3,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 车辆到达纬度
	DestLatitude *uint64 `protobuf:"varint,4,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,5,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 下车时间
	DestTime *uint64 `protobuf:"varint,6,req,name=DestTime" json:"DestTime,omitempty"`
	// 载客里程
	DriveMile *float32 `protobuf:"fixed32,7,req,name=DriveMile" json:"DriveMile,omitempty"`
	// 载客时间
	DriveTime *uint32 `protobuf:"varint,8,req,name=DriveTime" json:"DriveTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,9,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateArrive) Reset()         { *m = OperateArrive{} }
func (m *OperateArrive) String() string { return proto.CompactTextString(m) }
func (*OperateArrive) ProtoMessage()    {}
func (*OperateArrive) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{20}
}
func (m *OperateArrive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateArrive.Unmarshal(m, b)
}
func (m *OperateArrive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateArrive.Marshal(b, m, deterministic)
}
func (dst *OperateArrive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateArrive.Merge(dst, src)
}
func (m *OperateArrive) XXX_Size() int {
	return xxx_messageInfo_OperateArrive.Size(m)
}
func (m *OperateArrive) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateArrive.DiscardUnknown(m)
}

var xxx_messageInfo_OperateArrive proto.InternalMessageInfo

func (m *OperateArrive) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OperateArrive) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OperateArrive) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *OperateArrive) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *OperateArrive) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *OperateArrive) GetDestTime() uint64 {
	if m != nil && m.DestTime != nil {
		return *m.DestTime
	}
	return 0
}

func (m *OperateArrive) GetDriveMile() float32 {
	if m != nil && m.DriveMile != nil {
		return *m.DriveMile
	}
	return 0
}

func (m *OperateArrive) GetDriveTime() uint32 {
	if m != nil && m.DriveTime != nil {
		return *m.DriveTime
	}
	return 0
}

func (m *OperateArrive) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 6.5 经营支付接口
type OperatePay struct {
	// 网约车公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,2,req,name=OrderId" json:"OrderId,omitempty"`
	// 上车位置行政区划编号
	OnArea *uint32 `protobuf:"varint,3,req,name=OnArea" json:"OnArea,omitempty"`
	// 机动车驾驶员姓名
	DriverName *string `protobuf:"bytes,4,opt,name=DriverName" json:"DriverName,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,5,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,6,req,name=FareType" json:"FareType,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,7,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 预计上车时间
	BookDepTime *uint64 `protobuf:"varint,9,req,name=BookDepTime" json:"BookDepTime,omitempty"`
	// 等待时间
	WaitTime *uint32 `protobuf:"varint,10,opt,name=WaitTime" json:"WaitTime,omitempty"`
	// 车辆出发经度
	DepLongitude *uint64 `protobuf:"varint,11,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 车辆出发纬度
	DepLatitude *uint64 `protobuf:"varint,12,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 上车地点
	DepArea *string `protobuf:"bytes,13,opt,name=DepArea" json:"DepArea,omitempty"`
	// 上车时间
	DepTime *uint64 `protobuf:"varint,14,req,name=DepTime" json:"DepTime,omitempty"`
	// 车辆到达经度
	DestLongitude *uint64 `protobuf:"varint,15,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 车辆到达纬度
	DestLatitude *uint64 `protobuf:"varint,16,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 下车地点
	DestArea *string `protobuf:"bytes,17,opt,name=DestArea" json:"DestArea,omitempty"`
	// 下车时间
	DestTime *uint64 `protobuf:"varint,18,req,name=DestTime" json:"DestTime,omitempty"`
	// 预定车型
	BookModel *string `protobuf:"bytes,19,opt,name=BookModel" json:"BookModel,omitempty"`
	// 实际使用车型
	Model *string `protobuf:"bytes,20,opt,name=Model" json:"Model,omitempty"`
	// 载客里程
	DriveMile *float32 `protobuf:"fixed32,21,req,name=DriveMile" json:"DriveMile,omitempty"`
	// 载客时间
	DriveTime *uint32 `protobuf:"varint,22,req,name=DriveTime" json:"DriveTime,omitempty"`
	// 空驶里程
	WaitMile *float32 `protobuf:"fixed32,23,opt,name=WaitMile" json:"WaitMile,omitempty"`
	// 实收金额
	FactPrice *float32 `protobuf:"fixed32,24,req,name=FactPrice" json:"FactPrice,omitempty"`
	// 应收金额
	Price *float32 `protobuf:"fixed32,25,opt,name=Price" json:"Price,omitempty"`
	// 现金支付金额
	CashPrice *float32 `protobuf:"fixed32,26,opt,name=CashPrice" json:"CashPrice,omitempty"`
	// 电子支付机构
	LineName *string `protobuf:"bytes,27,opt,name=LineName" json:"LineName,omitempty"`
	// 电子支付金额
	LinePrice *float32 `protobuf:"fixed32,28,opt,name=LinePrice" json:"LinePrice,omitempty"`
	// POS机支付机构
	PosName *string `protobuf:"bytes,29,opt,name=PosName" json:"PosName,omitempty"`
	// POS机支付金额
	PosPrice *float32 `protobuf:"fixed32,30,opt,name=PosPrice" json:"PosPrice,omitempty"`
	// 优惠金额
	BenfitPrice *float32 `protobuf:"fixed32,31,opt,name=BenfitPrice" json:"BenfitPrice,omitempty"`
	// 预约服务费
	BookTip *float32 `protobuf:"fixed32,32,opt,name=BookTip" json:"BookTip,omitempty"`
	// 附加费
	PassengerTip *float32 `protobuf:"fixed32,33,opt,name=PassengerTip" json:"PassengerTip,omitempty"`
	// 高峰时段时间加价金额
	PeakUpPrice *float32 `protobuf:"fixed32,34,opt,name=PeakUpPrice" json:"PeakUpPrice,omitempty"`
	// 夜间时段里程加价金额
	NightUpPrice *float32 `protobuf:"fixed32,35,opt,name=NightUpPrice" json:"NightUpPrice,omitempty"`
	// 远途加价金额
	FarUpPrice *float32 `protobuf:"fixed32,36,req,name=FarUpPrice" json:"FarUpPrice,omitempty"`
	// 其他加价金额
	OtherUpPrice *float32 `protobuf:"fixed32,37,req,name=OtherUpPrice" json:"OtherUpPrice,omitempty"`
	// 结算状态
	PayState *string `protobuf:"bytes,38,req,name=PayState" json:"PayState,omitempty"`
	// 乘客结算时间
	PayTime *uint64 `protobuf:"varint,39,opt,name=PayTime" json:"PayTime,omitempty"`
	// 订单完成时间
	OrderMatchTime *uint64 `protobuf:"varint,40,opt,name=OrderMatchTime" json:"OrderMatchTime,omitempty"`
	// 发票状态
	InvoiceStatus *string `protobuf:"bytes,41,req,name=InvoiceStatus" json:"InvoiceStatus,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,42,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatePay) Reset()         { *m = OperatePay{} }
func (m *OperatePay) String() string { return proto.CompactTextString(m) }
func (*OperatePay) ProtoMessage()    {}
func (*OperatePay) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{21}
}
func (m *OperatePay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatePay.Unmarshal(m, b)
}
func (m *OperatePay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatePay.Marshal(b, m, deterministic)
}
func (dst *OperatePay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatePay.Merge(dst, src)
}
func (m *OperatePay) XXX_Size() int {
	return xxx_messageInfo_OperatePay.Size(m)
}
func (m *OperatePay) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatePay.DiscardUnknown(m)
}

var xxx_messageInfo_OperatePay proto.InternalMessageInfo

func (m *OperatePay) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OperatePay) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *OperatePay) GetOnArea() uint32 {
	if m != nil && m.OnArea != nil {
		return *m.OnArea
	}
	return 0
}

func (m *OperatePay) GetDriverName() string {
	if m != nil && m.DriverName != nil {
		return *m.DriverName
	}
	return ""
}

func (m *OperatePay) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *OperatePay) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *OperatePay) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *OperatePay) GetBookDepTime() uint64 {
	if m != nil && m.BookDepTime != nil {
		return *m.BookDepTime
	}
	return 0
}

func (m *OperatePay) GetWaitTime() uint32 {
	if m != nil && m.WaitTime != nil {
		return *m.WaitTime
	}
	return 0
}

func (m *OperatePay) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *OperatePay) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *OperatePay) GetDepArea() string {
	if m != nil && m.DepArea != nil {
		return *m.DepArea
	}
	return ""
}

func (m *OperatePay) GetDepTime() uint64 {
	if m != nil && m.DepTime != nil {
		return *m.DepTime
	}
	return 0
}

func (m *OperatePay) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *OperatePay) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *OperatePay) GetDestArea() string {
	if m != nil && m.DestArea != nil {
		return *m.DestArea
	}
	return ""
}

func (m *OperatePay) GetDestTime() uint64 {
	if m != nil && m.DestTime != nil {
		return *m.DestTime
	}
	return 0
}

func (m *OperatePay) GetBookModel() string {
	if m != nil && m.BookModel != nil {
		return *m.BookModel
	}
	return ""
}

func (m *OperatePay) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *OperatePay) GetDriveMile() float32 {
	if m != nil && m.DriveMile != nil {
		return *m.DriveMile
	}
	return 0
}

func (m *OperatePay) GetDriveTime() uint32 {
	if m != nil && m.DriveTime != nil {
		return *m.DriveTime
	}
	return 0
}

func (m *OperatePay) GetWaitMile() float32 {
	if m != nil && m.WaitMile != nil {
		return *m.WaitMile
	}
	return 0
}

func (m *OperatePay) GetFactPrice() float32 {
	if m != nil && m.FactPrice != nil {
		return *m.FactPrice
	}
	return 0
}

func (m *OperatePay) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *OperatePay) GetCashPrice() float32 {
	if m != nil && m.CashPrice != nil {
		return *m.CashPrice
	}
	return 0
}

func (m *OperatePay) GetLineName() string {
	if m != nil && m.LineName != nil {
		return *m.LineName
	}
	return ""
}

func (m *OperatePay) GetLinePrice() float32 {
	if m != nil && m.LinePrice != nil {
		return *m.LinePrice
	}
	return 0
}

func (m *OperatePay) GetPosName() string {
	if m != nil && m.PosName != nil {
		return *m.PosName
	}
	return ""
}

func (m *OperatePay) GetPosPrice() float32 {
	if m != nil && m.PosPrice != nil {
		return *m.PosPrice
	}
	return 0
}

func (m *OperatePay) GetBenfitPrice() float32 {
	if m != nil && m.BenfitPrice != nil {
		return *m.BenfitPrice
	}
	return 0
}

func (m *OperatePay) GetBookTip() float32 {
	if m != nil && m.BookTip != nil {
		return *m.BookTip
	}
	return 0
}

func (m *OperatePay) GetPassengerTip() float32 {
	if m != nil && m.PassengerTip != nil {
		return *m.PassengerTip
	}
	return 0
}

func (m *OperatePay) GetPeakUpPrice() float32 {
	if m != nil && m.PeakUpPrice != nil {
		return *m.PeakUpPrice
	}
	return 0
}

func (m *OperatePay) GetNightUpPrice() float32 {
	if m != nil && m.NightUpPrice != nil {
		return *m.NightUpPrice
	}
	return 0
}

func (m *OperatePay) GetFarUpPrice() float32 {
	if m != nil && m.FarUpPrice != nil {
		return *m.FarUpPrice
	}
	return 0
}

func (m *OperatePay) GetOtherUpPrice() float32 {
	if m != nil && m.OtherUpPrice != nil {
		return *m.OtherUpPrice
	}
	return 0
}

func (m *OperatePay) GetPayState() string {
	if m != nil && m.PayState != nil {
		return *m.PayState
	}
	return ""
}

func (m *OperatePay) GetPayTime() uint64 {
	if m != nil && m.PayTime != nil {
		return *m.PayTime
	}
	return 0
}

func (m *OperatePay) GetOrderMatchTime() uint64 {
	if m != nil && m.OrderMatchTime != nil {
		return *m.OrderMatchTime
	}
	return 0
}

func (m *OperatePay) GetInvoiceStatus() string {
	if m != nil && m.InvoiceStatus != nil {
		return *m.InvoiceStatus
	}
	return ""
}

func (m *OperatePay) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 7.1 驾驶员定位信息接口
type PositionDriver struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,2,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 行政区划代码
	DriverRegionCode *uint32 `protobuf:"varint,3,req,name=DriverRegionCode" json:"DriverRegionCode,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,4,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 定位时间
	PositionTime *uint64 `protobuf:"varint,5,req,name=PositionTime" json:"PositionTime,omitempty"`
	// 经度
	Longitude *uint64 `protobuf:"varint,6,req,name=Longitude" json:"Longitude,omitempty"`
	// 纬度
	Latitude *uint64 `protobuf:"varint,7,req,name=Latitude" json:"Latitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,8,opt,name=Encrypt" json:"Encrypt,omitempty"`
	// 方位角
	Direction *uint32 `protobuf:"varint,9,opt,name=Direction" json:"Direction,omitempty"`
	// 海拔高度
	Elevation *int32 `protobuf:"varint,10,opt,name=Elevation" json:"Elevation,omitempty"`
	// 瞬时速度
	Speed *uint32 `protobuf:"varint,11,opt,name=Speed" json:"Speed,omitempty"`
	// 营运状态
	BizStatus *uint32 `protobuf:"varint,12,opt,name=BizStatus" json:"BizStatus,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,13,req,name=OrderId" json:"OrderId,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,14,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionDriver) Reset()         { *m = PositionDriver{} }
func (m *PositionDriver) String() string { return proto.CompactTextString(m) }
func (*PositionDriver) ProtoMessage()    {}
func (*PositionDriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{22}
}
func (m *PositionDriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionDriver.Unmarshal(m, b)
}
func (m *PositionDriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionDriver.Marshal(b, m, deterministic)
}
func (dst *PositionDriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionDriver.Merge(dst, src)
}
func (m *PositionDriver) XXX_Size() int {
	return xxx_messageInfo_PositionDriver.Size(m)
}
func (m *PositionDriver) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionDriver.DiscardUnknown(m)
}

var xxx_messageInfo_PositionDriver proto.InternalMessageInfo

func (m *PositionDriver) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *PositionDriver) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *PositionDriver) GetDriverRegionCode() uint32 {
	if m != nil && m.DriverRegionCode != nil {
		return *m.DriverRegionCode
	}
	return 0
}

func (m *PositionDriver) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *PositionDriver) GetPositionTime() uint64 {
	if m != nil && m.PositionTime != nil {
		return *m.PositionTime
	}
	return 0
}

func (m *PositionDriver) GetLongitude() uint64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *PositionDriver) GetLatitude() uint64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *PositionDriver) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *PositionDriver) GetDirection() uint32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *PositionDriver) GetElevation() int32 {
	if m != nil && m.Elevation != nil {
		return *m.Elevation
	}
	return 0
}

func (m *PositionDriver) GetSpeed() uint32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *PositionDriver) GetBizStatus() uint32 {
	if m != nil && m.BizStatus != nil {
		return *m.BizStatus
	}
	return 0
}

func (m *PositionDriver) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *PositionDriver) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 7.2 车辆定位信息接口
type PositionVehicle struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,2,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 行政区划代码
	VehicleRegionCode *uint32 `protobuf:"varint,3,req,name=VehicleRegionCode" json:"VehicleRegionCode,omitempty"`
	// 定位时间
	PositionTime *uint64 `protobuf:"varint,4,req,name=PositionTime" json:"PositionTime,omitempty"`
	// 经度
	Longitude *uint64 `protobuf:"varint,5,req,name=Longitude" json:"Longitude,omitempty"`
	// 纬度
	Latitude *uint64 `protobuf:"varint,6,req,name=Latitude" json:"Latitude,omitempty"`
	// 瞬时速度
	Speed *uint32 `protobuf:"varint,7,opt,name=Speed" json:"Speed,omitempty"`
	// 方向角
	Direction *uint32 `protobuf:"varint,8,opt,name=Direction" json:"Direction,omitempty"`
	// 海拔高度
	Elevation *int32 `protobuf:"varint,9,opt,name=Elevation" json:"Elevation,omitempty"`
	// 行驶里程
	Mileage *float32 `protobuf:"fixed32,10,opt,name=Mileage" json:"Mileage,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,11,opt,name=Encrypt" json:"Encrypt,omitempty"`
	// 预警状态
	WarnStatus *uint32 `protobuf:"varint,12,opt,name=WarnStatus" json:"WarnStatus,omitempty"`
	// 车辆状态
	VehStatus *uint32 `protobuf:"varint,13,opt,name=VehStatus" json:"VehStatus,omitempty"`
	// 营运状态
	BizStatus *uint32 `protobuf:"varint,14,opt,name=BizStatus" json:"BizStatus,omitempty"`
	// 订单编号
	OrderId *string `protobuf:"bytes,15,req,name=OrderId" json:"OrderId,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,16,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionVehicle) Reset()         { *m = PositionVehicle{} }
func (m *PositionVehicle) String() string { return proto.CompactTextString(m) }
func (*PositionVehicle) ProtoMessage()    {}
func (*PositionVehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{23}
}
func (m *PositionVehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionVehicle.Unmarshal(m, b)
}
func (m *PositionVehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionVehicle.Marshal(b, m, deterministic)
}
func (dst *PositionVehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionVehicle.Merge(dst, src)
}
func (m *PositionVehicle) XXX_Size() int {
	return xxx_messageInfo_PositionVehicle.Size(m)
}
func (m *PositionVehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionVehicle.DiscardUnknown(m)
}

var xxx_messageInfo_PositionVehicle proto.InternalMessageInfo

func (m *PositionVehicle) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *PositionVehicle) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *PositionVehicle) GetVehicleRegionCode() uint32 {
	if m != nil && m.VehicleRegionCode != nil {
		return *m.VehicleRegionCode
	}
	return 0
}

func (m *PositionVehicle) GetPositionTime() uint64 {
	if m != nil && m.PositionTime != nil {
		return *m.PositionTime
	}
	return 0
}

func (m *PositionVehicle) GetLongitude() uint64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *PositionVehicle) GetLatitude() uint64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *PositionVehicle) GetSpeed() uint32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *PositionVehicle) GetDirection() uint32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *PositionVehicle) GetElevation() int32 {
	if m != nil && m.Elevation != nil {
		return *m.Elevation
	}
	return 0
}

func (m *PositionVehicle) GetMileage() float32 {
	if m != nil && m.Mileage != nil {
		return *m.Mileage
	}
	return 0
}

func (m *PositionVehicle) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *PositionVehicle) GetWarnStatus() uint32 {
	if m != nil && m.WarnStatus != nil {
		return *m.WarnStatus
	}
	return 0
}

func (m *PositionVehicle) GetVehStatus() uint32 {
	if m != nil && m.VehStatus != nil {
		return *m.VehStatus
	}
	return 0
}

func (m *PositionVehicle) GetBizStatus() uint32 {
	if m != nil && m.BizStatus != nil {
		return *m.BizStatus
	}
	return 0
}

func (m *PositionVehicle) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *PositionVehicle) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 8.1 乘客评价信息接口
type RatedPassenger struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 订单号
	OrderId *string `protobuf:"bytes,2,req,name=OrderId" json:"OrderId,omitempty"`
	// 评价时间
	EvaluateTime *uint64 `protobuf:"varint,3,req,name=EvaluateTime" json:"EvaluateTime,omitempty"`
	// 服务满意度
	ServiceScore *uint32 `protobuf:"varint,4,req,name=ServiceScore" json:"ServiceScore,omitempty"`
	// 驾驶员满意度
	DriverScore *uint32 `protobuf:"varint,5,opt,name=DriverScore" json:"DriverScore,omitempty"`
	// 车辆满意度
	VehicleScore *uint32 `protobuf:"varint,6,opt,name=VehicleScore" json:"VehicleScore,omitempty"`
	// 评价内容
	Detail *string `protobuf:"bytes,7,opt,name=Detail" json:"Detail,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,8,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatedPassenger) Reset()         { *m = RatedPassenger{} }
func (m *RatedPassenger) String() string { return proto.CompactTextString(m) }
func (*RatedPassenger) ProtoMessage()    {}
func (*RatedPassenger) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{24}
}
func (m *RatedPassenger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatedPassenger.Unmarshal(m, b)
}
func (m *RatedPassenger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatedPassenger.Marshal(b, m, deterministic)
}
func (dst *RatedPassenger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatedPassenger.Merge(dst, src)
}
func (m *RatedPassenger) XXX_Size() int {
	return xxx_messageInfo_RatedPassenger.Size(m)
}
func (m *RatedPassenger) XXX_DiscardUnknown() {
	xxx_messageInfo_RatedPassenger.DiscardUnknown(m)
}

var xxx_messageInfo_RatedPassenger proto.InternalMessageInfo

func (m *RatedPassenger) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *RatedPassenger) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *RatedPassenger) GetEvaluateTime() uint64 {
	if m != nil && m.EvaluateTime != nil {
		return *m.EvaluateTime
	}
	return 0
}

func (m *RatedPassenger) GetServiceScore() uint32 {
	if m != nil && m.ServiceScore != nil {
		return *m.ServiceScore
	}
	return 0
}

func (m *RatedPassenger) GetDriverScore() uint32 {
	if m != nil && m.DriverScore != nil {
		return *m.DriverScore
	}
	return 0
}

func (m *RatedPassenger) GetVehicleScore() uint32 {
	if m != nil && m.VehicleScore != nil {
		return *m.VehicleScore
	}
	return 0
}

func (m *RatedPassenger) GetDetail() string {
	if m != nil && m.Detail != nil {
		return *m.Detail
	}
	return ""
}

func (m *RatedPassenger) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 8.2 乘客投诉信息接口
type RatedPassengerComplaint struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 订单号
	OrderId *string `protobuf:"bytes,2,req,name=OrderId" json:"OrderId,omitempty"`
	// 投诉时间
	ComplaintTime *uint64 `protobuf:"varint,3,req,name=ComplaintTime" json:"ComplaintTime,omitempty"`
	// 投诉内容
	Detail *string `protobuf:"bytes,4,req,name=Detail" json:"Detail,omitempty"`
	// 处理结果
	Result *string `protobuf:"bytes,5,opt,name=Result" json:"Result,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,6,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatedPassengerComplaint) Reset()         { *m = RatedPassengerComplaint{} }
func (m *RatedPassengerComplaint) String() string { return proto.CompactTextString(m) }
func (*RatedPassengerComplaint) ProtoMessage()    {}
func (*RatedPassengerComplaint) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{25}
}
func (m *RatedPassengerComplaint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatedPassengerComplaint.Unmarshal(m, b)
}
func (m *RatedPassengerComplaint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatedPassengerComplaint.Marshal(b, m, deterministic)
}
func (dst *RatedPassengerComplaint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatedPassengerComplaint.Merge(dst, src)
}
func (m *RatedPassengerComplaint) XXX_Size() int {
	return xxx_messageInfo_RatedPassengerComplaint.Size(m)
}
func (m *RatedPassengerComplaint) XXX_DiscardUnknown() {
	xxx_messageInfo_RatedPassengerComplaint.DiscardUnknown(m)
}

var xxx_messageInfo_RatedPassengerComplaint proto.InternalMessageInfo

func (m *RatedPassengerComplaint) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *RatedPassengerComplaint) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *RatedPassengerComplaint) GetComplaintTime() uint64 {
	if m != nil && m.ComplaintTime != nil {
		return *m.ComplaintTime
	}
	return 0
}

func (m *RatedPassengerComplaint) GetDetail() string {
	if m != nil && m.Detail != nil {
		return *m.Detail
	}
	return ""
}

func (m *RatedPassengerComplaint) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

func (m *RatedPassengerComplaint) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 8.3 驾驶员处罚信息接口
type RatedDriverPunish struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 机动车驾驶证编号
	LicenseId *string `protobuf:"bytes,2,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 处罚时间
	PunishTime *uint64 `protobuf:"varint,3,req,name=PunishTime" json:"PunishTime,omitempty"`
	// 处罚原因
	PunishReason *string `protobuf:"bytes,4,opt,name=PunishReason" json:"PunishReason,omitempty"`
	// 处罚结果
	PunishResult *string `protobuf:"bytes,5,req,name=PunishResult" json:"PunishResult,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,6,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatedDriverPunish) Reset()         { *m = RatedDriverPunish{} }
func (m *RatedDriverPunish) String() string { return proto.CompactTextString(m) }
func (*RatedDriverPunish) ProtoMessage()    {}
func (*RatedDriverPunish) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{26}
}
func (m *RatedDriverPunish) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatedDriverPunish.Unmarshal(m, b)
}
func (m *RatedDriverPunish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatedDriverPunish.Marshal(b, m, deterministic)
}
func (dst *RatedDriverPunish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatedDriverPunish.Merge(dst, src)
}
func (m *RatedDriverPunish) XXX_Size() int {
	return xxx_messageInfo_RatedDriverPunish.Size(m)
}
func (m *RatedDriverPunish) XXX_DiscardUnknown() {
	xxx_messageInfo_RatedDriverPunish.DiscardUnknown(m)
}

var xxx_messageInfo_RatedDriverPunish proto.InternalMessageInfo

func (m *RatedDriverPunish) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *RatedDriverPunish) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *RatedDriverPunish) GetPunishTime() uint64 {
	if m != nil && m.PunishTime != nil {
		return *m.PunishTime
	}
	return 0
}

func (m *RatedDriverPunish) GetPunishReason() string {
	if m != nil && m.PunishReason != nil {
		return *m.PunishReason
	}
	return ""
}

func (m *RatedDriverPunish) GetPunishResult() string {
	if m != nil && m.PunishResult != nil {
		return *m.PunishResult
	}
	return ""
}

func (m *RatedDriverPunish) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 8.4 驾驶员信誉信息接口
type RatedDriver struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 机动车驾驶证编号
	LicenseId *string `protobuf:"bytes,2,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 服务质量信誉等级
	Level *uint32 `protobuf:"varint,3,req,name=Level" json:"Level,omitempty"`
	// 服务质量信誉考核日期
	TestDate *uint64 `protobuf:"varint,4,req,name=TestDate" json:"TestDate,omitempty"`
	// 服务质量信誉考核机构
	TestDepartment *string `protobuf:"bytes,5,req,name=TestDepartment" json:"TestDepartment,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,6,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatedDriver) Reset()         { *m = RatedDriver{} }
func (m *RatedDriver) String() string { return proto.CompactTextString(m) }
func (*RatedDriver) ProtoMessage()    {}
func (*RatedDriver) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{27}
}
func (m *RatedDriver) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatedDriver.Unmarshal(m, b)
}
func (m *RatedDriver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatedDriver.Marshal(b, m, deterministic)
}
func (dst *RatedDriver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatedDriver.Merge(dst, src)
}
func (m *RatedDriver) XXX_Size() int {
	return xxx_messageInfo_RatedDriver.Size(m)
}
func (m *RatedDriver) XXX_DiscardUnknown() {
	xxx_messageInfo_RatedDriver.DiscardUnknown(m)
}

var xxx_messageInfo_RatedDriver proto.InternalMessageInfo

func (m *RatedDriver) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *RatedDriver) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *RatedDriver) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *RatedDriver) GetTestDate() uint64 {
	if m != nil && m.TestDate != nil {
		return *m.TestDate
	}
	return 0
}

func (m *RatedDriver) GetTestDepartment() string {
	if m != nil && m.TestDepartment != nil {
		return *m.TestDepartment
	}
	return ""
}

func (m *RatedDriver) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 9.1 私人小客车合乘信息服务平台基本信息接口
type ShareCompany struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 公司名称
	CompanyName *string `protobuf:"bytes,2,req,name=CompanyName" json:"CompanyName,omitempty"`
	// 统一社会信用代码
	Identifier *string `protobuf:"bytes,3,req,name=Identifier" json:"Identifier,omitempty"`
	// 注册地行政区划代码
	Address *uint32 `protobuf:"varint,4,req,name=Address" json:"Address,omitempty"`
	// 通信地址
	ContactAddress *string `protobuf:"bytes,5,req,name=ContactAddress" json:"ContactAddress,omitempty"`
	// 经营业户经济类型
	EconomicType *string `protobuf:"bytes,6,req,name=EconomicType" json:"EconomicType,omitempty"`
	// 法人代表姓名
	LegalName *string `protobuf:"bytes,7,req,name=LegalName" json:"LegalName,omitempty"`
	// 法人代表电话
	LegalPhone *string `protobuf:"bytes,8,req,name=LegalPhone" json:"LegalPhone,omitempty"`
	// 状态
	State *uint32 `protobuf:"varint,9,req,name=State" json:"State,omitempty"`
	// 操作标识
	Flag *uint32 `protobuf:"varint,10,req,name=Flag" json:"Flag,omitempty"`
	// 更新时间
	UpdateTime *uint64 `protobuf:"varint,11,req,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,12,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareCompany) Reset()         { *m = ShareCompany{} }
func (m *ShareCompany) String() string { return proto.CompactTextString(m) }
func (*ShareCompany) ProtoMessage()    {}
func (*ShareCompany) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{28}
}
func (m *ShareCompany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareCompany.Unmarshal(m, b)
}
func (m *ShareCompany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareCompany.Marshal(b, m, deterministic)
}
func (dst *ShareCompany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareCompany.Merge(dst, src)
}
func (m *ShareCompany) XXX_Size() int {
	return xxx_messageInfo_ShareCompany.Size(m)
}
func (m *ShareCompany) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareCompany.DiscardUnknown(m)
}

var xxx_messageInfo_ShareCompany proto.InternalMessageInfo

func (m *ShareCompany) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *ShareCompany) GetCompanyName() string {
	if m != nil && m.CompanyName != nil {
		return *m.CompanyName
	}
	return ""
}

func (m *ShareCompany) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *ShareCompany) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *ShareCompany) GetContactAddress() string {
	if m != nil && m.ContactAddress != nil {
		return *m.ContactAddress
	}
	return ""
}

func (m *ShareCompany) GetEconomicType() string {
	if m != nil && m.EconomicType != nil {
		return *m.EconomicType
	}
	return ""
}

func (m *ShareCompany) GetLegalName() string {
	if m != nil && m.LegalName != nil {
		return *m.LegalName
	}
	return ""
}

func (m *ShareCompany) GetLegalPhone() string {
	if m != nil && m.LegalPhone != nil {
		return *m.LegalPhone
	}
	return ""
}

func (m *ShareCompany) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *ShareCompany) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *ShareCompany) GetUpdateTime() uint64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *ShareCompany) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 9.2 私人小客车合乘驾驶员行程发布接口
type ShareRoute struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 行政区划代码
	Address *uint32 `protobuf:"varint,2,opt,name=Address" json:"Address,omitempty"`
	// 驾驶员发起行程编号
	RouteId *string `protobuf:"bytes,3,req,name=RouteId" json:"RouteId,omitempty"`
	// 驾驶员姓名
	DriverName *string `protobuf:"bytes,4,req,name=DriverName" json:"DriverName,omitempty"`
	// 驾驶员手机号
	DriverPhone *string `protobuf:"bytes,5,req,name=DriverPhone" json:"DriverPhone,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,6,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,7,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 行程出发地点
	Departure *string `protobuf:"bytes,8,req,name=Departure" json:"Departure,omitempty"`
	// 车辆出发经度
	DepLongitude *uint64 `protobuf:"varint,9,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 车辆出发纬度
	DepLatitude *uint64 `protobuf:"varint,10,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 行程达到地点
	Destination *string `protobuf:"bytes,11,req,name=Destination" json:"Destination,omitempty"`
	// 到达地经度
	DestLongitude *uint64 `protobuf:"varint,12,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 到达地纬度
	DestLatitude *uint64 `protobuf:"varint,13,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,14,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 行程发布时间
	RouteCreateTime *uint64 `protobuf:"varint,15,req,name=RouteCreateTime" json:"RouteCreateTime,omitempty"`
	// 行程预计里程
	RouteMile *float32 `protobuf:"fixed32,16,opt,name=RouteMile" json:"RouteMile,omitempty"`
	// 行程备注
	RouteNote *string `protobuf:"bytes,17,opt,name=RouteNote" json:"RouteNote,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,18,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareRoute) Reset()         { *m = ShareRoute{} }
func (m *ShareRoute) String() string { return proto.CompactTextString(m) }
func (*ShareRoute) ProtoMessage()    {}
func (*ShareRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{29}
}
func (m *ShareRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareRoute.Unmarshal(m, b)
}
func (m *ShareRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareRoute.Marshal(b, m, deterministic)
}
func (dst *ShareRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareRoute.Merge(dst, src)
}
func (m *ShareRoute) XXX_Size() int {
	return xxx_messageInfo_ShareRoute.Size(m)
}
func (m *ShareRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareRoute.DiscardUnknown(m)
}

var xxx_messageInfo_ShareRoute proto.InternalMessageInfo

func (m *ShareRoute) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *ShareRoute) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *ShareRoute) GetRouteId() string {
	if m != nil && m.RouteId != nil {
		return *m.RouteId
	}
	return ""
}

func (m *ShareRoute) GetDriverName() string {
	if m != nil && m.DriverName != nil {
		return *m.DriverName
	}
	return ""
}

func (m *ShareRoute) GetDriverPhone() string {
	if m != nil && m.DriverPhone != nil {
		return *m.DriverPhone
	}
	return ""
}

func (m *ShareRoute) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *ShareRoute) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *ShareRoute) GetDeparture() string {
	if m != nil && m.Departure != nil {
		return *m.Departure
	}
	return ""
}

func (m *ShareRoute) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *ShareRoute) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *ShareRoute) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *ShareRoute) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *ShareRoute) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *ShareRoute) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *ShareRoute) GetRouteCreateTime() uint64 {
	if m != nil && m.RouteCreateTime != nil {
		return *m.RouteCreateTime
	}
	return 0
}

func (m *ShareRoute) GetRouteMile() float32 {
	if m != nil && m.RouteMile != nil {
		return *m.RouteMile
	}
	return 0
}

func (m *ShareRoute) GetRouteNote() string {
	if m != nil && m.RouteNote != nil {
		return *m.RouteNote
	}
	return ""
}

func (m *ShareRoute) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 9.3 私人小客车合乘订单接口
type ShareOrder struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 行政区划代码
	Address *uint32 `protobuf:"varint,2,opt,name=Address" json:"Address,omitempty"`
	// 驾驶员发起行程编号
	RouteId *string `protobuf:"bytes,3,req,name=RouteId" json:"RouteId,omitempty"`
	// 乘客合乘订单号
	OrderId *string `protobuf:"bytes,4,req,name=OrderId" json:"OrderId,omitempty"`
	// 预计上车时间
	BookDepartTime *uint64 `protobuf:"varint,5,req,name=BookDepartTime" json:"BookDepartTime,omitempty"`
	// 预计上车地点
	Departure *string `protobuf:"bytes,6,req,name=Departure" json:"Departure,omitempty"`
	// 预计上车地点经度
	DepLongitude *uint64 `protobuf:"varint,7,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 预计上车地点纬度
	DepLatitude *uint64 `protobuf:"varint,8,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 预计下车地点
	Destination *string `protobuf:"bytes,9,req,name=Destination" json:"Destination,omitempty"`
	// 预计下车地点经度
	DestLongitude *uint64 `protobuf:"varint,10,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 预计下车地点纬度
	DestLatitude *uint64 `protobuf:"varint,11,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,12,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 订单确认时间
	OrderEnsureTime *uint64 `protobuf:"varint,13,req,name=OrderEnsureTime" json:"OrderEnsureTime,omitempty"`
	// 乘客人数
	PassengerNum *uint32 `protobuf:"varint,14,req,name=PassengerNum" json:"PassengerNum,omitempty"`
	// 乘客备注
	PassengerNote *string `protobuf:"bytes,15,opt,name=PassengerNote" json:"PassengerNote,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,16,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareOrder) Reset()         { *m = ShareOrder{} }
func (m *ShareOrder) String() string { return proto.CompactTextString(m) }
func (*ShareOrder) ProtoMessage()    {}
func (*ShareOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{30}
}
func (m *ShareOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareOrder.Unmarshal(m, b)
}
func (m *ShareOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareOrder.Marshal(b, m, deterministic)
}
func (dst *ShareOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareOrder.Merge(dst, src)
}
func (m *ShareOrder) XXX_Size() int {
	return xxx_messageInfo_ShareOrder.Size(m)
}
func (m *ShareOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ShareOrder proto.InternalMessageInfo

func (m *ShareOrder) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *ShareOrder) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *ShareOrder) GetRouteId() string {
	if m != nil && m.RouteId != nil {
		return *m.RouteId
	}
	return ""
}

func (m *ShareOrder) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *ShareOrder) GetBookDepartTime() uint64 {
	if m != nil && m.BookDepartTime != nil {
		return *m.BookDepartTime
	}
	return 0
}

func (m *ShareOrder) GetDeparture() string {
	if m != nil && m.Departure != nil {
		return *m.Departure
	}
	return ""
}

func (m *ShareOrder) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *ShareOrder) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *ShareOrder) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *ShareOrder) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *ShareOrder) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *ShareOrder) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *ShareOrder) GetOrderEnsureTime() uint64 {
	if m != nil && m.OrderEnsureTime != nil {
		return *m.OrderEnsureTime
	}
	return 0
}

func (m *ShareOrder) GetPassengerNum() uint32 {
	if m != nil && m.PassengerNum != nil {
		return *m.PassengerNum
	}
	return 0
}

func (m *ShareOrder) GetPassengerNote() string {
	if m != nil && m.PassengerNote != nil {
		return *m.PassengerNote
	}
	return ""
}

func (m *ShareOrder) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 9.4 私人小客车合乘订单支付接口
type SharePay struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 行政区划代码
	Address *uint32 `protobuf:"varint,2,opt,name=Address" json:"Address,omitempty"`
	// 驾驶员发起行程编号
	RouteId *string `protobuf:"bytes,3,req,name=RouteId" json:"RouteId,omitempty"`
	// 乘客合乘订单号
	OrderId *string `protobuf:"bytes,4,req,name=OrderId" json:"OrderId,omitempty"`
	// 驾驶员手机号
	DriverPhone *string `protobuf:"bytes,5,req,name=DriverPhone" json:"DriverPhone,omitempty"`
	// 机动车驾驶证号
	LicenseId *string `protobuf:"bytes,6,req,name=LicenseId" json:"LicenseId,omitempty"`
	// 车辆号牌
	VehicleNo *string `protobuf:"bytes,7,req,name=VehicleNo" json:"VehicleNo,omitempty"`
	// 运价类型编码
	FareType *string `protobuf:"bytes,8,req,name=FareType" json:"FareType,omitempty"`
	// 预计上车时间
	BookDepartTime *uint64 `protobuf:"varint,9,req,name=BookDepartTime" json:"BookDepartTime,omitempty"`
	// 实际上车时间
	DepartTime *uint64 `protobuf:"varint,10,req,name=DepartTime" json:"DepartTime,omitempty"`
	// 上车地点
	Departure *string `protobuf:"bytes,11,req,name=Departure" json:"Departure,omitempty"`
	//  上车地点经度
	DepLongitude *uint64 `protobuf:"varint,12,req,name=DepLongitude" json:"DepLongitude,omitempty"`
	// 上车地点纬度
	DepLatitude *uint64 `protobuf:"varint,13,req,name=DepLatitude" json:"DepLatitude,omitempty"`
	// 下车时间
	DestTime *uint64 `protobuf:"varint,14,req,name=DestTime" json:"DestTime,omitempty"`
	// 下车地点
	Destination *string `protobuf:"bytes,15,req,name=Destination" json:"Destination,omitempty"`
	// 下车地点经度
	DestLongitude *uint64 `protobuf:"varint,16,req,name=DestLongitude" json:"DestLongitude,omitempty"`
	// 下车地点纬度
	DestLatitude *uint64 `protobuf:"varint,17,req,name=DestLatitude" json:"DestLatitude,omitempty"`
	// 坐标加密标识
	Encrypt *uint32 `protobuf:"varint,18,req,name=Encrypt" json:"Encrypt,omitempty"`
	// 载客里程
	DriveMile *float32 `protobuf:"fixed32,19,req,name=DriveMile" json:"DriveMile,omitempty"`
	// 载客时间
	DriveTime *uint32 `protobuf:"varint,20,req,name=DriveTime" json:"DriveTime,omitempty"`
	// 实收金额
	FactPrice *float32 `protobuf:"fixed32,21,req,name=FactPrice" json:"FactPrice,omitempty"`
	// 应收金额
	Price *float32 `protobuf:"fixed32,22,req,name=Price" json:"Price,omitempty"`
	// 现金支付金额
	CashPrice *float32 `protobuf:"fixed32,23,req,name=CashPrice" json:"CashPrice,omitempty"`
	// 电子支付机构
	LineName *string `protobuf:"bytes,24,opt,name=LineName" json:"LineName,omitempty"`
	// 电子支付金额
	LinePrice *float32 `protobuf:"fixed32,25,req,name=LinePrice" json:"LinePrice,omitempty"`
	// 优惠金额
	BenfitPrice *float32 `protobuf:"fixed32,26,opt,name=BenfitPrice" json:"BenfitPrice,omitempty"`
	// 燃料成本分摊金额
	ShareFuelFee *float32 `protobuf:"fixed32,27,opt,name=ShareFuelFee" json:"ShareFuelFee,omitempty"`
	// 路桥通行分摊金额
	ShareHighwayToll *float32 `protobuf:"fixed32,28,opt,name=ShareHighwayToll" json:"ShareHighwayToll,omitempty"`
	// 附加费
	PassengerTip *float32 `protobuf:"fixed32,29,opt,name=PassengerTip" json:"PassengerTip,omitempty"`
	// 其他费用分摊金额
	ShareOther *float32 `protobuf:"fixed32,30,opt,name=ShareOther" json:"ShareOther,omitempty"`
	// 结算状态
	PayState *string `protobuf:"bytes,31,req,name=PayState" json:"PayState,omitempty"`
	// 乘客人数
	PassengerNum *uint32 `protobuf:"varint,32,req,name=PassengerNum" json:"PassengerNum,omitempty"`
	// 乘客结算时间
	PayTime *uint64 `protobuf:"varint,33,opt,name=PayTime" json:"PayTime,omitempty"`
	// 订单完成时间
	OrderMatchTime *uint64 `protobuf:"varint,34,opt,name=OrderMatchTime" json:"OrderMatchTime,omitempty"`
	// 保留字段
	Reserved             *string  `protobuf:"bytes,35,opt,name=Reserved" json:"Reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharePay) Reset()         { *m = SharePay{} }
func (m *SharePay) String() string { return proto.CompactTextString(m) }
func (*SharePay) ProtoMessage()    {}
func (*SharePay) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{31}
}
func (m *SharePay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharePay.Unmarshal(m, b)
}
func (m *SharePay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharePay.Marshal(b, m, deterministic)
}
func (dst *SharePay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharePay.Merge(dst, src)
}
func (m *SharePay) XXX_Size() int {
	return xxx_messageInfo_SharePay.Size(m)
}
func (m *SharePay) XXX_DiscardUnknown() {
	xxx_messageInfo_SharePay.DiscardUnknown(m)
}

var xxx_messageInfo_SharePay proto.InternalMessageInfo

func (m *SharePay) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *SharePay) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *SharePay) GetRouteId() string {
	if m != nil && m.RouteId != nil {
		return *m.RouteId
	}
	return ""
}

func (m *SharePay) GetOrderId() string {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return ""
}

func (m *SharePay) GetDriverPhone() string {
	if m != nil && m.DriverPhone != nil {
		return *m.DriverPhone
	}
	return ""
}

func (m *SharePay) GetLicenseId() string {
	if m != nil && m.LicenseId != nil {
		return *m.LicenseId
	}
	return ""
}

func (m *SharePay) GetVehicleNo() string {
	if m != nil && m.VehicleNo != nil {
		return *m.VehicleNo
	}
	return ""
}

func (m *SharePay) GetFareType() string {
	if m != nil && m.FareType != nil {
		return *m.FareType
	}
	return ""
}

func (m *SharePay) GetBookDepartTime() uint64 {
	if m != nil && m.BookDepartTime != nil {
		return *m.BookDepartTime
	}
	return 0
}

func (m *SharePay) GetDepartTime() uint64 {
	if m != nil && m.DepartTime != nil {
		return *m.DepartTime
	}
	return 0
}

func (m *SharePay) GetDeparture() string {
	if m != nil && m.Departure != nil {
		return *m.Departure
	}
	return ""
}

func (m *SharePay) GetDepLongitude() uint64 {
	if m != nil && m.DepLongitude != nil {
		return *m.DepLongitude
	}
	return 0
}

func (m *SharePay) GetDepLatitude() uint64 {
	if m != nil && m.DepLatitude != nil {
		return *m.DepLatitude
	}
	return 0
}

func (m *SharePay) GetDestTime() uint64 {
	if m != nil && m.DestTime != nil {
		return *m.DestTime
	}
	return 0
}

func (m *SharePay) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

func (m *SharePay) GetDestLongitude() uint64 {
	if m != nil && m.DestLongitude != nil {
		return *m.DestLongitude
	}
	return 0
}

func (m *SharePay) GetDestLatitude() uint64 {
	if m != nil && m.DestLatitude != nil {
		return *m.DestLatitude
	}
	return 0
}

func (m *SharePay) GetEncrypt() uint32 {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return 0
}

func (m *SharePay) GetDriveMile() float32 {
	if m != nil && m.DriveMile != nil {
		return *m.DriveMile
	}
	return 0
}

func (m *SharePay) GetDriveTime() uint32 {
	if m != nil && m.DriveTime != nil {
		return *m.DriveTime
	}
	return 0
}

func (m *SharePay) GetFactPrice() float32 {
	if m != nil && m.FactPrice != nil {
		return *m.FactPrice
	}
	return 0
}

func (m *SharePay) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *SharePay) GetCashPrice() float32 {
	if m != nil && m.CashPrice != nil {
		return *m.CashPrice
	}
	return 0
}

func (m *SharePay) GetLineName() string {
	if m != nil && m.LineName != nil {
		return *m.LineName
	}
	return ""
}

func (m *SharePay) GetLinePrice() float32 {
	if m != nil && m.LinePrice != nil {
		return *m.LinePrice
	}
	return 0
}

func (m *SharePay) GetBenfitPrice() float32 {
	if m != nil && m.BenfitPrice != nil {
		return *m.BenfitPrice
	}
	return 0
}

func (m *SharePay) GetShareFuelFee() float32 {
	if m != nil && m.ShareFuelFee != nil {
		return *m.ShareFuelFee
	}
	return 0
}

func (m *SharePay) GetShareHighwayToll() float32 {
	if m != nil && m.ShareHighwayToll != nil {
		return *m.ShareHighwayToll
	}
	return 0
}

func (m *SharePay) GetPassengerTip() float32 {
	if m != nil && m.PassengerTip != nil {
		return *m.PassengerTip
	}
	return 0
}

func (m *SharePay) GetShareOther() float32 {
	if m != nil && m.ShareOther != nil {
		return *m.ShareOther
	}
	return 0
}

func (m *SharePay) GetPayState() string {
	if m != nil && m.PayState != nil {
		return *m.PayState
	}
	return ""
}

func (m *SharePay) GetPassengerNum() uint32 {
	if m != nil && m.PassengerNum != nil {
		return *m.PassengerNum
	}
	return 0
}

func (m *SharePay) GetPayTime() uint64 {
	if m != nil && m.PayTime != nil {
		return *m.PayTime
	}
	return 0
}

func (m *SharePay) GetOrderMatchTime() uint64 {
	if m != nil && m.OrderMatchTime != nil {
		return *m.OrderMatchTime
	}
	return 0
}

func (m *SharePay) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

type OTIpc struct {
	// 公司标识
	CompanyId *string `protobuf:"bytes,1,req,name=CompanyId" json:"CompanyId,omitempty"`
	// 消息来源标识
	Source *string `protobuf:"bytes,2,req,name=Source" json:"Source,omitempty"`
	// 业务接口代码
	IPCType *IpcType `protobuf:"varint,3,req,name=IPCType,enum=main.IpcType" json:"IPCType,omitempty"`
	// 4.1 网约车平台公司基本信息接口
	BaseInfoCompany []*BaseInfoCompany `protobuf:"bytes,4097,rep,name=baseInfoCompany" json:"baseInfoCompany,omitempty"`
	// 4.2 网约车平台公司营运规模信息信息接口
	BaseInfoCompanyStat []*BaseInfoCompanyStat `protobuf:"bytes,4098,rep,name=baseInfoCompanyStat" json:"baseInfoCompanyStat,omitempty"`
	// 4.3 网约车平台公司支付信息接口
	BaseInfoCompanyPay []*BaseInfoCompanyPay `protobuf:"bytes,4099,rep,name=baseInfoCompanyPay" json:"baseInfoCompanyPay,omitempty"`
	// 4.4 网约车平台公司服务机构接口
	BaseInfoCompanyService []*BaseInfoCompanyService `protobuf:"bytes,4100,rep,name=baseInfoCompanyService" json:"baseInfoCompanyService,omitempty"`
	// 4.5 网约车平台公司经营许可接口
	BaseInfoCompanyPermit []*BaseInfoCompanyPermit `protobuf:"bytes,4101,rep,name=baseInfoCompanyPermit" json:"baseInfoCompanyPermit,omitempty"`
	// 4.6 网约车平台公司运价信息接口
	BaseInfoCompanyFare []*BaseInfoCompanyFare `protobuf:"bytes,4102,rep,name=baseInfoCompanyFare" json:"baseInfoCompanyFare,omitempty"`
	// 4.7 车辆基本信息接口
	BaseInfoVehicle []*BaseInfoVehicle `protobuf:"bytes,4103,rep,name=baseInfoVehicle" json:"baseInfoVehicle,omitempty"`
	// 4.8 车辆保险信息接口
	BaseInfoVehicleInsurance []*BaseInfoVehicleInsurance `protobuf:"bytes,4104,rep,name=baseInfoVehicleInsurance" json:"baseInfoVehicleInsurance,omitempty"`
	// 4.9 网约车车辆里程信息接口
	BaseInfoVehicleTotalMile []*BaseInfoVehicleTotalMile `protobuf:"bytes,4105,rep,name=baseInfoVehicleTotalMile" json:"baseInfoVehicleTotalMile,omitempty"`
	// 4.10 驾驶员基本信息接口
	BaseInfoDriver []*BaseInfoDriver `protobuf:"bytes,4112,rep,name=baseInfoDriver" json:"baseInfoDriver,omitempty"`
	// 4.11 网约车驾驶员培训信息接口
	BaseInfoDriverEducate []*BaseInfoDriverEducate `protobuf:"bytes,4113,rep,name=baseInfoDriverEducate" json:"baseInfoDriverEducate,omitempty"`
	// 4.12 驾驶员移动终端信息接口
	BaseInfoDriverApp []*BaseInfoDriverApp `protobuf:"bytes,4114,rep,name=baseInfoDriverApp" json:"baseInfoDriverApp,omitempty"`
	// 4.13 驾驶员统计信息接口
	BaseInfoDriverStat []*BaseInfoDriverStat `protobuf:"bytes,4115,rep,name=baseInfoDriverStat" json:"baseInfoDriverStat,omitempty"`
	// 4.14 乘客基本信息接口
	BaseInfoPassenger []*BaseInfoPassenger `protobuf:"bytes,4116,rep,name=baseInfoPassenger" json:"baseInfoPassenger,omitempty"`
	// 5.1 订单发起接口
	OrderCreate []*OrderCreate `protobuf:"bytes,8193,rep,name=orderCreate" json:"orderCreate,omitempty"`
	// 5.2 订单成功接口
	OrderMatch []*OrderMatch `protobuf:"bytes,8194,rep,name=orderMatch" json:"orderMatch,omitempty"`
	// 5.3 订单撤销接口
	OrderCancel []*OrderCancel `protobuf:"bytes,8195,rep,name=orderCancel" json:"orderCancel,omitempty"`
	// 6.1 车辆运营上线接口
	OperateLogin []*OperateLogin `protobuf:"bytes,12289,rep,name=operateLogin" json:"operateLogin,omitempty"`
	// 6.2 车辆运营下线接口
	OperateLogout []*OperateLogout `protobuf:"bytes,12290,rep,name=operateLogout" json:"operateLogout,omitempty"`
	// 6.3 经营出发接口
	OperateDepart []*OperateDepart `protobuf:"bytes,12291,rep,name=operateDepart" json:"operateDepart,omitempty"`
	// 6.4 经营到达接口
	OperateArrive []*OperateArrive `protobuf:"bytes,12292,rep,name=operateArrive" json:"operateArrive,omitempty"`
	// 6.5 经营支付接口
	OperatePay []*OperatePay `protobuf:"bytes,12293,rep,name=operatePay" json:"operatePay,omitempty"`
	// 7.1 驾驶员定位信息接口
	PositionDriver []*PositionDriver `protobuf:"bytes,16385,rep,name=positionDriver" json:"positionDriver,omitempty"`
	// 7.2 车辆定位信息接口
	PositionVehicle []*PositionVehicle `protobuf:"bytes,16386,rep,name=positionVehicle" json:"positionVehicle,omitempty"`
	// 8.1 乘客评价信息接口
	RatedPassenger []*RatedPassenger `protobuf:"bytes,20481,rep,name=ratedPassenger" json:"ratedPassenger,omitempty"`
	// 8.2 乘客投诉信息接口
	RatedPassengerComplaint []*RatedPassengerComplaint `protobuf:"bytes,20482,rep,name=ratedPassengerComplaint" json:"ratedPassengerComplaint,omitempty"`
	// 8.3 驾驶员处罚信息接口
	RatedDriverPunish []*RatedDriverPunish `protobuf:"bytes,20483,rep,name=ratedDriverPunish" json:"ratedDriverPunish,omitempty"`
	// 8.4 驾驶员信誉信息接口
	RatedDriver []*RatedDriver `protobuf:"bytes,20484,rep,name=ratedDriver" json:"ratedDriver,omitempty"`
	// 9.1 私人小客车合乘信息服务平台基本信息接口
	ShareCompany []*ShareCompany `protobuf:"bytes,24577,rep,name=shareCompany" json:"shareCompany,omitempty"`
	// 9.2 私人小客车合乘驾驶员行程发布接口
	ShareRoute []*ShareRoute `protobuf:"bytes,24578,rep,name=shareRoute" json:"shareRoute,omitempty"`
	// 9.3 私人小客车合乘订单接口
	ShareOrder []*ShareOrder `protobuf:"bytes,24579,rep,name=shareOrder" json:"shareOrder,omitempty"`
	// 9.4 私人小客车合乘订单支付接口
	SharePay             []*SharePay `protobuf:"bytes,24580,rep,name=sharePay" json:"sharePay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OTIpc) Reset()         { *m = OTIpc{} }
func (m *OTIpc) String() string { return proto.CompactTextString(m) }
func (*OTIpc) ProtoMessage()    {}
func (*OTIpc) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{32}
}
func (m *OTIpc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTIpc.Unmarshal(m, b)
}
func (m *OTIpc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTIpc.Marshal(b, m, deterministic)
}
func (dst *OTIpc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTIpc.Merge(dst, src)
}
func (m *OTIpc) XXX_Size() int {
	return xxx_messageInfo_OTIpc.Size(m)
}
func (m *OTIpc) XXX_DiscardUnknown() {
	xxx_messageInfo_OTIpc.DiscardUnknown(m)
}

var xxx_messageInfo_OTIpc proto.InternalMessageInfo

func (m *OTIpc) GetCompanyId() string {
	if m != nil && m.CompanyId != nil {
		return *m.CompanyId
	}
	return ""
}

func (m *OTIpc) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *OTIpc) GetIPCType() IpcType {
	if m != nil && m.IPCType != nil {
		return *m.IPCType
	}
	return IpcType_baseInfoCompany
}

func (m *OTIpc) GetBaseInfoCompany() []*BaseInfoCompany {
	if m != nil {
		return m.BaseInfoCompany
	}
	return nil
}

func (m *OTIpc) GetBaseInfoCompanyStat() []*BaseInfoCompanyStat {
	if m != nil {
		return m.BaseInfoCompanyStat
	}
	return nil
}

func (m *OTIpc) GetBaseInfoCompanyPay() []*BaseInfoCompanyPay {
	if m != nil {
		return m.BaseInfoCompanyPay
	}
	return nil
}

func (m *OTIpc) GetBaseInfoCompanyService() []*BaseInfoCompanyService {
	if m != nil {
		return m.BaseInfoCompanyService
	}
	return nil
}

func (m *OTIpc) GetBaseInfoCompanyPermit() []*BaseInfoCompanyPermit {
	if m != nil {
		return m.BaseInfoCompanyPermit
	}
	return nil
}

func (m *OTIpc) GetBaseInfoCompanyFare() []*BaseInfoCompanyFare {
	if m != nil {
		return m.BaseInfoCompanyFare
	}
	return nil
}

func (m *OTIpc) GetBaseInfoVehicle() []*BaseInfoVehicle {
	if m != nil {
		return m.BaseInfoVehicle
	}
	return nil
}

func (m *OTIpc) GetBaseInfoVehicleInsurance() []*BaseInfoVehicleInsurance {
	if m != nil {
		return m.BaseInfoVehicleInsurance
	}
	return nil
}

func (m *OTIpc) GetBaseInfoVehicleTotalMile() []*BaseInfoVehicleTotalMile {
	if m != nil {
		return m.BaseInfoVehicleTotalMile
	}
	return nil
}

func (m *OTIpc) GetBaseInfoDriver() []*BaseInfoDriver {
	if m != nil {
		return m.BaseInfoDriver
	}
	return nil
}

func (m *OTIpc) GetBaseInfoDriverEducate() []*BaseInfoDriverEducate {
	if m != nil {
		return m.BaseInfoDriverEducate
	}
	return nil
}

func (m *OTIpc) GetBaseInfoDriverApp() []*BaseInfoDriverApp {
	if m != nil {
		return m.BaseInfoDriverApp
	}
	return nil
}

func (m *OTIpc) GetBaseInfoDriverStat() []*BaseInfoDriverStat {
	if m != nil {
		return m.BaseInfoDriverStat
	}
	return nil
}

func (m *OTIpc) GetBaseInfoPassenger() []*BaseInfoPassenger {
	if m != nil {
		return m.BaseInfoPassenger
	}
	return nil
}

func (m *OTIpc) GetOrderCreate() []*OrderCreate {
	if m != nil {
		return m.OrderCreate
	}
	return nil
}

func (m *OTIpc) GetOrderMatch() []*OrderMatch {
	if m != nil {
		return m.OrderMatch
	}
	return nil
}

func (m *OTIpc) GetOrderCancel() []*OrderCancel {
	if m != nil {
		return m.OrderCancel
	}
	return nil
}

func (m *OTIpc) GetOperateLogin() []*OperateLogin {
	if m != nil {
		return m.OperateLogin
	}
	return nil
}

func (m *OTIpc) GetOperateLogout() []*OperateLogout {
	if m != nil {
		return m.OperateLogout
	}
	return nil
}

func (m *OTIpc) GetOperateDepart() []*OperateDepart {
	if m != nil {
		return m.OperateDepart
	}
	return nil
}

func (m *OTIpc) GetOperateArrive() []*OperateArrive {
	if m != nil {
		return m.OperateArrive
	}
	return nil
}

func (m *OTIpc) GetOperatePay() []*OperatePay {
	if m != nil {
		return m.OperatePay
	}
	return nil
}

func (m *OTIpc) GetPositionDriver() []*PositionDriver {
	if m != nil {
		return m.PositionDriver
	}
	return nil
}

func (m *OTIpc) GetPositionVehicle() []*PositionVehicle {
	if m != nil {
		return m.PositionVehicle
	}
	return nil
}

func (m *OTIpc) GetRatedPassenger() []*RatedPassenger {
	if m != nil {
		return m.RatedPassenger
	}
	return nil
}

func (m *OTIpc) GetRatedPassengerComplaint() []*RatedPassengerComplaint {
	if m != nil {
		return m.RatedPassengerComplaint
	}
	return nil
}

func (m *OTIpc) GetRatedDriverPunish() []*RatedDriverPunish {
	if m != nil {
		return m.RatedDriverPunish
	}
	return nil
}

func (m *OTIpc) GetRatedDriver() []*RatedDriver {
	if m != nil {
		return m.RatedDriver
	}
	return nil
}

func (m *OTIpc) GetShareCompany() []*ShareCompany {
	if m != nil {
		return m.ShareCompany
	}
	return nil
}

func (m *OTIpc) GetShareRoute() []*ShareRoute {
	if m != nil {
		return m.ShareRoute
	}
	return nil
}

func (m *OTIpc) GetShareOrder() []*ShareOrder {
	if m != nil {
		return m.ShareOrder
	}
	return nil
}

func (m *OTIpc) GetSharePay() []*SharePay {
	if m != nil {
		return m.SharePay
	}
	return nil
}

type OTIpcList struct {
	Otpic                []*OTIpc `protobuf:"bytes,1,rep,name=otpic" json:"otpic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OTIpcList) Reset()         { *m = OTIpcList{} }
func (m *OTIpcList) String() string { return proto.CompactTextString(m) }
func (*OTIpcList) ProtoMessage()    {}
func (*OTIpcList) Descriptor() ([]byte, []int) {
	return fileDescriptor_OTIpcDef_d37c7b85e05b7d60, []int{33}
}
func (m *OTIpcList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OTIpcList.Unmarshal(m, b)
}
func (m *OTIpcList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OTIpcList.Marshal(b, m, deterministic)
}
func (dst *OTIpcList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OTIpcList.Merge(dst, src)
}
func (m *OTIpcList) XXX_Size() int {
	return xxx_messageInfo_OTIpcList.Size(m)
}
func (m *OTIpcList) XXX_DiscardUnknown() {
	xxx_messageInfo_OTIpcList.DiscardUnknown(m)
}

var xxx_messageInfo_OTIpcList proto.InternalMessageInfo

func (m *OTIpcList) GetOtpic() []*OTIpc {
	if m != nil {
		return m.Otpic
	}
	return nil
}

func init() {
	proto.RegisterType((*BaseInfoCompany)(nil), "main.BaseInfoCompany")
	proto.RegisterType((*BaseInfoCompanyStat)(nil), "main.BaseInfoCompanyStat")
	proto.RegisterType((*BaseInfoCompanyPay)(nil), "main.BaseInfoCompanyPay")
	proto.RegisterType((*BaseInfoCompanyService)(nil), "main.BaseInfoCompanyService")
	proto.RegisterType((*BaseInfoCompanyPermit)(nil), "main.BaseInfoCompanyPermit")
	proto.RegisterType((*BaseInfoCompanyFare)(nil), "main.BaseInfoCompanyFare")
	proto.RegisterType((*BaseInfoVehicle)(nil), "main.BaseInfoVehicle")
	proto.RegisterType((*BaseInfoVehicleInsurance)(nil), "main.BaseInfoVehicleInsurance")
	proto.RegisterType((*BaseInfoVehicleTotalMile)(nil), "main.BaseInfoVehicleTotalMile")
	proto.RegisterType((*BaseInfoDriver)(nil), "main.BaseInfoDriver")
	proto.RegisterType((*BaseInfoDriverEducate)(nil), "main.BaseInfoDriverEducate")
	proto.RegisterType((*BaseInfoDriverApp)(nil), "main.BaseInfoDriverApp")
	proto.RegisterType((*BaseInfoDriverStat)(nil), "main.BaseInfoDriverStat")
	proto.RegisterType((*BaseInfoPassenger)(nil), "main.BaseInfoPassenger")
	proto.RegisterType((*OrderCreate)(nil), "main.OrderCreate")
	proto.RegisterType((*OrderMatch)(nil), "main.OrderMatch")
	proto.RegisterType((*OrderCancel)(nil), "main.OrderCancel")
	proto.RegisterType((*OperateLogin)(nil), "main.OperateLogin")
	proto.RegisterType((*OperateLogout)(nil), "main.OperateLogout")
	proto.RegisterType((*OperateDepart)(nil), "main.OperateDepart")
	proto.RegisterType((*OperateArrive)(nil), "main.OperateArrive")
	proto.RegisterType((*OperatePay)(nil), "main.OperatePay")
	proto.RegisterType((*PositionDriver)(nil), "main.PositionDriver")
	proto.RegisterType((*PositionVehicle)(nil), "main.PositionVehicle")
	proto.RegisterType((*RatedPassenger)(nil), "main.RatedPassenger")
	proto.RegisterType((*RatedPassengerComplaint)(nil), "main.RatedPassengerComplaint")
	proto.RegisterType((*RatedDriverPunish)(nil), "main.RatedDriverPunish")
	proto.RegisterType((*RatedDriver)(nil), "main.RatedDriver")
	proto.RegisterType((*ShareCompany)(nil), "main.ShareCompany")
	proto.RegisterType((*ShareRoute)(nil), "main.ShareRoute")
	proto.RegisterType((*ShareOrder)(nil), "main.ShareOrder")
	proto.RegisterType((*SharePay)(nil), "main.SharePay")
	proto.RegisterType((*OTIpc)(nil), "main.OTIpc")
	proto.RegisterType((*OTIpcList)(nil), "main.OTIpcList")
	proto.RegisterEnum("main.IpcType", IpcType_name, IpcType_value)
}

func init() { proto.RegisterFile("OTIpcDef.proto", fileDescriptor_OTIpcDef_d37c7b85e05b7d60) }

var fileDescriptor_OTIpcDef_d37c7b85e05b7d60 = []byte{
	// 4727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5b, 0xcd, 0x6f, 0x24, 0xc9,
	0x52, 0x57, 0xb7, 0xbb, 0xdd, 0xdd, 0xd9, 0xfe, 0x28, 0xa7, 0xbf, 0x6a, 0xe7, 0xc3, 0xdb, 0x3b,
	0xbb, 0x6f, 0xd7, 0xac, 0x56, 0x2b, 0x58, 0x3d, 0xe0, 0x09, 0x09, 0x34, 0x33, 0xb6, 0x67, 0xb0,
	0xe4, 0xb1, 0xad, 0x1a, 0xef, 0x3e, 0x21, 0x2e, 0x53, 0xee, 0xce, 0xb6, 0x4b, 0xd3, 0xae, 0x6a,
	0x55, 0x55, 0xcf, 0x8e, 0xdf, 0x69, 0x6d, 0xcf, 0xbe, 0x0f, 0x4e, 0xef, 0xeb, 0x04, 0x12, 0x0c,
	0x7f, 0x03, 0x48, 0xdc, 0x60, 0x11, 0x42, 0xe2, 0x08, 0x7a, 0x9c, 0x38, 0xbc, 0x1b, 0xdc, 0x38,
	0x70, 0xe1, 0x43, 0x5c, 0x50, 0x46, 0xe4, 0x77, 0x55, 0x77, 0x9b, 0x99, 0x9d, 0x7d, 0xb7, 0x8e,
	0x5f, 0x44, 0x66, 0x65, 0x46, 0x46, 0x46, 0x44, 0x46, 0x66, 0x93, 0x85, 0x83, 0xa3, 0xdd, 0x61,
	0x77, 0x9b, 0xf5, 0x3f, 0x1e, 0xa6, 0x49, 0x9e, 0xd0, 0xda, 0x59, 0x18, 0xc5, 0x77, 0xfe, 0x77,
	0x86, 0x2c, 0xde, 0x0f, 0x33, 0xb6, 0x1b, 0xf7, 0x93, 0xad, 0xe4, 0x6c, 0x18, 0xc6, 0xe7, 0xf4,
	0x16, 0x69, 0x89, 0x9f, 0xbb, 0x3d, 0xbf, 0xd2, 0xa9, 0x6e, 0xb6, 0x02, 0x0d, 0xd0, 0x0e, 0x69,
	0x0b, 0x62, 0x3f, 0x3c, 0x63, 0x7e, 0x15, 0xf8, 0x26, 0x44, 0x37, 0x08, 0xd9, 0xed, 0xb1, 0x38,
	0x8f, 0xfa, 0x11, 0x4b, 0xfd, 0x19, 0x10, 0x30, 0x10, 0xea, 0x93, 0xc6, 0xbd, 0x5e, 0x2f, 0x65,
	0x59, 0xe6, 0xd7, 0x3a, 0xd5, 0xcd, 0xf9, 0x40, 0x92, 0xf4, 0x3d, 0x32, 0x7f, 0x7f, 0x94, 0x45,
	0x31, 0xcb, 0xb2, 0xc7, 0xdd, 0x64, 0xc8, 0xfc, 0x3a, 0x34, 0xb6, 0x41, 0xfa, 0x3e, 0x59, 0xd8,
	0x4a, 0xe2, 0x3c, 0xec, 0xe6, 0xb2, 0x9b, 0x59, 0x10, 0x73, 0x50, 0x7a, 0x87, 0xcc, 0xed, 0x74,
	0x93, 0x38, 0x39, 0x8b, 0xba, 0x47, 0xe7, 0x43, 0xe6, 0x37, 0x40, 0xca, 0xc2, 0xf8, 0x58, 0x03,
	0x76, 0xb2, 0x15, 0x0e, 0xa3, 0x3c, 0x1c, 0xf8, 0x4d, 0x1c, 0xab, 0x46, 0xb8, 0x2e, 0xf6, 0xd8,
	0x49, 0x38, 0x80, 0xb9, 0xb6, 0x50, 0x17, 0x0a, 0xe0, 0x33, 0x01, 0x62, 0x77, 0xdb, 0x27, 0xc0,
	0x93, 0x24, 0xef, 0x17, 0x7e, 0x1e, 0x9e, 0x26, 0x31, 0xf3, 0xdb, 0xd8, 0xaf, 0x46, 0x4c, 0x7e,
	0x9e, 0xf8, 0x73, 0x9d, 0x8a, 0xc9, 0xcf, 0x13, 0xba, 0x42, 0xea, 0x8f, 0xf3, 0x30, 0x67, 0xfe,
	0x3c, 0x68, 0x08, 0x09, 0x4a, 0x49, 0xed, 0xc1, 0x20, 0x3c, 0xf1, 0x17, 0x00, 0x84, 0xdf, 0xbc,
	0xa7, 0x4f, 0x87, 0xbd, 0x30, 0x67, 0x47, 0xd1, 0x19, 0xf3, 0x17, 0x3b, 0xd5, 0xcd, 0x5a, 0x60,
	0x20, 0xf4, 0x06, 0x69, 0x06, 0x2c, 0x63, 0xe9, 0x33, 0xd6, 0xf3, 0x3d, 0xf8, 0x8e, 0xa2, 0xef,
	0xfc, 0x6d, 0x85, 0x2c, 0x3b, 0xab, 0xcf, 0x3f, 0x34, 0xc5, 0x02, 0x36, 0x08, 0xf9, 0x8c, 0x9d,
	0x46, 0xdd, 0x01, 0xdb, 0x1f, 0x9d, 0x81, 0x01, 0xcc, 0x07, 0x06, 0xc2, 0x5b, 0x6f, 0xa7, 0xd1,
	0x33, 0x96, 0x72, 0xf6, 0x0c, 0xb0, 0x35, 0xa0, 0xe6, 0x50, 0x1b, 0x3b, 0x87, 0xfa, 0xc4, 0x39,
	0xcc, 0x3a, 0x73, 0xf8, 0xeb, 0x2a, 0xa1, 0xce, 0x1c, 0x0e, 0xc3, 0x69, 0x46, 0xec, 0x93, 0xc6,
	0x61, 0x68, 0x1a, 0xb0, 0x24, 0xb9, 0xe2, 0x0f, 0x43, 0xde, 0x06, 0xed, 0x16, 0x09, 0x21, 0x0f,
	0x56, 0x54, 0x53, 0xf2, 0x60, 0x40, 0x37, 0x48, 0xf3, 0x30, 0x3c, 0x37, 0xad, 0x55, 0xd1, 0x7c,
	0xab, 0x1c, 0xa6, 0x6c, 0x18, 0xa6, 0xec, 0x7e, 0x18, 0x3f, 0x15, 0x56, 0x6a, 0x42, 0x38, 0xca,
	0x51, 0x9c, 0x6f, 0xf3, 0xa5, 0x6e, 0xa0, 0xaa, 0x14, 0xa0, 0x8d, 0xa0, 0x59, 0x66, 0x04, 0xad,
	0xb1, 0x0a, 0x24, 0x13, 0x15, 0xd8, 0x76, 0x14, 0xf8, 0xa7, 0x35, 0xb2, 0xe6, 0x1a, 0x01, 0x4b,
	0x9f, 0x45, 0x5d, 0x36, 0x5d, 0x89, 0x72, 0x03, 0x56, 0xed, 0x7d, 0xdc, 0x21, 0x6d, 0xd1, 0x05,
	0xa8, 0x18, 0x55, 0x69, 0x42, 0xbc, 0x67, 0x49, 0x26, 0x42, 0xa5, 0x1a, 0xe0, 0x7e, 0x60, 0x9b,
	0xe5, 0x61, 0x34, 0x90, 0xfd, 0x0b, 0x3f, 0x60, 0x81, 0x74, 0x93, 0x2c, 0x06, 0x2c, 0x1b, 0x26,
	0x71, 0x16, 0x1d, 0x0f, 0xf0, 0x4b, 0xa8, 0x62, 0x17, 0xa6, 0x1f, 0x12, 0xcf, 0x80, 0x70, 0x4f,
	0xa2, 0x37, 0x28, 0xe0, 0x7c, 0xec, 0x8f, 0xc2, 0x38, 0x3c, 0x61, 0x29, 0xf4, 0x88, 0x2e, 0xc1,
	0x84, 0xb8, 0x5f, 0x11, 0x24, 0xf6, 0x84, 0x6e, 0xc1, 0xc2, 0xb8, 0x8c, 0xf0, 0x46, 0x28, 0x43,
	0x40, 0xe9, 0x16, 0x86, 0x5f, 0xd2, 0x73, 0x6c, 0xcb, 0x2f, 0xe9, 0x19, 0x6e, 0x10, 0xb2, 0x95,
	0xb2, 0x30, 0x67, 0x60, 0x1f, 0x73, 0xb8, 0xac, 0x1a, 0xf9, 0x86, 0xbc, 0xc4, 0x9f, 0xcc, 0x90,
	0x55, 0x77, 0x87, 0xb1, 0xf4, 0x2c, 0xca, 0x5f, 0xc7, 0x3e, 0xb6, 0x58, 0xca, 0xc3, 0x41, 0x97,
	0x8f, 0x5e, 0xd8, 0x87, 0x01, 0x71, 0x0b, 0x38, 0x18, 0xb2, 0x34, 0xcc, 0xa3, 0x24, 0xbe, 0x97,
	0xb2, 0x50, 0xd8, 0x88, 0x0d, 0xf2, 0xef, 0x1f, 0x7c, 0x1e, 0x8b, 0x95, 0x42, 0x1b, 0xd1, 0x00,
	0x5f, 0x83, 0x83, 0xf4, 0x24, 0x8c, 0xa3, 0xef, 0x41, 0x0b, 0x61, 0x1c, 0x16, 0x06, 0x76, 0x98,
	0x87, 0xa9, 0xde, 0x80, 0xb5, 0x40, 0x03, 0x5c, 0x2b, 0x8f, 0xf3, 0x64, 0xb8, 0x2d, 0xf7, 0x60,
	0x2d, 0x50, 0xb4, 0x9e, 0xc3, 0x39, 0xb0, 0x5b, 0xc0, 0x36, 0x21, 0xbd, 0x3a, 0x18, 0x1b, 0x9c,
	0xd5, 0x69, 0x8f, 0x5d, 0x9d, 0xb9, 0x89, 0xab, 0x33, 0xef, 0xac, 0xce, 0x5f, 0x35, 0x0b, 0x3e,
	0xfc, 0x41, 0x98, 0xbe, 0xfa, 0xde, 0xbd, 0x41, 0x9a, 0xbc, 0x3d, 0xf8, 0x3a, 0x5c, 0x18, 0x45,
	0x73, 0x8d, 0xca, 0xdf, 0xfb, 0x49, 0xce, 0x7d, 0x21, 0x58, 0xb5, 0x89, 0x71, 0xbd, 0x70, 0xfa,
	0xb3, 0x70, 0x10, 0xf5, 0x0e, 0x62, 0xe1, 0xcc, 0x4d, 0x48, 0xf6, 0x82, 0x64, 0xbf, 0x0f, 0x1e,
	0xbd, 0x16, 0x58, 0x98, 0x5a, 0x17, 0x0e, 0xc2, 0xba, 0x54, 0x03, 0x0d, 0x28, 0xee, 0xa3, 0x68,
	0x80, 0x0b, 0x23, 0xb9, 0x1c, 0xe0, 0xbb, 0xfd, 0xd3, 0x38, 0xca, 0x0f, 0xd3, 0xa8, 0xcb, 0x0e,
	0x59, 0x0a, 0x42, 0x2d, 0x10, 0x2a, 0xe0, 0xf4, 0x63, 0x42, 0x6d, 0x2c, 0x1e, 0x89, 0x05, 0xab,
	0x06, 0x25, 0x1c, 0xae, 0xb7, 0x4f, 0x87, 0x80, 0x81, 0x1f, 0xad, 0x06, 0x92, 0x84, 0xaf, 0xe2,
	0x4f, 0x3d, 0xb4, 0x39, 0x10, 0x29, 0xe0, 0xf4, 0x23, 0xb2, 0xf4, 0x28, 0x49, 0xe3, 0x28, 0x3e,
	0x39, 0x64, 0xe1, 0x53, 0xbe, 0xc4, 0x07, 0x31, 0xec, 0xe1, 0x56, 0x50, 0x64, 0xf0, 0x31, 0xba,
	0x60, 0xbf, 0x0f, 0xbb, 0xbb, 0x15, 0x94, 0x70, 0x78, 0xef, 0x3b, 0xcf, 0x98, 0xd3, 0xfb, 0x22,
	0xf6, 0x5e, 0x60, 0xf0, 0xde, 0x5d, 0xb0, 0xdf, 0xf7, 0x3d, 0xec, 0xbd, 0xc8, 0xe1, 0x5e, 0xf7,
	0x20, 0x3f, 0x65, 0xa9, 0xd1, 0xf7, 0x12, 0x98, 0x81, 0x0b, 0x73, 0x8d, 0xd8, 0x50, 0xbf, 0xef,
	0x53, 0x10, 0x2d, 0xe0, 0x7c, 0xbf, 0x73, 0x52, 0x69, 0xdc, 0x5f, 0x86, 0x25, 0xb0, 0x41, 0x3e,
	0x56, 0x0e, 0x38, 0x5a, 0x5e, 0xc1, 0xd5, 0x2a, 0x72, 0xe8, 0x6f, 0x91, 0xb5, 0xbd, 0xe4, 0xf3,
	0xc7, 0x43, 0xc6, 0x7a, 0xce, 0x0a, 0xaf, 0xc2, 0xca, 0x8c, 0xe1, 0x72, 0x0d, 0xee, 0x47, 0x27,
	0xa7, 0xb6, 0x09, 0xad, 0x41, 0x93, 0x22, 0x83, 0xfe, 0x3a, 0x59, 0x76, 0x40, 0xf8, 0xc4, 0x3a,
	0xc8, 0x97, 0xb1, 0xf8, 0x7e, 0x47, 0x0d, 0xc0, 0x54, 0x7d, 0x10, 0x34, 0x10, 0xed, 0x39, 0xde,
	0x32, 0xfd, 0xba, 0xed, 0x25, 0x6e, 0x14, 0xbc, 0x84, 0xf4, 0x2c, 0x37, 0x0d, 0xcf, 0x62, 0x7a,
	0x8e, 0x5b, 0x8e, 0xe7, 0xf8, 0xaf, 0xa6, 0xce, 0xfd, 0x45, 0xfa, 0xf6, 0xca, 0x5e, 0xe3, 0x16,
	0x69, 0xc9, 0x0c, 0x30, 0x11, 0x6e, 0x43, 0x03, 0x7c, 0xe4, 0x87, 0x83, 0x30, 0x67, 0x5b, 0xc9,
	0x20, 0x49, 0x85, 0x2b, 0x37, 0x10, 0x98, 0x2f, 0x0b, 0x73, 0x8c, 0xf3, 0x7c, 0xbe, 0x9c, 0xe0,
	0xe8, 0xfd, 0x34, 0x8c, 0x7b, 0xc2, 0x71, 0x23, 0xc1, 0xd1, 0x47, 0x49, 0x8f, 0x0d, 0x44, 0x00,
	0x47, 0x82, 0x7b, 0x1d, 0xf1, 0x39, 0x70, 0x5c, 0x22, 0x6a, 0x1b, 0x90, 0x1d, 0x2b, 0x5a, 0x25,
	0xb1, 0x42, 0x08, 0xe3, 0x18, 0xd1, 0x65, 0x5b, 0x18, 0xd7, 0xe5, 0x4e, 0x7c, 0x12, 0xc5, 0x6c,
	0xb7, 0x27, 0x82, 0xb5, 0xa2, 0xa9, 0x47, 0x66, 0x3e, 0xdb, 0xdd, 0x07, 0xd7, 0xdd, 0x0a, 0xf8,
	0x4f, 0xc8, 0x00, 0x74, 0x30, 0xb8, 0x07, 0xdb, 0xbb, 0x16, 0x58, 0x18, 0xf8, 0xda, 0x11, 0x1b,
	0xc0, 0x90, 0x17, 0x84, 0xaf, 0x15, 0x34, 0x3f, 0xe5, 0x60, 0xef, 0xdb, 0x51, 0x36, 0x1c, 0x84,
	0x5d, 0x26, 0xb6, 0xb0, 0x83, 0x42, 0x6a, 0xca, 0x8f, 0x0c, 0xbb, 0x32, 0x70, 0x4b, 0xd2, 0x8d,
	0xb2, 0xb8, 0x4b, 0xad, 0x28, 0xdb, 0x21, 0xed, 0xa3, 0x34, 0x8c, 0xb3, 0x7b, 0x27, 0x2c, 0xee,
	0x9e, 0xfb, 0x14, 0xb5, 0x66, 0x40, 0x5c, 0x6b, 0x48, 0xf2, 0x18, 0xbc, 0x8c, 0x5a, 0x53, 0x00,
	0x1f, 0x23, 0x10, 0x7c, 0x36, 0xb0, 0xeb, 0x60, 0x2f, 0xd6, 0x02, 0x07, 0xe5, 0xbb, 0xdb, 0x40,
	0x92, 0xa1, 0xbf, 0x0a, 0x62, 0x36, 0xe8, 0x68, 0xec, 0xbe, 0xbf, 0x56, 0xd0, 0xd8, 0x7d, 0xd0,
	0x58, 0xf4, 0x1c, 0x37, 0xc7, 0xba, 0xd0, 0x98, 0xa0, 0xf9, 0x6c, 0xf6, 0xd9, 0xf3, 0xfc, 0x41,
	0xf4, 0x1c, 0x22, 0xb2, 0x0f, 0x61, 0xc5, 0x84, 0x20, 0x9f, 0x3a, 0x65, 0xdd, 0xa7, 0x7a, 0x73,
	0xb5, 0x02, 0x03, 0xe1, 0xfc, 0x07, 0x8c, 0x1d, 0xa6, 0x51, 0x9c, 0xef, 0xf6, 0x60, 0x87, 0xb5,
	0x02, 0x03, 0xe1, 0x5f, 0x7f, 0x78, 0xf8, 0x18, 0x8d, 0xf2, 0x26, 0x7e, 0x5d, 0xd2, 0x82, 0x87,
	0xa6, 0x79, 0x4b, 0xf1, 0xd0, 0x3a, 0x7d, 0xd2, 0x78, 0x78, 0xf8, 0x78, 0xf7, 0xd1, 0xce, 0xae,
	0x7f, 0x1b, 0xd7, 0x48, 0x90, 0x5c, 0x83, 0xfc, 0x67, 0x9c, 0xe5, 0xe1, 0x60, 0x00, 0xc3, 0xde,
	0x40, 0x0d, 0xda, 0x28, 0xd7, 0x4d, 0xc0, 0x4e, 0xa2, 0x2c, 0x67, 0x29, 0x48, 0xbd, 0x8d, 0xba,
	0x31, 0x31, 0x3c, 0x17, 0x9f, 0x9d, 0xb1, 0xb4, 0x1b, 0x85, 0x68, 0x53, 0x1d, 0xd8, 0x4e, 0x0e,
	0x6a, 0x45, 0xf8, 0x77, 0x9c, 0x08, 0xaf, 0x3c, 0xcf, 0x9d, 0xb2, 0x8c, 0xf2, 0xdd, 0xb1, 0x39,
	0xcb, 0x7b, 0x13, 0x73, 0x96, 0x6f, 0x39, 0x9e, 0xe7, 0x9f, 0xab, 0xc4, 0x77, 0x3c, 0xcf, 0x6e,
	0x9c, 0x8d, 0xd2, 0x30, 0x9e, 0x7a, 0xe8, 0xb0, 0x1c, 0x4d, 0xd5, 0x75, 0x34, 0x37, 0x48, 0x13,
	0x3a, 0xda, 0x4a, 0xce, 0x64, 0xf2, 0x22, 0x69, 0xc5, 0xe3, 0xa7, 0xd2, 0x9a, 0xc1, 0x13, 0x47,
	0x56, 0xf8, 0x0d, 0x3a, 0x11, 0x89, 0xa4, 0x02, 0xa0, 0xa0, 0x81, 0xbd, 0x8c, 0xe2, 0x1c, 0xbc,
	0x51, 0x35, 0x30, 0x10, 0xd5, 0xf3, 0x4e, 0xbf, 0x2f, 0x72, 0x48, 0x45, 0x6b, 0xde, 0xf3, 0xa1,
	0x4c, 0x21, 0x25, 0xfd, 0xb5, 0x9f, 0xe4, 0x7e, 0x59, 0x29, 0xa8, 0xf5, 0x28, 0xc9, 0xc3, 0x01,
	0x44, 0xa9, 0x37, 0xe3, 0xd9, 0xb9, 0x7f, 0x90, 0x9f, 0x00, 0xad, 0x56, 0x03, 0x0d, 0xa8, 0x09,
	0xd6, 0xc7, 0x4e, 0x70, 0x76, 0xe2, 0x04, 0x1b, 0xee, 0x51, 0x75, 0x9e, 0x2c, 0xc8, 0x09, 0x62,
	0x45, 0xe1, 0x95, 0xa7, 0xb5, 0x41, 0x88, 0xa8, 0x49, 0xe0, 0x09, 0x15, 0x0a, 0x30, 0x1a, 0xe1,
	0xce, 0x04, 0x29, 0x3c, 0xbf, 0xa1, 0xc1, 0x98, 0x10, 0xdf, 0x92, 0x48, 0x3e, 0x64, 0x71, 0x8f,
	0xa5, 0xc2, 0x6c, 0x2c, 0x8c, 0x6f, 0x49, 0xa4, 0xef, 0x47, 0x69, 0x7e, 0xda, 0x0b, 0xcf, 0xc5,
	0x84, 0x1d, 0x94, 0x27, 0x1c, 0xf2, 0xdb, 0xfc, 0x58, 0x12, 0x0e, 0xa2, 0xfc, 0x5c, 0xcc, 0xbe,
	0xc8, 0xd0, 0x5f, 0x46, 0x50, 0x44, 0x3b, 0x0b, 0xe3, 0x49, 0x09, 0xd2, 0x8f, 0xc2, 0x34, 0xca,
	0xc3, 0x01, 0xdf, 0xc8, 0xa3, 0xcc, 0x6f, 0x41, 0x9f, 0x65, 0x2c, 0xdd, 0x62, 0x2f, 0x8c, 0x4f,
	0x46, 0xe1, 0x09, 0xdb, 0x63, 0xcf, 0xd8, 0x40, 0x9c, 0x5c, 0xcb, 0x58, 0x3c, 0x15, 0x44, 0x78,
	0xa7, 0x37, 0xea, 0xe2, 0x50, 0xd0, 0x24, 0x5d, 0x58, 0x8f, 0x78, 0x8b, 0xc5, 0xd9, 0x28, 0x13,
	0x05, 0x2f, 0x0b, 0x83, 0x43, 0x3f, 0xd0, 0x72, 0xc5, 0xf0, 0xa4, 0x63, 0x83, 0xf4, 0x13, 0xb2,
	0x22, 0x5a, 0xd9, 0x25, 0x40, 0x0c, 0x9f, 0xa5, 0x3c, 0x33, 0x44, 0x2e, 0xda, 0x21, 0xf2, 0x16,
	0x69, 0xed, 0x45, 0x5d, 0x16, 0x67, 0x0c, 0xc2, 0x27, 0x96, 0xf7, 0x24, 0xc0, 0x57, 0x4f, 0x10,
	0xb2, 0x39, 0xc6, 0x50, 0x07, 0xd5, 0xb6, 0x04, 0xee, 0x83, 0x9a, 0xb6, 0x04, 0xfe, 0xe3, 0x13,
	0xb2, 0xf2, 0x90, 0xe5, 0x42, 0x83, 0xd8, 0x14, 0x9c, 0xf8, 0x32, 0xd8, 0x42, 0x29, 0x4f, 0xeb,
	0x56, 0x80, 0x07, 0xb1, 0x88, 0xad, 0x2e, 0xcc, 0xd3, 0x6c, 0x1b, 0xea, 0xf7, 0x45, 0x7c, 0x2d,
	0xe0, 0x7c, 0xa4, 0x47, 0xe1, 0xf3, 0x08, 0x71, 0x08, 0xb0, 0xf3, 0x81, 0x81, 0xf0, 0x35, 0x30,
	0xf2, 0x83, 0xfd, 0x44, 0xc4, 0x58, 0x1b, 0xa4, 0x77, 0xc9, 0xcd, 0x7d, 0x96, 0x7f, 0x9e, 0xa4,
	0x4f, 0xb7, 0xc2, 0x74, 0x37, 0xcb, 0x46, 0xcc, 0x3a, 0x67, 0xfb, 0xd0, 0x66, 0x92, 0x08, 0xa4,
	0xcc, 0x36, 0x7b, 0x5b, 0x46, 0xe4, 0x5a, 0x50, 0xc6, 0xe2, 0xa9, 0xfc, 0x43, 0x96, 0x6b, 0xce,
	0x61, 0x9a, 0x24, 0x7d, 0x68, 0x84, 0x89, 0xf0, 0x18, 0x2e, 0xa4, 0xf2, 0x36, 0x7c, 0x10, 0x43,
	0xec, 0xae, 0x05, 0x45, 0x06, 0x3f, 0x60, 0xb8, 0x60, 0xbf, 0x0f, 0xe1, 0xbc, 0x16, 0x94, 0x70,
	0x0a, 0x61, 0xf9, 0x76, 0x79, 0x58, 0x7e, 0x30, 0x1a, 0x0c, 0xb8, 0x73, 0x13, 0x7a, 0xdf, 0xe8,
	0x54, 0x78, 0x58, 0xb6, 0x51, 0x3e, 0xd2, 0xdd, 0x58, 0xf8, 0x85, 0x41, 0xd8, 0x7d, 0x3a, 0x88,
	0xb2, 0xdc, 0x7f, 0x1b, 0x44, 0x8b, 0x8c, 0x6b, 0x07, 0xfb, 0x4d, 0xb2, 0xc8, 0x77, 0x43, 0x1a,
	0x76, 0x73, 0xe1, 0x16, 0x45, 0xcc, 0x77, 0x61, 0x48, 0x8e, 0x04, 0x74, 0x10, 0x43, 0xfc, 0xaf,
	0x05, 0x06, 0x82, 0x85, 0x7f, 0x41, 0xf5, 0xfb, 0x90, 0x0b, 0xd4, 0x02, 0x13, 0xe2, 0x96, 0xb8,
	0x73, 0xc6, 0x52, 0xc8, 0x1c, 0xc5, 0x16, 0xf4, 0xdf, 0xc3, 0x03, 0x9f, 0x8b, 0xd3, 0x6f, 0x93,
	0x55, 0x17, 0x43, 0x4f, 0x8b, 0xb9, 0x42, 0x39, 0x93, 0x7e, 0x87, 0xac, 0xbb, 0x0c, 0xe9, 0x00,
	0xde, 0x87, 0x76, 0xe3, 0xd8, 0x3a, 0xb1, 0xf9, 0xa0, 0x2c, 0xb1, 0xd9, 0x1c, 0x1b, 0xa0, 0x7e,
	0x6d, 0x62, 0x80, 0xfa, 0xd0, 0x09, 0x50, 0xbf, 0xa8, 0xea, 0x52, 0x99, 0xe9, 0x03, 0x5f, 0x2b,
	0xfc, 0x6a, 0x0f, 0x35, 0xe3, 0x7a, 0x28, 0x58, 0xb3, 0x51, 0x9a, 0x61, 0xf5, 0x53, 0x1c, 0xac,
	0x34, 0xa2, 0xf9, 0x60, 0x9d, 0x75, 0xb9, 0xa6, 0x12, 0x51, 0x85, 0x14, 0x15, 0x8b, 0x5b, 0x81,
	0x06, 0x64, 0xf9, 0x0b, 0x98, 0x78, 0xda, 0x52, 0x34, 0xe7, 0x6d, 0x8f, 0x52, 0x1d, 0x7f, 0xe6,
	0x03, 0x45, 0x7f, 0xed, 0x79, 0xcd, 0xdf, 0x57, 0xc9, 0x92, 0xad, 0xd5, 0x7b, 0xc3, 0xe1, 0x1b,
	0xd2, 0xe8, 0xf4, 0xb8, 0xef, 0x93, 0xc6, 0x3e, 0xcb, 0x55, 0xa6, 0x38, 0x1f, 0x48, 0x92, 0xcf,
	0xf1, 0xde, 0x70, 0xf8, 0x19, 0x4b, 0x33, 0x5d, 0x6e, 0x34, 0x10, 0xde, 0xf2, 0x51, 0x38, 0x54,
	0x77, 0x51, 0xf3, 0x81, 0x24, 0xbf, 0xa1, 0x4a, 0xff, 0x3f, 0x1a, 0x57, 0x25, 0x38, 0xa3, 0x6b,
	0xdc, 0xf6, 0xbc, 0xaa, 0x22, 0x57, 0x48, 0x7d, 0xeb, 0xbc, 0x2b, 0xb2, 0xc2, 0x5a, 0x80, 0x04,
	0x54, 0x3e, 0xd2, 0x1e, 0x13, 0xa9, 0x34, 0xea, 0xcf, 0x40, 0xb8, 0x5b, 0x38, 0x4a, 0xc3, 0x7e,
	0x3f, 0xea, 0x7e, 0x16, 0x25, 0x03, 0x30, 0x27, 0x9d, 0x75, 0xcf, 0x07, 0xe5, 0x4c, 0x74, 0x72,
	0x67, 0xc3, 0x41, 0x18, 0xc5, 0xac, 0x87, 0xf2, 0xa8, 0x60, 0x17, 0x56, 0x2a, 0x6d, 0x8e, 0x55,
	0x69, 0x6b, 0xa2, 0x4a, 0x89, 0xa3, 0xd2, 0xbf, 0x30, 0x4c, 0xf3, 0x30, 0xcc, 0x32, 0x16, 0x9f,
	0x4c, 0x4d, 0x4a, 0xdd, 0xa0, 0x51, 0xc5, 0xfa, 0xa7, 0x1b, 0x34, 0x54, 0x77, 0x68, 0x89, 0xa8,
	0x60, 0x07, 0x85, 0xba, 0x99, 0x44, 0x84, 0x0f, 0x80, 0xa4, 0xc9, 0x02, 0xb9, 0x7e, 0x14, 0xa0,
	0xb2, 0x55, 0x48, 0xd4, 0x1c, 0x58, 0x1b, 0xe2, 0x6c, 0x99, 0x21, 0x36, 0xc6, 0x6a, 0xad, 0x39,
	0x51, 0x6b, 0x2d, 0x47, 0x6b, 0xff, 0x3a, 0x43, 0xda, 0xb8, 0xe8, 0x70, 0x97, 0xf1, 0xca, 0x16,
	0xe8, 0x93, 0x06, 0x74, 0xa3, 0xec, 0x4f, 0x92, 0x90, 0x92, 0xb1, 0xa1, 0xf4, 0x6c, 0x68, 0x82,
	0x06, 0x02, 0xd5, 0x20, 0x2e, 0x6a, 0x5c, 0x38, 0x6a, 0xc0, 0xd6, 0x6a, 0x02, 0xda, 0x70, 0xb4,
	0x9a, 0xe0, 0xa8, 0xb1, 0xc7, 0x51, 0x2a, 0xfd, 0xa3, 0x06, 0x20, 0xe5, 0x65, 0xc3, 0xbd, 0x24,
	0x3e, 0x89, 0xf2, 0x51, 0x4f, 0x6a, 0xc8, 0xc2, 0xc0, 0xd9, 0xb0, 0xe1, 0x5e, 0x98, 0xa3, 0x88,
	0xb8, 0x43, 0x30, 0x20, 0x94, 0xc8, 0xf2, 0x28, 0x46, 0x4f, 0x4b, 0x84, 0x3b, 0xd2, 0x10, 0xde,
	0x95, 0x65, 0xb9, 0xfe, 0x50, 0x1b, 0x6b, 0x2b, 0x16, 0x88, 0xa3, 0xc9, 0x72, 0xf5, 0xa9, 0x39,
	0x39, 0x1a, 0x8d, 0x71, 0x6d, 0xee, 0xc4, 0xdd, 0xf4, 0x7c, 0x98, 0x8b, 0xfb, 0x24, 0x49, 0x5a,
	0x15, 0x83, 0x05, 0xa7, 0x62, 0x60, 0xae, 0xf3, 0x62, 0xf1, 0x9c, 0x8f, 0x9b, 0xfb, 0x51, 0x98,
	0x77, 0x4f, 0xdf, 0xc0, 0x32, 0x73, 0x17, 0xa4, 0x26, 0x5e, 0x83, 0x7d, 0xa4, 0x01, 0x3e, 0x34,
	0x35, 0xe1, 0x3a, 0x30, 0x9b, 0x65, 0x93, 0x9d, 0xb5, 0x27, 0x6b, 0xb9, 0xb5, 0xc6, 0x94, 0xf8,
	0xd0, 0x2c, 0xc6, 0x07, 0xeb, 0xc0, 0xdc, 0x72, 0x0f, 0xcc, 0xfc, 0x44, 0x18, 0x65, 0x79, 0x1a,
	0x1d, 0x8f, 0x2c, 0x1f, 0xee, 0xa0, 0x13, 0xfd, 0xf8, 0x9f, 0x57, 0xe5, 0xf6, 0x09, 0xe3, 0x2e,
	0x1b, 0xbc, 0x19, 0xbd, 0xea, 0xed, 0x21, 0xf4, 0xaa, 0xb7, 0x07, 0xcf, 0x2a, 0xe0, 0xcb, 0xe6,
	0x75, 0xbd, 0x46, 0xf8, 0xd8, 0xf1, 0x9e, 0x2e, 0x49, 0x45, 0x14, 0x54, 0x34, 0xe4, 0xad, 0x28,
	0x79, 0x3e, 0x64, 0x5b, 0x49, 0x4f, 0xee, 0x1c, 0x07, 0x85, 0x62, 0x20, 0x20, 0x01, 0x0b, 0x33,
	0xc8, 0x31, 0xf0, 0x02, 0xd5, 0xc0, 0x26, 0xba, 0x98, 0xff, 0xac, 0x90, 0x39, 0xfc, 0x28, 0xdb,
	0x4b, 0x4e, 0xa2, 0x78, 0x7a, 0x59, 0x49, 0x2f, 0x7a, 0xd5, 0x5d, 0xf4, 0xa9, 0x35, 0x10, 0xf8,
	0x84, 0xe1, 0x6a, 0x34, 0x60, 0x9b, 0x68, 0x7d, 0x92, 0x89, 0xce, 0x8e, 0x37, 0xd1, 0x46, 0x61,
	0x3f, 0xaa, 0x89, 0x37, 0x9d, 0x89, 0xff, 0x4f, 0x45, 0x5e, 0x9d, 0xf2, 0x89, 0x27, 0xa3, 0xfc,
	0x0d, 0xce, 0x7c, 0x83, 0x10, 0xfc, 0x86, 0xe9, 0x65, 0x35, 0xf2, 0x8d, 0xcf, 0xfd, 0xdf, 0xab,
	0x6a, 0xee, 0xe8, 0x88, 0xa7, 0x6f, 0x0d, 0xb9, 0x01, 0xaa, 0x45, 0xc7, 0x32, 0x3e, 0xb7, 0x31,
	0xfd, 0x61, 0xcd, 0xf1, 0x87, 0x96, 0xc6, 0xea, 0xae, 0xc6, 0xdc, 0xa8, 0x30, 0x3b, 0x3d, 0x2a,
	0x34, 0x8a, 0x51, 0xc1, 0xd0, 0x4e, 0xd3, 0xd6, 0x8e, 0x4f, 0x1a, 0xdb, 0x6c, 0x68, 0x24, 0x32,
	0x92, 0xe4, 0x63, 0xfe, 0x6e, 0x18, 0xe1, 0x8d, 0x19, 0x81, 0x1b, 0x27, 0x45, 0x4b, 0x1e, 0x34,
	0x6b, 0xc3, 0x89, 0x53, 0xd1, 0x96, 0xbe, 0xe7, 0x1c, 0x7d, 0xff, 0x99, 0xd6, 0xf7, 0xbd, 0x94,
	0xbb, 0xc0, 0x57, 0xd6, 0x77, 0x21, 0x8a, 0xcd, 0x5c, 0x27, 0x8a, 0xd5, 0x26, 0x47, 0xb1, 0x7a,
	0xc1, 0x72, 0xb8, 0xa4, 0x51, 0x77, 0x54, 0xb4, 0x7a, 0xb3, 0x04, 0xea, 0x11, 0xf7, 0xcd, 0x0a,
	0x50, 0x5c, 0x95, 0xea, 0xc8, 0x17, 0x4d, 0x53, 0x33, 0x9d, 0x7f, 0x6b, 0x11, 0x22, 0x34, 0x74,
	0xad, 0x57, 0x49, 0x63, 0xd4, 0xb3, 0x46, 0x66, 0x0f, 0xf0, 0x1d, 0x04, 0xbe, 0xa7, 0x12, 0x94,
	0x53, 0xc5, 0xac, 0x15, 0xaa, 0x98, 0x96, 0x19, 0xd7, 0x27, 0x99, 0xf1, 0xec, 0x24, 0x33, 0x6e,
	0xb8, 0x66, 0xdc, 0x21, 0xed, 0xfb, 0x49, 0xf2, 0xd4, 0x36, 0x35, 0x13, 0xb2, 0x4c, 0x8a, 0x38,
	0x26, 0xe5, 0x6e, 0x82, 0xf6, 0xf4, 0x4d, 0x30, 0x57, 0xba, 0x09, 0xb6, 0xd9, 0x10, 0x94, 0x82,
	0x95, 0x42, 0x49, 0x9a, 0x9b, 0x60, 0xc1, 0xde, 0x04, 0x05, 0x33, 0x5b, 0xbc, 0x8e, 0x99, 0x79,
	0x25, 0x66, 0x26, 0x8c, 0x09, 0x3e, 0x8f, 0x55, 0x41, 0x45, 0x5b, 0x86, 0x46, 0x8b, 0x86, 0xc6,
	0xd5, 0x84, 0xf7, 0x44, 0xcb, 0xd0, 0x50, 0x03, 0xfa, 0x72, 0x73, 0x05, 0x38, 0xe2, 0x72, 0xd3,
	0x32, 0xce, 0xd5, 0x89, 0xc6, 0xb9, 0x56, 0x62, 0x9c, 0x6a, 0xdb, 0xaf, 0x3b, 0xdb, 0xfe, 0x16,
	0x69, 0x3d, 0x08, 0xbb, 0xb9, 0xbc, 0x85, 0x86, 0x7e, 0x15, 0x00, 0x2f, 0xe1, 0x80, 0xf3, 0x16,
	0x34, 0x43, 0x02, 0x2c, 0x38, 0xcc, 0x4e, 0x91, 0x73, 0x03, 0x38, 0x1a, 0x00, 0x97, 0x1e, 0xc5,
	0x58, 0x8d, 0xb8, 0x89, 0x5a, 0x91, 0x34, 0xda, 0x62, 0xcc, 0xb0, 0xe5, 0x2d, 0x6c, 0xa9, 0x00,
	0xa8, 0xd1, 0x26, 0x19, 0x34, 0x14, 0x57, 0x64, 0x82, 0x84, 0x17, 0x76, 0x49, 0x86, 0xcd, 0x36,
	0x70, 0x06, 0x92, 0x06, 0x3b, 0x64, 0x71, 0x5f, 0x3e, 0x1a, 0x78, 0x1b, 0xd8, 0x26, 0xc4, 0xfb,
	0xe5, 0xea, 0x3d, 0x8a, 0x86, 0x7e, 0x07, 0x1f, 0x6c, 0x08, 0x92, 0xaf, 0xb2, 0xca, 0xe7, 0x39,
	0xfb, 0x1d, 0x60, 0x5b, 0x18, 0xbc, 0xe0, 0x63, 0xe1, 0x53, 0xf9, 0xe4, 0xe3, 0x0e, 0xf6, 0x6f,
	0x40, 0xbc, 0x17, 0xb8, 0xe1, 0x97, 0x22, 0xef, 0x62, 0x2f, 0x26, 0x06, 0xd7, 0x8a, 0x61, 0x2a,
	0x25, 0xde, 0xc3, 0xfb, 0x23, 0x8d, 0xc0, 0x43, 0xa5, 0xfc, 0x94, 0x29, 0x89, 0x6f, 0x81, 0x84,
	0x85, 0xc9, 0x77, 0x86, 0x70, 0x36, 0x7b, 0x5f, 0xbf, 0x33, 0x84, 0xe3, 0x99, 0x78, 0x9d, 0xc8,
	0xd7, 0xff, 0x03, 0x88, 0xa3, 0x92, 0xe4, 0xd9, 0x96, 0xce, 0xbf, 0x41, 0x60, 0x13, 0x04, 0x1c,
	0x94, 0xef, 0x8b, 0xdd, 0xf8, 0x59, 0x82, 0x8f, 0x27, 0xf2, 0x51, 0x06, 0x65, 0xaf, 0x56, 0x60,
	0x83, 0x13, 0x2b, 0x5f, 0x7f, 0x39, 0x43, 0x16, 0x0e, 0x93, 0x2c, 0xe2, 0x67, 0x92, 0x6b, 0x5d,
	0xcd, 0x4c, 0xce, 0x3b, 0x54, 0x51, 0x9b, 0x9f, 0x8a, 0xf9, 0x31, 0x5f, 0x84, 0x84, 0xf9, 0xa0,
	0x80, 0xdb, 0xae, 0xaa, 0x56, 0x12, 0x71, 0xe5, 0xb8, 0x8c, 0x74, 0xd5, 0xc2, 0xec, 0x3c, 0x65,
	0x56, 0x66, 0x70, 0x65, 0x79, 0x8a, 0xb8, 0xde, 0x2b, 0x8f, 0xc4, 0x15, 0xe7, 0x18, 0xb1, 0x1d,
	0xa5, 0xac, 0x0b, 0xe7, 0xb6, 0x16, 0xf0, 0x34, 0xc0, 0xb9, 0x3b, 0x03, 0xf6, 0x4c, 0x9e, 0xea,
	0x2a, 0x9b, 0xf5, 0x40, 0x03, 0x70, 0x0a, 0x1f, 0x32, 0x91, 0xf9, 0xf3, 0x53, 0x38, 0x27, 0xc0,
	0x75, 0x44, 0xdf, 0x13, 0x0b, 0x34, 0x87, 0x3d, 0x2a, 0xc0, 0x0c, 0x1e, 0xf3, 0x76, 0xf0, 0x30,
	0x97, 0x6d, 0xc1, 0x59, 0xb6, 0xff, 0x98, 0x21, 0x8b, 0x52, 0x15, 0xd7, 0x7b, 0x03, 0x32, 0xf9,
	0x02, 0xf6, 0x23, 0xb2, 0x24, 0x88, 0xc2, 0xc2, 0x15, 0x19, 0x85, 0xb5, 0xa9, 0x4d, 0x5b, 0x9b,
	0xfa, 0xa4, 0xb5, 0x99, 0x75, 0xd6, 0x46, 0x69, 0xb1, 0xe1, 0x68, 0x51, 0xaf, 0x4b, 0x73, 0xe2,
	0xba, 0xb4, 0xdc, 0x75, 0xf1, 0x49, 0x83, 0x3b, 0xce, 0xf0, 0x44, 0xa6, 0x50, 0x92, 0x34, 0xed,
	0xa0, 0x6d, 0xdb, 0xc1, 0x06, 0x21, 0xdf, 0x0d, 0xd3, 0xd8, 0x5a, 0x36, 0x03, 0x11, 0xfa, 0x14,
	0xec, 0x79, 0x1c, 0x8f, 0x02, 0xec, 0x35, 0x5f, 0x98, 0xb0, 0xe6, 0x8b, 0xe3, 0xd7, 0xdc, 0x7d,
	0xcf, 0xf9, 0x47, 0x55, 0xb2, 0x10, 0x84, 0x39, 0xeb, 0x5d, 0xb7, 0x60, 0x35, 0x3e, 0x2f, 0xb9,
	0x43, 0xe6, 0x76, 0x9e, 0x85, 0x83, 0x91, 0x2c, 0x03, 0x61, 0xd6, 0x66, 0x61, 0x5c, 0x46, 0xbc,
	0xec, 0x7d, 0xdc, 0x4d, 0x52, 0x26, 0x1e, 0x7e, 0x5b, 0x98, 0x3e, 0x55, 0xa3, 0x48, 0x1d, 0x26,
	0x6a, 0x42, 0xc6, 0x03, 0x1d, 0x14, 0x99, 0x05, 0x11, 0x0b, 0xe3, 0x59, 0x12, 0xbe, 0x10, 0x16,
	0x57, 0xa7, 0x82, 0x9a, 0x78, 0x64, 0xf8, 0xbb, 0x0a, 0x59, 0xb7, 0x95, 0x21, 0x4b, 0x86, 0xf9,
	0xeb, 0x24, 0xb3, 0xaa, 0x13, 0x43, 0x2d, 0x36, 0x68, 0x8c, 0x16, 0x7d, 0x96, 0x1c, 0xed, 0x1a,
	0x99, 0x0d, 0x58, 0x36, 0x1a, 0xe4, 0xa2, 0x46, 0x27, 0xa8, 0x89, 0x8f, 0xe0, 0x7f, 0x51, 0x21,
	0x4b, 0x30, 0x0b, 0x51, 0x88, 0x18, 0xc5, 0x51, 0x76, 0xfa, 0x5a, 0x0e, 0x78, 0x83, 0x10, 0xec,
	0xc5, 0x98, 0x80, 0x81, 0xc0, 0xd6, 0x05, 0x4a, 0x9c, 0xcf, 0xc5, 0x53, 0x50, 0x13, 0x33, 0x65,
	0xc4, 0x7c, 0xaa, 0xa6, 0xcc, 0xd4, 0x59, 0xfd, 0x4d, 0x85, 0xb4, 0x8d, 0x59, 0xbd, 0xd6, 0x7c,
	0x56, 0x48, 0x1d, 0xef, 0xb3, 0xd1, 0x19, 0x21, 0xc1, 0xbf, 0x7e, 0xc4, 0x32, 0x7c, 0xfd, 0x8b,
	0xce, 0x47, 0xd1, 0xf0, 0xb8, 0x89, 0xff, 0x86, 0x83, 0xe4, 0x19, 0x8b, 0xe5, 0xf8, 0x1d, 0x74,
	0xe2, 0x0c, 0xfe, 0xbb, 0x4a, 0xe6, 0x1e, 0x9f, 0x86, 0x29, 0xfb, 0xd5, 0xff, 0xb7, 0xa6, 0xf8,
	0xaf, 0x99, 0xfa, 0xb5, 0xfe, 0x35, 0x33, 0x5b, 0xf2, 0xaf, 0x19, 0xeb, 0x5f, 0x31, 0x0d, 0xf7,
	0x5f, 0x31, 0xf6, 0x7f, 0x5f, 0x9a, 0x85, 0xff, 0xbe, 0xa8, 0x1a, 0x73, 0xab, 0xac, 0xc6, 0x4c,
	0xc6, 0xd6, 0x98, 0xdb, 0x13, 0x6b, 0xcc, 0xee, 0xd9, 0xf4, 0x1f, 0x6a, 0x84, 0x80, 0xea, 0x83,
	0x64, 0xf4, 0xff, 0x2b, 0x31, 0x57, 0x9c, 0x1a, 0x19, 0x74, 0xa0, 0x6b, 0x64, 0x82, 0x2c, 0x9c,
	0xbd, 0xaa, 0x93, 0x5f, 0x90, 0xd4, 0x4b, 0x2b, 0x85, 0xda, 0x62, 0x67, 0x27, 0x96, 0x5e, 0x1a,
	0x25, 0x45, 0x27, 0x5d, 0x7c, 0x6e, 0x4e, 0x2b, 0x3e, 0xb7, 0xa6, 0x9f, 0xb0, 0xc8, 0xd4, 0xe2,
	0x73, 0xfb, 0x1a, 0xc5, 0xe7, 0xb9, 0xeb, 0x9c, 0xa7, 0xe6, 0x27, 0x1f, 0xdb, 0x17, 0xec, 0x63,
	0xfb, 0x26, 0x59, 0x04, 0x95, 0xe3, 0x5d, 0x81, 0xf1, 0xff, 0x05, 0x17, 0xe6, 0x3a, 0x01, 0x08,
	0x0e, 0x3b, 0x1e, 0x9e, 0x30, 0x14, 0xa0, 0xb8, 0x50, 0xd0, 0xc7, 0x23, 0x9b, 0x06, 0x2c, 0x53,
	0xa2, 0x8e, 0x29, 0xfd, 0xb1, 0x34, 0x25, 0x70, 0xf0, 0x6f, 0xc0, 0x94, 0x8c, 0x50, 0x52, 0xb3,
	0x43, 0xc9, 0xfb, 0x64, 0x41, 0x9c, 0xaa, 0xe5, 0x5d, 0x06, 0xa6, 0x40, 0x0e, 0x6a, 0x9b, 0xc3,
	0xec, 0x34, 0x73, 0x68, 0x4c, 0x37, 0x87, 0xe6, 0x54, 0x73, 0x68, 0x5d, 0xc3, 0x1c, 0xc8, 0x75,
	0xcc, 0xa1, 0x3d, 0xd9, 0x1c, 0xe6, 0x0a, 0xe6, 0x00, 0xca, 0xd9, 0x89, 0xb3, 0x51, 0x8a, 0xe6,
	0x80, 0xf6, 0xe4, 0xc2, 0xd6, 0x01, 0x6f, 0x7f, 0x74, 0x26, 0xec, 0xca, 0xc2, 0x8a, 0x37, 0x3d,
	0x8b, 0x65, 0x37, 0x3d, 0x93, 0xb2, 0xa9, 0x7f, 0x69, 0x92, 0x26, 0x18, 0xc7, 0xb5, 0xea, 0x3b,
	0x5f, 0xa3, 0x69, 0xbc, 0x59, 0xff, 0x62, 0xd6, 0x86, 0x9a, 0x4e, 0x6d, 0xa8, 0x68, 0x94, 0xad,
	0x52, 0xa3, 0xb4, 0x2f, 0xe1, 0x48, 0xd9, 0x25, 0x9c, 0x36, 0xda, 0xf6, 0x34, 0xa3, 0x9d, 0x9b,
	0x6e, 0xb4, 0xf3, 0x45, 0xa3, 0x35, 0x6b, 0x31, 0x0b, 0x4e, 0x2d, 0xc6, 0x31, 0xe8, 0xc5, 0x6b,
	0x18, 0xb4, 0x77, 0x1d, 0x83, 0x5e, 0x9a, 0x6c, 0xd0, 0xb4, 0x70, 0xdf, 0xa4, 0xab, 0x3b, 0xcb,
	0x13, 0xab, 0x3b, 0x2b, 0x6e, 0x75, 0xc7, 0xaa, 0xe0, 0xac, 0x8e, 0xad, 0xe0, 0xac, 0x01, 0xa7,
	0xac, 0x82, 0xb3, 0x8e, 0x6d, 0xca, 0x2b, 0x38, 0xfe, 0xa4, 0x0a, 0xce, 0x5b, 0xd8, 0x52, 0x57,
	0x70, 0x9c, 0x5a, 0xcc, 0x8d, 0x62, 0x2d, 0xe6, 0x8e, 0x48, 0x86, 0x1e, 0x8c, 0xd8, 0xe0, 0x01,
	0xc3, 0x0a, 0x51, 0x35, 0xb0, 0x30, 0x7e, 0xf0, 0x07, 0xfa, 0xf7, 0xa3, 0x93, 0xd3, 0xcf, 0xc3,
	0xf3, 0xa3, 0x64, 0x30, 0x10, 0xc5, 0xa2, 0x02, 0x5e, 0xa8, 0xe0, 0xdc, 0x2e, 0xa9, 0xe0, 0x6c,
	0x48, 0xd7, 0x9d, 0x9f, 0x8a, 0x97, 0x57, 0xd5, 0xc0, 0x40, 0xac, 0xba, 0xca, 0xdb, 0x4e, 0x5d,
	0xc5, 0x75, 0x20, 0x9d, 0x12, 0x07, 0x62, 0xd4, 0x5e, 0xde, 0x99, 0x56, 0x7b, 0xb9, 0x53, 0x5a,
	0x7b, 0x31, 0x9d, 0xcb, 0xbb, 0x8e, 0x73, 0xf9, 0xa7, 0x25, 0x52, 0x87, 0xff, 0x6d, 0x4f, 0xf1,
	0x2c, 0x6b, 0x64, 0xf6, 0x71, 0x32, 0x4a, 0xbb, 0x32, 0x67, 0x14, 0x14, 0xfd, 0x80, 0x34, 0x76,
	0x0f, 0xb7, 0xd4, 0x7f, 0xb9, 0x16, 0x3e, 0x99, 0xff, 0xf8, 0x2c, 0x8c, 0xe2, 0x8f, 0x77, 0x87,
	0x90, 0xc8, 0x05, 0x92, 0x4b, 0xef, 0x92, 0xc5, 0x63, 0xfb, 0x4f, 0x64, 0xfe, 0x45, 0xa7, 0x33,
	0xb3, 0xd9, 0xfe, 0x64, 0x15, 0x5b, 0x38, 0x7f, 0x31, 0x0b, 0x5c, 0x71, 0xba, 0x47, 0x96, 0x8f,
	0x8b, 0x7f, 0x25, 0xf6, 0x2f, 0xb1, 0x97, 0xb7, 0x4a, 0x7b, 0xe1, 0x12, 0x41, 0x59, 0x33, 0xba,
	0x4b, 0xe8, 0x71, 0xe1, 0x4f, 0xbd, 0xfe, 0x15, 0x76, 0xe6, 0x97, 0x76, 0x76, 0x18, 0x9e, 0x07,
	0x25, 0x8d, 0xe8, 0xa7, 0x64, 0xed, 0xb8, 0xf4, 0xef, 0xad, 0xfe, 0x0b, 0xec, 0xee, 0x56, 0xf9,
	0xd8, 0x50, 0x28, 0x18, 0xd3, 0x98, 0x06, 0x64, 0xf5, 0xb8, 0xec, 0x4f, 0x91, 0xfe, 0x97, 0xd8,
	0xeb, 0xcd, 0xf2, 0x41, 0x82, 0x4c, 0x50, 0xde, 0xb4, 0x44, 0x87, 0xf0, 0xff, 0xb7, 0xef, 0x4f,
	0xd2, 0x21, 0x97, 0x08, 0xca, 0x9a, 0x99, 0x6b, 0x2a, 0xfc, 0xba, 0xff, 0x83, 0xd2, 0x35, 0x95,
	0x85, 0x19, 0x57, 0x9c, 0xfe, 0x21, 0xf1, 0x8f, 0xc7, 0x3c, 0xd3, 0xf7, 0x7f, 0x88, 0x5d, 0x6d,
	0x94, 0x76, 0xa5, 0xc4, 0x82, 0xb1, 0x1d, 0x94, 0x74, 0xae, 0x5f, 0x92, 0xff, 0x68, 0x52, 0xe7,
	0x4a, 0x2c, 0x18, 0xdb, 0x01, 0xfd, 0x5d, 0xb2, 0x70, 0x6c, 0xbd, 0x74, 0xf2, 0x7f, 0x8c, 0x5d,
	0xae, 0xd8, 0x5d, 0x8a, 0x62, 0xa2, 0x23, 0x6c, 0x2e, 0xae, 0xf5, 0x8c, 0xcf, 0xff, 0x49, 0xe9,
	0xe2, 0x5a, 0x32, 0x41, 0x79, 0x53, 0xfa, 0x80, 0x2c, 0x1d, 0xbb, 0x8f, 0xd8, 0xfc, 0x9f, 0x62,
	0x7f, 0xeb, 0x65, 0xfd, 0xdd, 0x1b, 0x0e, 0x83, 0x62, 0x13, 0x73, 0x6b, 0xe8, 0x47, 0x5c, 0xfe,
	0xcf, 0x4a, 0xb7, 0x86, 0x16, 0x08, 0x4a, 0x1a, 0x99, 0x43, 0x52, 0x4e, 0xcd, 0xff, 0x79, 0xe9,
	0x90, 0x14, 0x3f, 0x28, 0x36, 0xa1, 0xdf, 0x26, 0xed, 0x44, 0x3f, 0xe7, 0xf1, 0x2f, 0xee, 0x42,
	0x0f, 0x4b, 0xd8, 0x83, 0xf1, 0xd0, 0x27, 0x30, 0xc5, 0xe8, 0x6f, 0x10, 0x92, 0x28, 0x57, 0xe8,
	0x5f, 0x62, 0x23, 0xcf, 0x68, 0x04, 0x8c, 0xc0, 0x10, 0xd2, 0x1f, 0x82, 0x67, 0x00, 0xfe, 0x55,
	0xc9, 0x87, 0xf0, 0x81, 0x80, 0x29, 0x46, 0x7f, 0x9b, 0xcc, 0x25, 0xc6, 0x53, 0x00, 0xff, 0xe2,
	0x09, 0x34, 0xa3, 0xa2, 0x99, 0xc1, 0x0a, 0x2c, 0x41, 0xfa, 0x3b, 0x64, 0x3e, 0x31, 0xaf, 0xd2,
	0xfd, 0x4b, 0x6c, 0xb9, 0xec, 0xb6, 0x4c, 0x46, 0x79, 0x60, 0x8b, 0x1a, 0x6d, 0x31, 0xa5, 0xf1,
	0xaf, 0xca, 0xda, 0x22, 0x2f, 0xb0, 0x45, 0x8d, 0xb6, 0x78, 0xad, 0xea, 0xbf, 0x28, 0x6b, 0x8b,
	0xbc, 0xc0, 0x16, 0x05, 0xad, 0xaa, 0x0b, 0x47, 0xff, 0xcb, 0x27, 0x96, 0x56, 0x15, 0x23, 0x30,
	0x84, 0xe8, 0xef, 0x91, 0x85, 0xa1, 0x55, 0xba, 0xf7, 0x2f, 0xbe, 0xa8, 0x98, 0xbb, 0xc5, 0x2e,
	0xec, 0x07, 0x8e, 0x34, 0xbd, 0x47, 0x16, 0x87, 0x76, 0x0d, 0xd9, 0xbf, 0x14, 0x1d, 0xac, 0xda,
	0x1d, 0x28, 0x4f, 0xe3, 0xc8, 0xf3, 0x21, 0xa4, 0x56, 0x15, 0xce, 0xbf, 0x78, 0x69, 0x0d, 0xc1,
	0xae, 0xd1, 0x05, 0x8e, 0x34, 0xfd, 0x03, 0xb2, 0x9e, 0x96, 0x57, 0xf1, 0xfc, 0x4b, 0xd1, 0xd1,
	0xed, 0xb2, 0x8e, 0x94, 0x58, 0x30, 0xae, 0x3d, 0x7d, 0x48, 0x96, 0x52, 0xb7, 0xb4, 0xe6, 0x5f,
	0x89, 0x4e, 0xd7, 0x8d, 0x4e, 0x4d, 0x81, 0xa0, 0xd8, 0x86, 0xfe, 0x26, 0x69, 0x1b, 0xa0, 0xff,
	0x42, 0x74, 0xb1, 0x54, 0xe8, 0x22, 0x30, 0xe5, 0xe8, 0x77, 0xc8, 0x5c, 0x66, 0x94, 0x90, 0xfc,
	0x8b, 0xaf, 0x2a, 0xa6, 0xf9, 0x9a, 0xe5, 0xa5, 0xc0, 0x92, 0xa4, 0x9f, 0x10, 0x92, 0xa9, 0x0a,
	0x88, 0x7f, 0x29, 0xda, 0x79, 0x46, 0x3b, 0xe0, 0x04, 0x86, 0x94, 0x6a, 0x03, 0x9b, 0xc9, 0xbf,
	0x2a, 0x69, 0x03, 0x9c, 0xc0, 0x90, 0xa2, 0x1f, 0x91, 0x66, 0x26, 0x4e, 0x40, 0xfe, 0x0b, 0xd1,
	0x62, 0xc1, 0x68, 0xc1, 0xed, 0x4d, 0x49, 0xdc, 0xf9, 0x98, 0xb4, 0x20, 0xa5, 0xd9, 0x8b, 0xb2,
	0x9c, 0xbe, 0x43, 0xea, 0x49, 0x3e, 0x8c, 0xba, 0x3e, 0xb6, 0x6a, 0x0b, 0x3b, 0xe5, 0xfc, 0x00,
	0x39, 0x1f, 0xfe, 0xb2, 0x4e, 0x1a, 0x22, 0x5f, 0xa1, 0x2b, 0x85, 0x34, 0xc5, 0xbb, 0xe8, 0x50,
	0xbf, 0x34, 0xf5, 0xf0, 0x2e, 0x3b, 0x74, 0xbd, 0x2c, 0x8d, 0xf0, 0xae, 0x3a, 0xf4, 0xe6, 0xb8,
	0xa4, 0xc0, 0x7b, 0xd1, 0xa1, 0x37, 0xc6, 0x84, 0x76, 0xef, 0xcb, 0xb2, 0x6f, 0xf1, 0x58, 0xeb,
	0x7d, 0xbf, 0x63, 0x8e, 0x4d, 0x58, 0xb5, 0xf7, 0x83, 0x0e, 0xbd, 0x3d, 0x3e, 0x84, 0x7a, 0x3f,
	0x2c, 0x63, 0xab, 0x18, 0xe6, 0xfd, 0xa8, 0x43, 0x97, 0xdd, 0x30, 0xe6, 0xfd, 0xd8, 0x1a, 0x9e,
	0x15, 0x61, 0xbc, 0x9f, 0x74, 0xe8, 0x5a, 0x49, 0x90, 0xf1, 0x7e, 0x6a, 0x29, 0x42, 0xfb, 0x7f,
	0xef, 0x67, 0x56, 0x03, 0x65, 0xfb, 0xde, 0xcf, 0x3b, 0xd4, 0xb3, 0x5c, 0xba, 0x77, 0x71, 0x97,
	0x2e, 0x9a, 0xee, 0xda, 0xbb, 0xbc, 0xab, 0x45, 0xc0, 0xcb, 0x7a, 0x57, 0x77, 0xe9, 0x92, 0xed,
	0x68, 0xbd, 0x8b, 0x27, 0x94, 0x3a, 0x2e, 0xd4, 0xbb, 0x34, 0x31, 0xf4, 0x77, 0xde, 0x95, 0x89,
	0xa1, 0x1f, 0xf3, 0x5e, 0x3c, 0x81, 0x2f, 0x2a, 0x2f, 0xe5, 0x7d, 0xf9, 0x84, 0xae, 0xb8, 0x8e,
	0xca, 0xbb, 0xf8, 0xa2, 0x42, 0x57, 0x0b, 0xee, 0xc7, 0xbb, 0xfc, 0xa2, 0xc2, 0x85, 0xed, 0x2d,
	0xed, 0x5d, 0xbc, 0xac, 0xd0, 0xdb, 0x63, 0x1d, 0x85, 0x77, 0xf9, 0xb2, 0x42, 0xd7, 0x4b, 0x36,
	0xbb, 0x77, 0xf5, 0xb2, 0x42, 0x97, 0xac, 0xcd, 0xeb, 0xbd, 0x78, 0x59, 0xa1, 0xd4, 0xde, 0x98,
	0xde, 0xc5, 0x57, 0x15, 0xea, 0x99, 0x5b, 0xce, 0xbb, 0x34, 0x10, 0xd8, 0x2a, 0xde, 0xd5, 0x57,
	0x15, 0xba, 0xa0, 0xb7, 0x8b, 0xf7, 0xe2, 0xab, 0xca, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x60,
	0xd5, 0x71, 0xba, 0x9a, 0x49, 0x00, 0x00,
}
