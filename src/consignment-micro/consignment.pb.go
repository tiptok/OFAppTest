// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consignment.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Consignment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consignment) Reset()         { *m = Consignment{} }
func (m *Consignment) String() string { return proto.CompactTextString(m) }
func (*Consignment) ProtoMessage()    {}
func (*Consignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3804bf87090b51a9, []int{0}
}

func (m *Consignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consignment.Unmarshal(m, b)
}
func (m *Consignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consignment.Marshal(b, m, deterministic)
}
func (m *Consignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consignment.Merge(m, src)
}
func (m *Consignment) XXX_Size() int {
	return xxx_messageInfo_Consignment.Size(m)
}
func (m *Consignment) XXX_DiscardUnknown() {
	xxx_messageInfo_Consignment.DiscardUnknown(m)
}

var xxx_messageInfo_Consignment proto.InternalMessageInfo

func (m *Consignment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Consignment) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type Response struct {
	Created              bool         `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Consignment          *Consignment `protobuf:"bytes,2,opt,name=consignment,proto3" json:"consignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_3804bf87090b51a9, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetConsignment() *Consignment {
	if m != nil {
		return m.Consignment
	}
	return nil
}

type RequestAll struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAll) Reset()         { *m = RequestAll{} }
func (m *RequestAll) String() string { return proto.CompactTextString(m) }
func (*RequestAll) ProtoMessage()    {}
func (*RequestAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_3804bf87090b51a9, []int{2}
}

func (m *RequestAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAll.Unmarshal(m, b)
}
func (m *RequestAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAll.Marshal(b, m, deterministic)
}
func (m *RequestAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAll.Merge(m, src)
}
func (m *RequestAll) XXX_Size() int {
	return xxx_messageInfo_RequestAll.Size(m)
}
func (m *RequestAll) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAll.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAll proto.InternalMessageInfo

type ResponseAll struct {
	Consignments         []*Consignment `protobuf:"bytes,1,rep,name=consignments,proto3" json:"consignments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResponseAll) Reset()         { *m = ResponseAll{} }
func (m *ResponseAll) String() string { return proto.CompactTextString(m) }
func (*ResponseAll) ProtoMessage()    {}
func (*ResponseAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_3804bf87090b51a9, []int{3}
}

func (m *ResponseAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseAll.Unmarshal(m, b)
}
func (m *ResponseAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseAll.Marshal(b, m, deterministic)
}
func (m *ResponseAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseAll.Merge(m, src)
}
func (m *ResponseAll) XXX_Size() int {
	return xxx_messageInfo_ResponseAll.Size(m)
}
func (m *ResponseAll) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseAll.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseAll proto.InternalMessageInfo

func (m *ResponseAll) GetConsignments() []*Consignment {
	if m != nil {
		return m.Consignments
	}
	return nil
}

func init() {
	proto.RegisterType((*Consignment)(nil), "main.Consignment")
	proto.RegisterType((*Response)(nil), "main.Response")
	proto.RegisterType((*RequestAll)(nil), "main.RequestAll")
	proto.RegisterType((*ResponseAll)(nil), "main.ResponseAll")
}

func init() { proto.RegisterFile("consignment.proto", fileDescriptor_3804bf87090b51a9) }

var fileDescriptor_3804bf87090b51a9 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x9b, 0xb5, 0x68, 0x9d, 0x94, 0x62, 0xe6, 0x14, 0x7a, 0x2a, 0x39, 0x79, 0x5a, 0xb0,
	0x45, 0x10, 0x6f, 0xa5, 0x82, 0xf7, 0xf4, 0xe4, 0xb1, 0x66, 0x07, 0x0d, 0xa4, 0xc9, 0xba, 0x89,
	0xbe, 0x80, 0x2f, 0x2e, 0x9b, 0x12, 0x4c, 0xd1, 0x5b, 0x32, 0xf9, 0x7f, 0xfc, 0x26, 0x20, 0x4c,
	0xf0, 0xd1, 0xbe, 0xf9, 0x23, 0xf9, 0xd4, 0xf6, 0x43, 0x48, 0x01, 0xa7, 0xc7, 0x83, 0xf5, 0xea,
	0x0e, 0xf8, 0xee, 0xf7, 0x09, 0x17, 0xd0, 0xd8, 0x4e, 0xb2, 0x15, 0xbb, 0xbd, 0xd6, 0x8d, 0xed,
	0x10, 0x61, 0xda, 0x51, 0x34, 0xb2, 0xc9, 0x93, 0x7c, 0x56, 0x2f, 0x30, 0xd3, 0x14, 0xfb, 0xe0,
	0x23, 0xa1, 0x84, 0x2b, 0x33, 0xd0, 0x21, 0xd1, 0xc9, 0x34, 0xd3, 0xe5, 0x8a, 0x1b, 0xe0, 0x55,
	0x67, 0x0e, 0xe0, 0x6b, 0xd1, 0x8e, 0xa5, 0x6d, 0xd5, 0xa8, 0x6b, 0x95, 0x9a, 0x03, 0x68, 0xfa,
	0xf8, 0xa4, 0x98, 0xb6, 0xce, 0xa9, 0x27, 0xe0, 0xa5, 0x68, 0xeb, 0x1c, 0xde, 0xc3, 0xbc, 0xd2,
	0x46, 0xc9, 0x56, 0x17, 0xff, 0x47, 0x9e, 0xc9, 0xd6, 0xdf, 0x0c, 0xf8, 0xfe, 0xdd, 0xf6, 0x7b,
	0x1a, 0xbe, 0xac, 0x21, 0x7c, 0x00, 0xb1, 0xcb, 0x8c, 0xf5, 0xde, 0x7f, 0x53, 0x96, 0x8b, 0xd3,
	0xa8, 0x10, 0xa8, 0x09, 0x3e, 0x82, 0x78, 0xa6, 0x91, 0xac, 0x76, 0xde, 0x14, 0x59, 0xc1, 0x5e,
	0x8a, 0x73, 0xe3, 0xb8, 0xc9, 0xe4, 0xf5, 0x32, 0x7f, 0xfa, 0xe6, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x41, 0x92, 0x5b, 0x3b, 0x89, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShipServiceClient is the client API for ShipService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipServiceClient interface {
	CreateConsignment(ctx context.Context, in *Consignment, opts ...grpc.CallOption) (*Response, error)
	GetAllConsignment(ctx context.Context, in *RequestAll, opts ...grpc.CallOption) (*ResponseAll, error)
}

type shipServiceClient struct {
	cc *grpc.ClientConn
}

func NewShipServiceClient(cc *grpc.ClientConn) ShipServiceClient {
	return &shipServiceClient{cc}
}

func (c *shipServiceClient) CreateConsignment(ctx context.Context, in *Consignment, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/main.ShipService/CreateConsignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipServiceClient) GetAllConsignment(ctx context.Context, in *RequestAll, opts ...grpc.CallOption) (*ResponseAll, error) {
	out := new(ResponseAll)
	err := c.cc.Invoke(ctx, "/main.ShipService/GetAllConsignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShipServiceServer is the server API for ShipService service.
type ShipServiceServer interface {
	CreateConsignment(context.Context, *Consignment) (*Response, error)
	GetAllConsignment(context.Context, *RequestAll) (*ResponseAll, error)
}

func RegisterShipServiceServer(s *grpc.Server, srv ShipServiceServer) {
	s.RegisterService(&_ShipService_serviceDesc, srv)
}

func _ShipService_CreateConsignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consignment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipServiceServer).CreateConsignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ShipService/CreateConsignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipServiceServer).CreateConsignment(ctx, req.(*Consignment))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipService_GetAllConsignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipServiceServer).GetAllConsignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ShipService/GetAllConsignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipServiceServer).GetAllConsignment(ctx, req.(*RequestAll))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShipService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.ShipService",
	HandlerType: (*ShipServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateConsignment",
			Handler:    _ShipService_CreateConsignment_Handler,
		},
		{
			MethodName: "GetAllConsignment",
			Handler:    _ShipService_GetAllConsignment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "consignment.proto",
}
